// positive sp value has been detected, the output may be wrong!
void __fastcall sub_27FDBD0(
        int a1,
        int a2,
        int a3,
        int a4,
        int a5,
        int a6,
        char *a7,
        char *a8,
        void *a9,
        int a10,
        void *p,
        void *a12,
        int a13)
{
  int v13; // r4
  int v14; // r5
  int v15; // r7
  int v16; // r4
  int v17; // r3
  int v18; // r3
  int i; // r3
  int v20; // r2
  int j; // r3
  char v22; // r0
  int v23; // r2
  int v24; // r3
  char *v25; // r6
  char *v26; // r1
  char v27; // r0
  int v28; // r0
  int v29; // r1
  int v30; // r3
  int v31; // r2
  int k; // r3
  char v33; // r0
  int v34; // r2
  char *v35; // r4
  char *v36; // r1
  int v37; // r3
  char v38; // r0
  int v39; // r0
  unsigned int m; // r1
  unsigned int v41; // r3
  int v42; // r2
  bool v43; // zf
  unsigned int v44; // r0
  unsigned int v45; // r3
  char *v46; // r4
  int v47; // r3
  int v48; // r1
  char *v49; // r3
  char v50; // t1
  int v51; // r3
  unsigned int *v52; // r5
  const char *v53; // r0
  int v54; // r5
  int v55; // r5
  int v56; // r0
  char *v57; // r6
  char *v58; // r3
  char v59; // t1
  int i75; // r3
  int v61; // r1
  int v62; // r3
  int v63; // r0
  unsigned int v64; // r3
  int v65; // r9
  int v66; // r2
  char *v67; // r0
  int v68; // r0
  char *v69; // r2
  int v70; // r3
  int v71; // r4
  int ii; // r3
  int v73; // r2
  int jj; // r3
  int *v75; // r5
  char v76; // r1
  int v77; // r2
  int v78; // r3
  char *v79; // r4
  char *kk; // r1
  char v81; // r0
  int v82; // r0
  char *v83; // r3
  int v84; // r2
  int v85; // r3
  unsigned int v86; // r5
  unsigned int v87; // r6
  unsigned int *v88; // r0
  unsigned int *v89; // r4
  char *v90; // r8
  unsigned int v91; // r0
  unsigned int v92; // r3
  unsigned int v93; // r0
  unsigned int v94; // r5
  unsigned int mm; // r2
  unsigned int v96; // r3
  int v97; // r1
  bool v98; // zf
  unsigned int v99; // r0
  int v100; // r2
  unsigned int v101; // r3
  int v102; // r0
  int v103; // r3
  int v104; // r2
  size_t v105; // r0
  unsigned int v106; // r10
  _BYTE *v107; // r5
  size_t v108; // r7
  size_t v109; // r0
  void *v110; // r0
  int v111; // r3
  unsigned int v112; // r5
  unsigned int v113; // r6
  unsigned int *v114; // r0
  char *v115; // r8
  unsigned int v116; // r0
  unsigned int v117; // r3
  unsigned int v118; // r0
  unsigned int v119; // r5
  unsigned int i5; // r2
  unsigned int v121; // r3
  int v122; // r1
  bool v123; // zf
  unsigned int v124; // r0
  int v125; // r2
  unsigned int v126; // r3
  int v127; // r0
  int v128; // r3
  int v129; // r2
  size_t v130; // r0
  unsigned int v131; // r10
  _BYTE *v132; // r5
  size_t v133; // r7
  size_t v134; // r0
  void *v135; // r0
  int v136; // r3
  unsigned int v137; // r5
  unsigned int v138; // r6
  unsigned int *v139; // r0
  char *v140; // r8
  unsigned int v141; // r0
  unsigned int v142; // r3
  unsigned int v143; // r0
  unsigned int v144; // r5
  unsigned int i11; // r2
  unsigned int v146; // r3
  int v147; // r1
  bool v148; // zf
  unsigned int v149; // r0
  int v150; // r2
  unsigned int v151; // r3
  int v152; // r0
  int v153; // r3
  int v154; // r2
  size_t v155; // r0
  unsigned int v156; // r10
  _BYTE *v157; // r5
  size_t v158; // r7
  size_t v159; // r0
  void *v160; // r0
  int v161; // r3
  unsigned int v162; // r5
  unsigned int v163; // r6
  unsigned int *v164; // r0
  char *v165; // r8
  unsigned int v166; // r0
  unsigned int v167; // r3
  unsigned int v168; // r0
  unsigned int v169; // r5
  unsigned int i17; // r2
  unsigned int v171; // r3
  int v172; // r1
  bool v173; // zf
  unsigned int v174; // r0
  int v175; // r2
  unsigned int v176; // r3
  int v177; // r0
  int v178; // r3
  int v179; // r2
  size_t v180; // r0
  unsigned int v181; // r10
  _BYTE *v182; // r5
  size_t v183; // r7
  size_t v184; // r0
  void *v185; // r0
  unsigned int v186; // r5
  unsigned int v187; // r6
  unsigned int *v188; // r0
  char *v189; // r8
  unsigned int v190; // r0
  unsigned int v191; // r3
  unsigned int v192; // r0
  unsigned int v193; // r5
  unsigned int i23; // r2
  unsigned int v195; // r3
  int v196; // r1
  bool v197; // zf
  unsigned int v198; // r0
  int v199; // r2
  unsigned int v200; // r3
  int v201; // r0
  int v202; // r3
  int v203; // r2
  size_t v204; // r0
  unsigned int v205; // r10
  _BYTE *v206; // r5
  size_t v207; // r7
  size_t v208; // r0
  void *v209; // r0
  size_t v210; // r0
  unsigned int v211; // r11
  unsigned int v212; // r8
  size_t v213; // r0
  _BYTE *v214; // r0
  _BYTE *v215; // r6
  size_t v216; // r1
  char v217; // r10
  size_t v218; // r11
  _BYTE *v219; // r0
  unsigned int v220; // r10
  size_t v221; // r0
  unsigned int v222; // r11
  size_t v223; // r0
  _BYTE *v224; // r0
  _BYTE *v225; // r9
  size_t v226; // r1
  char v227; // r7
  size_t v228; // r10
  _BYTE *v229; // r0
  unsigned int v230; // r11
  size_t v231; // r1
  char v232; // r7
  size_t v233; // r10
  _BYTE *v234; // r0
  size_t v235; // r1
  char v236; // r7
  size_t v237; // r10
  _BYTE *v238; // r0
  int v239; // r3
  int v240; // r1
  _DWORD *v241; // r2
  unsigned int v242; // r1
  unsigned int v243; // r8
  unsigned int v244; // r0
  int v245; // r2
  unsigned int v246; // r3
  unsigned int v247; // r11
  int v248; // r9
  unsigned int v249; // r10
  unsigned int v250; // r1
  int v251; // r3
  unsigned int v252; // r0
  unsigned int v253; // r2
  int v254; // r5
  unsigned int v255; // r1
  int v256; // r1
  int v257; // r5
  int v258; // lr
  int v259; // r6
  int v260; // r3
  unsigned int v261; // r3
  int v262; // r0
  unsigned int v263; // r3
  int v264; // r6
  int v265; // r7
  int v266; // r0
  unsigned int v267; // r3
  unsigned int v268; // r0
  unsigned int v269; // r3
  int v270; // r0
  unsigned int *v271; // r0
  int v272; // r0
  int i26; // r5
  int i27; // r3
  __int16 v275; // lr
  __int16 v276; // r7
  __int16 v277; // r6
  __int16 v278; // r0
  __int16 v279; // r3
  __int16 v280; // r0
  _WORD *v281; // r2
  int v282; // r5
  int v283; // r6
  int v284; // r5
  unsigned int v285; // r5
  int v286; // r3
  unsigned int v287; // r5
  unsigned int v288; // r5
  int i28; // r5
  int v290; // r3
  _WORD *v291; // r2
  int v292; // r3
  __int16 v293; // r7
  unsigned int v294; // r3
  unsigned int v295; // r5
  bool v296; // zf
  unsigned int v297; // r6
  int v298; // r5
  unsigned int v299; // r3
  int v300; // r6
  unsigned int v301; // r1
  _WORD *v302; // r3
  unsigned int v303; // r1
  unsigned int v304; // r12
  char *v305; // lr
  unsigned int v306; // r5
  int i24; // r6
  int v308; // r0
  int v309; // r8
  int *v310; // r3
  int v311; // r9
  unsigned int v312; // r8
  unsigned int v313; // r0
  bool v314; // zf
  int i25; // r3
  _DWORD *v316; // r0
  int v317; // r9
  unsigned int v318; // r0
  unsigned int v319; // r1
  unsigned int v320; // r12
  char *v321; // lr
  unsigned int v322; // r5
  int i3; // r6
  char *v324; // r5
  unsigned int v325; // r3
  int v326; // r2
  int v327; // r3
  unsigned int *v328; // r3
  unsigned int v329; // r2
  char *v330; // r3
  int v331; // r2
  int v332; // r3
  unsigned int v333; // r5
  unsigned int v334; // r6
  unsigned int *v335; // r0
  unsigned int *v336; // r4
  char *v337; // r8
  unsigned int v338; // r0
  unsigned int v339; // r3
  unsigned int v340; // r0
  unsigned int v341; // r5
  unsigned int i29; // r2
  unsigned int v343; // r3
  int v344; // r1
  bool v345; // zf
  unsigned int v346; // r0
  int v347; // r2
  unsigned int v348; // r3
  int v349; // r0
  int v350; // r3
  int v351; // r2
  size_t v352; // r0
  unsigned int v353; // r10
  _BYTE *v354; // r5
  size_t v355; // r7
  size_t v356; // r0
  void *v357; // r0
  size_t v358; // r0
  unsigned int v359; // r11
  unsigned int v360; // r8
  size_t v361; // r0
  _BYTE *v362; // r0
  _BYTE *v363; // r6
  size_t v364; // r1
  char v365; // r10
  size_t v366; // r11
  _BYTE *v367; // r0
  unsigned int v368; // r10
  size_t v369; // r0
  unsigned int v370; // r11
  size_t v371; // r0
  _BYTE *v372; // r0
  _BYTE *v373; // r9
  size_t v374; // r1
  char v375; // r7
  size_t v376; // r10
  _BYTE *v377; // r0
  unsigned int v378; // r11
  size_t v379; // r1
  char v380; // r7
  size_t v381; // r10
  _BYTE *v382; // r0
  size_t v383; // r1
  char v384; // r7
  size_t v385; // r10
  _BYTE *v386; // r0
  int v387; // r3
  int v388; // r1
  _DWORD *v389; // r2
  unsigned int v390; // r1
  unsigned int v391; // r8
  unsigned int v392; // r0
  int v393; // r2
  unsigned int v394; // r3
  unsigned int v395; // r11
  int v396; // r9
  unsigned int v397; // r10
  unsigned int v398; // r1
  int v399; // r3
  unsigned int v400; // r0
  unsigned int v401; // r2
  int v402; // r5
  unsigned int v403; // r1
  int v404; // r1
  int v405; // r5
  int v406; // lr
  int v407; // r6
  int v408; // r3
  unsigned int v409; // r3
  int v410; // r0
  unsigned int v411; // r3
  int v412; // r6
  int v413; // r7
  int v414; // r0
  unsigned int v415; // r3
  unsigned int v416; // r0
  unsigned int v417; // r3
  int v418; // r0
  unsigned int *v419; // r0
  int v420; // r0
  int i32; // r5
  int i33; // r3
  __int16 v423; // lr
  __int16 v424; // r7
  __int16 v425; // r6
  __int16 v426; // r0
  __int16 v427; // r3
  __int16 v428; // r0
  _WORD *v429; // r2
  int v430; // r5
  int v431; // r6
  int v432; // r5
  unsigned int v433; // r5
  int v434; // r3
  unsigned int v435; // r5
  unsigned int v436; // r5
  int i34; // r5
  int v438; // r3
  _WORD *v439; // r2
  int v440; // r3
  __int16 v441; // r7
  unsigned int v442; // r3
  unsigned int v443; // r5
  bool v444; // zf
  unsigned int v445; // r6
  int v446; // r5
  unsigned int v447; // r3
  int v448; // r6
  unsigned int v449; // r1
  unsigned int v450; // r12
  char *v451; // lr
  unsigned int v452; // r5
  int i30; // r6
  int v454; // r0
  int v455; // r8
  int *v456; // r3
  int v457; // r9
  unsigned int v458; // r8
  unsigned int v459; // r0
  bool v460; // zf
  int i31; // r3
  _DWORD *v462; // r0
  int v463; // r9
  unsigned int v464; // r0
  int v465; // r3
  unsigned int v466; // r5
  unsigned int v467; // r6
  unsigned int *v468; // r0
  char *v469; // r8
  unsigned int v470; // r0
  unsigned int v471; // r3
  unsigned int v472; // r0
  unsigned int v473; // r5
  unsigned int i35; // r2
  unsigned int v475; // r3
  int v476; // r1
  bool v477; // zf
  unsigned int v478; // r0
  int v479; // r2
  unsigned int v480; // r3
  int v481; // r0
  int v482; // r3
  int v483; // r2
  size_t v484; // r0
  unsigned int v485; // r10
  _BYTE *v486; // r5
  size_t v487; // r7
  size_t v488; // r0
  void *v489; // r0
  size_t v490; // r0
  unsigned int v491; // r11
  unsigned int v492; // r8
  size_t v493; // r0
  _BYTE *v494; // r0
  _BYTE *v495; // r6
  size_t v496; // r1
  char v497; // r10
  size_t v498; // r11
  _BYTE *v499; // r0
  unsigned int v500; // r10
  size_t v501; // r0
  unsigned int v502; // r11
  size_t v503; // r0
  _BYTE *v504; // r0
  _BYTE *v505; // r9
  size_t v506; // r1
  char v507; // r7
  size_t v508; // r10
  _BYTE *v509; // r0
  unsigned int v510; // r11
  size_t v511; // r1
  char v512; // r7
  size_t v513; // r10
  _BYTE *v514; // r0
  size_t v515; // r1
  char v516; // r7
  size_t v517; // r10
  _BYTE *v518; // r0
  int v519; // r3
  int v520; // r1
  _DWORD *v521; // r2
  unsigned int v522; // r1
  unsigned int v523; // r0
  int v524; // r2
  unsigned int v525; // r3
  unsigned int v526; // r10
  int v527; // r3
  unsigned int v528; // r0
  unsigned int v529; // r2
  int v530; // r5
  unsigned int v531; // r1
  int v532; // r1
  int v533; // r5
  int v534; // lr
  int v535; // r6
  int v536; // r3
  unsigned int v537; // r3
  int v538; // r0
  unsigned int v539; // r3
  int v540; // r6
  int v541; // r7
  int v542; // r0
  unsigned int v543; // r3
  unsigned int v544; // r0
  unsigned int v545; // r3
  int v546; // r0
  unsigned int *v547; // r0
  int v548; // r0
  int i38; // r5
  int i39; // r3
  __int16 v551; // lr
  __int16 v552; // r7
  __int16 v553; // r6
  __int16 v554; // r0
  __int16 v555; // r3
  __int16 v556; // r0
  _WORD *v557; // r2
  int v558; // r5
  int v559; // r6
  int v560; // r5
  unsigned int v561; // r5
  int v562; // r3
  unsigned int v563; // r5
  unsigned int v564; // r5
  int i40; // r5
  int v566; // r3
  _WORD *v567; // r2
  int v568; // r3
  __int16 v569; // r7
  unsigned int v570; // r3
  unsigned int v571; // r5
  bool v572; // zf
  unsigned int v573; // r6
  int v574; // r5
  unsigned int v575; // r3
  int v576; // r6
  unsigned int v577; // r1
  _WORD *v578; // r3
  unsigned int v579; // r1
  unsigned int v580; // r12
  char *v581; // lr
  unsigned int v582; // r5
  int i36; // r6
  int v584; // r8
  int *v585; // r3
  int v586; // r9
  unsigned int v587; // r8
  unsigned int v588; // r0
  bool v589; // zf
  int i37; // r3
  _DWORD *v591; // r0
  int v592; // r9
  unsigned int v593; // r0
  char *v594; // r5
  unsigned int v595; // r3
  int v596; // r2
  int v597; // r3
  unsigned int *v598; // r3
  unsigned int v599; // r2
  int v600; // r3
  int v601; // r5
  int v602; // r6
  _DWORD *v603; // r0
  _DWORD *v604; // r4
  char *v605; // r8
  unsigned int v606; // r0
  int v607; // r3
  unsigned int v608; // r0
  signed int v609; // r5
  unsigned int i41; // r2
  unsigned int v611; // r3
  int v612; // r1
  bool v613; // zf
  unsigned int v614; // r0
  int v615; // r2
  unsigned int v616; // r3
  int v617; // r0
  int v618; // r3
  int v619; // r2
  size_t v620; // r0
  unsigned int v621; // r8
  _BYTE *v622; // r5
  size_t v623; // r7
  size_t v624; // r0
  void *v625; // r0
  size_t v626; // r0
  unsigned int v627; // r11
  unsigned int v628; // r9
  size_t v629; // r0
  _BYTE *v630; // r0
  _BYTE *v631; // r6
  size_t v632; // r1
  char v633; // r10
  size_t v634; // r11
  _BYTE *v635; // r0
  size_t v636; // r0
  unsigned int v637; // r11
  size_t v638; // r0
  _BYTE *v639; // r0
  _BYTE *v640; // r10
  size_t v641; // r1
  char v642; // r7
  size_t v643; // r8
  _BYTE *v644; // r0
  unsigned int v645; // r11
  size_t v646; // r1
  char v647; // r7
  size_t v648; // r8
  _BYTE *v649; // r0
  size_t v650; // r1
  char v651; // r7
  size_t v652; // r8
  _BYTE *v653; // r0
  unsigned int v654; // r3
  int v655; // r1
  _DWORD *v656; // r2
  int v657; // r1
  unsigned int v658; // r8
  char *v659; // r0
  int v660; // r2
  unsigned int v661; // r3
  int v662; // r11
  int v663; // r9
  unsigned int v664; // r10
  unsigned int v665; // r1
  int v666; // r3
  unsigned int v667; // r0
  int v668; // r2
  int v669; // r5
  unsigned int v670; // r1
  int v671; // r1
  int v672; // r5
  int v673; // lr
  int v674; // r6
  int v675; // r3
  unsigned int v676; // r3
  int v677; // r0
  unsigned int v678; // r3
  int v679; // r6
  int v680; // r7
  int v681; // r0
  unsigned int v682; // r3
  unsigned int v683; // r0
  unsigned int v684; // r3
  int v685; // r0
  unsigned int *v686; // r0
  int v687; // r0
  int i43; // r5
  int i44; // r3
  __int16 v690; // lr
  __int16 v691; // r7
  __int16 v692; // r6
  __int16 v693; // r0
  __int16 v694; // r3
  __int16 v695; // r0
  _WORD *v696; // r2
  int v697; // r5
  int v698; // r6
  int v699; // r5
  unsigned int v700; // r5
  int v701; // r3
  unsigned int v702; // r5
  unsigned int v703; // r5
  int i42; // r5
  int v705; // r3
  _WORD *v706; // r2
  int v707; // r3
  __int16 v708; // r7
  unsigned int v709; // r3
  unsigned int v710; // r5
  bool v711; // zf
  unsigned int v712; // r6
  int v713; // r5
  unsigned int v714; // r3
  int v715; // r6
  unsigned int v716; // r1
  _WORD *v717; // r3
  char *v718; // r1
  unsigned int v719; // r12
  char *v720; // lr
  int i45; // r5
  int v722; // r0
  int v723; // r8
  int v724; // r3
  int v725; // r9
  unsigned int v726; // r8
  int v727; // r0
  bool v728; // zf
  int i46; // r3
  _DWORD *v730; // r0
  int v731; // r9
  char *v732; // r7
  char *v733; // r7
  int v734; // r0
  unsigned int v735; // r1
  char *v736; // r6
  int v737; // r5
  unsigned int v738; // r3
  int v739; // r2
  int v740; // r3
  _DWORD *v741; // r3
  int v742; // r2
  unsigned int v743; // r0
  void (__fastcall **v744)(unsigned int, unsigned int, _DWORD); // r3
  int v745; // r3
  int v746; // r3
  char *v747; // r8
  int v748; // r5
  int v749; // r6
  _DWORD *v750; // r0
  unsigned int v751; // r0
  int v752; // r3
  unsigned int v753; // r0
  signed int v754; // r5
  unsigned int i47; // r2
  unsigned int v756; // r3
  int v757; // r1
  bool v758; // zf
  unsigned int v759; // r0
  int v760; // r2
  unsigned int v761; // r3
  int v762; // r0
  int v763; // r3
  int v764; // r2
  size_t v765; // r0
  unsigned int v766; // r8
  char *v767; // r5
  size_t v768; // r7
  size_t v769; // r0
  char *v770; // r0
  size_t v771; // r0
  unsigned int v772; // r11
  unsigned int v773; // r9
  size_t v774; // r0
  char *v775; // r0
  char *v776; // r6
  size_t v777; // r1
  char v778; // r10
  size_t v779; // r11
  char *v780; // r0
  size_t v781; // r0
  unsigned int v782; // r11
  size_t v783; // r0
  char *v784; // r0
  char *v785; // r10
  size_t v786; // r1
  char v787; // r7
  size_t v788; // r8
  char *v789; // r0
  unsigned int v790; // r11
  size_t v791; // r1
  char v792; // r7
  size_t v793; // r8
  char *v794; // r0
  size_t v795; // r1
  char v796; // r7
  size_t v797; // r8
  char *v798; // r0
  int v799; // r3
  int v800; // r1
  _DWORD *v801; // r2
  int v802; // r1
  unsigned int v803; // r8
  int v804; // r2
  unsigned int v805; // r3
  int v806; // r11
  int v807; // r9
  unsigned int v808; // r10
  unsigned int v809; // r1
  int v810; // r3
  unsigned int v811; // r0
  int v812; // r2
  int v813; // r5
  unsigned int v814; // r1
  int v815; // r1
  int v816; // r5
  int v817; // lr
  int v818; // r6
  int v819; // r3
  unsigned int v820; // r3
  int v821; // r0
  unsigned int v822; // r3
  int v823; // r6
  int v824; // r7
  int v825; // r0
  unsigned int v826; // r3
  unsigned int v827; // r0
  unsigned int v828; // r3
  int v829; // r0
  unsigned int *v830; // r0
  int v831; // r0
  int i49; // r5
  int i50; // r3
  __int16 v834; // lr
  __int16 v835; // r7
  __int16 v836; // r6
  __int16 v837; // r0
  __int16 v838; // r3
  __int16 v839; // r0
  _WORD *v840; // r2
  int v841; // r5
  int v842; // r6
  int v843; // r5
  unsigned int v844; // r5
  int v845; // r3
  unsigned int v846; // r5
  unsigned int v847; // r5
  int i48; // r5
  int v849; // r3
  _WORD *v850; // r2
  int v851; // r3
  __int16 v852; // r7
  unsigned int v853; // r3
  unsigned int v854; // r5
  bool v855; // zf
  unsigned int v856; // r6
  int v857; // r5
  unsigned int v858; // r3
  int v859; // r6
  char *v860; // r1
  unsigned int v861; // r12
  char *v862; // lr
  int i51; // r5
  int v864; // r0
  int v865; // r8
  int v866; // r3
  int v867; // r9
  unsigned int v868; // r8
  int v869; // r0
  bool v870; // zf
  int i52; // r3
  _DWORD *v872; // r0
  int v873; // r9
  char *v874; // r7
  unsigned int v875; // r7
  int v876; // r0
  int v877; // r3
  char *v878; // r8
  int v879; // r5
  int v880; // r6
  _DWORD *v881; // r0
  unsigned int v882; // r0
  int v883; // r3
  unsigned int v884; // r0
  signed int v885; // r5
  unsigned int i53; // r2
  unsigned int v887; // r3
  int v888; // r1
  bool v889; // zf
  unsigned int v890; // r0
  int v891; // r2
  unsigned int v892; // r3
  int v893; // r0
  int v894; // r3
  int v895; // r2
  size_t v896; // r0
  unsigned int v897; // r8
  char *v898; // r5
  size_t v899; // r7
  size_t v900; // r0
  char *v901; // r0
  size_t v902; // r0
  unsigned int v903; // r11
  unsigned int v904; // r9
  size_t v905; // r0
  char *v906; // r0
  char *v907; // r6
  size_t v908; // r1
  char v909; // r10
  size_t v910; // r11
  char *v911; // r0
  size_t v912; // r0
  unsigned int v913; // r11
  size_t v914; // r0
  char *v915; // r0
  char *v916; // r10
  size_t v917; // r1
  char v918; // r7
  size_t v919; // r8
  char *v920; // r0
  unsigned int v921; // r11
  size_t v922; // r1
  char v923; // r7
  size_t v924; // r8
  char *v925; // r0
  size_t v926; // r1
  char v927; // r7
  size_t v928; // r8
  char *v929; // r0
  int v930; // r3
  int v931; // r1
  _DWORD *v932; // r2
  int v933; // r1
  unsigned int v934; // r3
  unsigned int v935; // r10
  int v936; // r3
  unsigned int v937; // r0
  int v938; // r2
  int v939; // r5
  unsigned int v940; // r1
  int v941; // r1
  int v942; // r5
  int v943; // lr
  int v944; // r6
  int v945; // r3
  unsigned int v946; // r3
  int v947; // r0
  unsigned int v948; // r3
  int v949; // r6
  int v950; // r7
  int v951; // r0
  unsigned int v952; // r3
  unsigned int v953; // r0
  unsigned int v954; // r3
  int v955; // r0
  unsigned int *v956; // r0
  int v957; // r0
  int i55; // r5
  int i56; // r3
  __int16 v960; // lr
  __int16 v961; // r7
  __int16 v962; // r6
  __int16 v963; // r0
  __int16 v964; // r3
  __int16 v965; // r0
  _WORD *v966; // r2
  int v967; // r5
  int v968; // r6
  int v969; // r5
  unsigned int v970; // r5
  int v971; // r3
  unsigned int v972; // r5
  unsigned int v973; // r5
  int i54; // r5
  int v975; // r3
  _WORD *v976; // r2
  int v977; // r3
  __int16 v978; // r7
  unsigned int v979; // r3
  unsigned int v980; // r5
  bool v981; // zf
  unsigned int v982; // r6
  int v983; // r5
  unsigned int v984; // r3
  int v985; // r6
  char *v986; // r1
  unsigned int v987; // r12
  char *v988; // lr
  int i57; // r5
  int v990; // r8
  int v991; // r3
  int v992; // r9
  unsigned int v993; // r8
  int v994; // r0
  bool v995; // zf
  int i58; // r3
  _DWORD *v997; // r0
  int v998; // r9
  char *v999; // r7
  unsigned int v1000; // r7
  int v1001; // r0
  int v1002; // r0
  unsigned int v1003; // r1
  int v1004; // r3
  char *v1005; // r8
  int v1006; // r5
  int v1007; // r6
  _DWORD *v1008; // r0
  unsigned int v1009; // r0
  int v1010; // r3
  unsigned int v1011; // r0
  signed int v1012; // r5
  unsigned int i59; // r2
  unsigned int v1014; // r3
  int v1015; // r1
  bool v1016; // zf
  unsigned int v1017; // r0
  int v1018; // r2
  unsigned int v1019; // r3
  int v1020; // r0
  int v1021; // r3
  int v1022; // r2
  size_t v1023; // r0
  unsigned int v1024; // r8
  char *v1025; // r5
  size_t v1026; // r7
  size_t v1027; // r0
  char *v1028; // r0
  size_t v1029; // r0
  unsigned int v1030; // r11
  unsigned int v1031; // r9
  size_t v1032; // r0
  char *v1033; // r0
  char *v1034; // r6
  size_t v1035; // r1
  char v1036; // r10
  size_t v1037; // r11
  char *v1038; // r0
  size_t v1039; // r0
  unsigned int v1040; // r11
  size_t v1041; // r0
  char *v1042; // r0
  char *v1043; // r10
  size_t v1044; // r1
  char v1045; // r7
  size_t v1046; // r8
  char *v1047; // r0
  unsigned int v1048; // r11
  size_t v1049; // r1
  char v1050; // r7
  size_t v1051; // r8
  char *v1052; // r0
  size_t v1053; // r1
  char v1054; // r7
  size_t v1055; // r8
  char *v1056; // r0
  int v1057; // r3
  int v1058; // r1
  _DWORD *v1059; // r2
  int v1060; // r1
  int v1061; // r2
  unsigned int v1062; // r3
  unsigned int v1063; // r10
  int v1064; // r3
  unsigned int v1065; // r0
  int v1066; // r2
  int v1067; // r5
  unsigned int v1068; // r1
  int v1069; // r1
  int v1070; // r5
  int v1071; // lr
  int v1072; // r6
  int v1073; // r3
  unsigned int v1074; // r3
  int v1075; // r0
  unsigned int v1076; // r3
  int v1077; // r6
  int v1078; // r7
  int v1079; // r0
  unsigned int v1080; // r3
  unsigned int v1081; // r0
  unsigned int v1082; // r3
  int v1083; // r0
  unsigned int *v1084; // r0
  int v1085; // r0
  int i61; // r5
  int i62; // r3
  __int16 v1088; // lr
  __int16 v1089; // r7
  __int16 v1090; // r6
  __int16 v1091; // r0
  __int16 v1092; // r3
  __int16 v1093; // r0
  _WORD *v1094; // r2
  int v1095; // r5
  int v1096; // r6
  int v1097; // r5
  unsigned int v1098; // r5
  int v1099; // r3
  unsigned int v1100; // r5
  unsigned int v1101; // r5
  int i60; // r5
  int v1103; // r3
  _WORD *v1104; // r2
  int v1105; // r3
  __int16 v1106; // r7
  unsigned int v1107; // r3
  unsigned int v1108; // r5
  bool v1109; // zf
  unsigned int v1110; // r6
  int v1111; // r5
  unsigned int v1112; // r3
  int v1113; // r6
  unsigned int v1114; // r1
  _WORD *v1115; // r3
  unsigned int v1116; // r1
  unsigned int v1117; // r12
  char *v1118; // lr
  int i63; // r5
  int v1120; // r0
  int v1121; // r8
  int v1122; // r3
  int v1123; // r9
  unsigned int v1124; // r8
  int v1125; // r0
  bool v1126; // zf
  int i74; // r3
  _DWORD *v1128; // r0
  int v1129; // r9
  unsigned int v1130; // r7
  unsigned int v1131; // r7
  int v1132; // r0
  unsigned int v1133; // r5
  unsigned int v1134; // r3
  int v1135; // r2
  int v1136; // r3
  _DWORD *v1137; // r3
  int v1138; // r2
  int v1139; // r4
  int i64; // r3
  int v1141; // r2
  int i65; // r3
  char v1143; // r1
  int v1144; // r2
  char *v1145; // r4
  char *v1146; // r1
  int v1147; // r3
  char v1148; // r0
  int v1149; // r0
  int v1150; // r5
  int v1151; // r2
  char *v1152; // r3
  char v1153; // t1
  int v1154; // r3
  int v1155; // r0
  unsigned int *v1156; // r5
  int v1157; // r5
  int v1158; // r4
  int i67; // r3
  char *v1160; // r3
  char v1161; // t1
  unsigned int v1162; // r3
  char *v1163; // r3
  char v1164; // t1
  int v1165; // r3
  unsigned int v1166; // r0
  char *v1167; // r7
  char *v1168; // r6
  int v1169; // r6
  int v1170; // r5
  int v1171; // r5
  int v1172; // r2
  char *v1173; // r3
  char v1174; // t1
  int v1175; // r2
  char *v1176; // r5
  int v1177; // r5
  int v1178; // r4
  char *v1179; // r6
  unsigned int *v1180; // r7
  void (__fastcall *v1181)(_DWORD, _DWORD); // r3
  int v1182; // r3
  int v1183; // r1
  unsigned int *v1184; // r6
  char *v1185; // r6
  unsigned int i70; // r1
  unsigned int v1187; // r2
  int v1188; // r3
  bool v1189; // zf
  unsigned int v1190; // r0
  int v1191; // r10
  int v1192; // r5
  int *v1193; // r2
  int v1194; // r1
  int v1195; // r12
  int v1196; // lr
  unsigned int v1197; // r2
  int v1198; // r9
  int v1199; // r3
  int v1200; // r1
  unsigned int v1201; // r2
  char *v1202; // r4
  int v1203; // r2
  int v1204; // r1
  int i71; // r2
  char v1206; // r0
  char *v1207; // r0
  int v1208; // r1
  int v1209; // r2
  char v1210; // r4
  int v1211; // r4
  int v1212; // r0
  int v1213; // r2
  int v1214; // r1
  int i72; // r2
  char v1216; // r4
  int v1217; // r1
  int v1218; // r2
  int v1219; // r5
  char *i73; // r0
  char v1221; // r4
  int v1222; // r4
  char *v1223; // r0
  unsigned int v1224; // r3
  int v1225; // r2
  bool v1226; // zf
  unsigned int v1227; // r1
  unsigned int v1228; // r3
  int v1229; // r0
  int v1230; // r2
  size_t v1231; // r0
  unsigned int v1232; // r7
  char *v1233; // r5
  size_t v1234; // r8
  size_t v1235; // r0
  char *v1236; // r0
  size_t v1237; // r0
  unsigned int v1238; // r11
  unsigned int v1239; // r10
  size_t v1240; // r0
  char *v1241; // r0
  char *v1242; // r7
  size_t v1243; // r1
  char v1244; // r9
  size_t v1245; // r11
  char *v1246; // r0
  size_t v1247; // r0
  unsigned int v1248; // r11
  size_t v1249; // r0
  char *v1250; // r0
  char *v1251; // r9
  size_t v1252; // r1
  char v1253; // r8
  size_t v1254; // r10
  char *v1255; // r0
  unsigned int v1256; // r11
  size_t v1257; // r1
  char v1258; // r8
  size_t v1259; // r10
  char *v1260; // r0
  size_t v1261; // r1
  char v1262; // r8
  size_t v1263; // r10
  char *v1264; // r0
  char *v1265; // r0
  int (__fastcall *v1266)(char *); // r3
  unsigned int n; // r2
  unsigned int v1268; // r3
  int v1269; // r1
  bool v1270; // zf
  unsigned int v1271; // r0
  int v1272; // r2
  unsigned int v1273; // r3
  int v1274; // r0
  int v1275; // r2
  unsigned int v1276; // r10
  size_t v1277; // r0
  size_t v1278; // r8
  size_t v1279; // r0
  char *v1280; // r0
  size_t v1281; // r0
  unsigned int v1282; // r11
  unsigned int v1283; // r9
  size_t v1284; // r0
  char *v1285; // r0
  char *v1286; // r7
  size_t v1287; // r1
  char v1288; // r10
  size_t v1289; // r11
  char *v1290; // r0
  size_t v1291; // r0
  unsigned int v1292; // r11
  size_t v1293; // r0
  char *v1294; // r0
  char *v1295; // r10
  size_t v1296; // r1
  char v1297; // r6
  size_t v1298; // r8
  char *v1299; // r0
  unsigned int v1300; // r11
  size_t v1301; // r1
  char v1302; // r6
  size_t v1303; // r8
  char *v1304; // r0
  size_t v1305; // r1
  char v1306; // r6
  size_t v1307; // r8
  char *v1308; // r0
  size_t v1309; // r0
  unsigned int v1310; // r11
  unsigned int v1311; // r8
  size_t v1312; // r0
  _BYTE *v1313; // r0
  _BYTE *v1314; // r6
  size_t v1315; // r1
  char v1316; // r10
  size_t v1317; // r11
  _BYTE *v1318; // r0
  unsigned int v1319; // r10
  size_t v1320; // r0
  unsigned int v1321; // r11
  size_t v1322; // r0
  _BYTE *v1323; // r0
  _BYTE *v1324; // r9
  size_t v1325; // r1
  char v1326; // r7
  size_t v1327; // r10
  _BYTE *v1328; // r0
  unsigned int v1329; // r11
  size_t v1330; // r1
  char v1331; // r7
  size_t v1332; // r10
  _BYTE *v1333; // r0
  size_t v1334; // r1
  char v1335; // r7
  size_t v1336; // r10
  _BYTE *v1337; // r0
  int v1338; // r3
  int v1339; // r1
  _DWORD *v1340; // r2
  unsigned int v1341; // r1
  unsigned int v1342; // r0
  int v1343; // r2
  unsigned int v1344; // r3
  unsigned int v1345; // r10
  int v1346; // r3
  unsigned int v1347; // r0
  unsigned int v1348; // r2
  int v1349; // r5
  unsigned int v1350; // r1
  int v1351; // r1
  int v1352; // r5
  int v1353; // lr
  int v1354; // r6
  int v1355; // r3
  unsigned int v1356; // r3
  int v1357; // r0
  unsigned int v1358; // r3
  int v1359; // r6
  int v1360; // r7
  int v1361; // r0
  unsigned int v1362; // r3
  unsigned int v1363; // r0
  unsigned int v1364; // r3
  int v1365; // r0
  unsigned int *v1366; // r0
  int v1367; // r0
  int i1; // r5
  int i2; // r3
  __int16 v1370; // lr
  __int16 v1371; // r7
  __int16 v1372; // r6
  __int16 v1373; // r0
  __int16 v1374; // r3
  __int16 v1375; // r0
  _WORD *v1376; // r2
  int v1377; // r5
  int v1378; // r6
  int v1379; // r5
  unsigned int v1380; // r5
  int v1381; // r3
  unsigned int v1382; // r5
  unsigned int v1383; // r5
  int nn; // r5
  int v1385; // r3
  _WORD *v1386; // r2
  int v1387; // r3
  __int16 v1388; // r7
  unsigned int v1389; // r3
  unsigned int v1390; // r5
  bool v1391; // zf
  unsigned int v1392; // r6
  int v1393; // r5
  unsigned int v1394; // r3
  int v1395; // r6
  int v1396; // r8
  int *v1397; // r3
  int v1398; // r9
  unsigned int v1399; // r8
  unsigned int v1400; // r0
  bool v1401; // zf
  int i4; // r3
  _DWORD *v1403; // r0
  int v1404; // r9
  unsigned int v1405; // r0
  size_t v1406; // r0
  unsigned int v1407; // r11
  unsigned int v1408; // r8
  size_t v1409; // r0
  _BYTE *v1410; // r0
  _BYTE *v1411; // r6
  size_t v1412; // r1
  char v1413; // r10
  size_t v1414; // r11
  _BYTE *v1415; // r0
  unsigned int v1416; // r10
  size_t v1417; // r0
  unsigned int v1418; // r11
  size_t v1419; // r0
  _BYTE *v1420; // r0
  _BYTE *v1421; // r9
  size_t v1422; // r1
  char v1423; // r7
  size_t v1424; // r10
  _BYTE *v1425; // r0
  unsigned int v1426; // r11
  size_t v1427; // r1
  char v1428; // r7
  size_t v1429; // r10
  _BYTE *v1430; // r0
  size_t v1431; // r1
  char v1432; // r7
  size_t v1433; // r10
  _BYTE *v1434; // r0
  int v1435; // r3
  int v1436; // r1
  _DWORD *v1437; // r2
  unsigned int v1438; // r1
  unsigned int v1439; // r0
  int v1440; // r2
  unsigned int v1441; // r3
  unsigned int v1442; // r10
  int v1443; // r3
  unsigned int v1444; // r0
  unsigned int v1445; // r2
  int v1446; // r5
  unsigned int v1447; // r1
  int v1448; // r1
  int v1449; // r5
  int v1450; // lr
  int v1451; // r6
  int v1452; // r3
  unsigned int v1453; // r3
  int v1454; // r0
  unsigned int v1455; // r3
  int v1456; // r6
  int v1457; // r7
  int v1458; // r0
  unsigned int v1459; // r3
  unsigned int v1460; // r0
  unsigned int v1461; // r3
  int v1462; // r0
  unsigned int *v1463; // r0
  int v1464; // r0
  int i8; // r5
  int i9; // r3
  __int16 v1467; // lr
  __int16 v1468; // r7
  __int16 v1469; // r6
  __int16 v1470; // r0
  __int16 v1471; // r3
  __int16 v1472; // r0
  _WORD *v1473; // r2
  int v1474; // r5
  int v1475; // r6
  int v1476; // r5
  unsigned int v1477; // r5
  int v1478; // r3
  unsigned int v1479; // r5
  unsigned int v1480; // r5
  int i10; // r5
  int v1482; // r3
  _WORD *v1483; // r2
  int v1484; // r3
  __int16 v1485; // r7
  unsigned int v1486; // r3
  unsigned int v1487; // r5
  bool v1488; // zf
  unsigned int v1489; // r6
  int v1490; // r5
  unsigned int v1491; // r3
  int v1492; // r6
  unsigned int v1493; // r1
  unsigned int v1494; // r12
  char *v1495; // lr
  unsigned int v1496; // r5
  int i6; // r6
  int v1498; // r8
  int *v1499; // r3
  int v1500; // r9
  unsigned int v1501; // r8
  unsigned int v1502; // r0
  bool v1503; // zf
  int i7; // r3
  _DWORD *v1505; // r0
  int v1506; // r9
  unsigned int v1507; // r0
  size_t v1508; // r0
  unsigned int v1509; // r11
  unsigned int v1510; // r8
  size_t v1511; // r0
  _BYTE *v1512; // r0
  _BYTE *v1513; // r6
  size_t v1514; // r1
  char v1515; // r10
  size_t v1516; // r11
  _BYTE *v1517; // r0
  unsigned int v1518; // r10
  size_t v1519; // r0
  unsigned int v1520; // r11
  size_t v1521; // r0
  _BYTE *v1522; // r0
  _BYTE *v1523; // r9
  size_t v1524; // r1
  char v1525; // r7
  size_t v1526; // r10
  _BYTE *v1527; // r0
  unsigned int v1528; // r11
  size_t v1529; // r1
  char v1530; // r7
  size_t v1531; // r10
  _BYTE *v1532; // r0
  size_t v1533; // r1
  char v1534; // r7
  size_t v1535; // r10
  _BYTE *v1536; // r0
  int v1537; // r3
  int v1538; // r1
  _DWORD *v1539; // r2
  unsigned int v1540; // r1
  unsigned int v1541; // r0
  int v1542; // r2
  unsigned int v1543; // r3
  unsigned int v1544; // r10
  int v1545; // r3
  unsigned int v1546; // r0
  unsigned int v1547; // r2
  int v1548; // r5
  unsigned int v1549; // r1
  int v1550; // r1
  int v1551; // r5
  int v1552; // lr
  int v1553; // r6
  int v1554; // r3
  unsigned int v1555; // r3
  int v1556; // r0
  unsigned int v1557; // r3
  int v1558; // r6
  int v1559; // r7
  int v1560; // r0
  unsigned int v1561; // r3
  unsigned int v1562; // r0
  unsigned int v1563; // r3
  int v1564; // r0
  unsigned int *v1565; // r0
  int v1566; // r0
  int i14; // r5
  int i15; // r3
  __int16 v1569; // lr
  __int16 v1570; // r7
  __int16 v1571; // r6
  __int16 v1572; // r0
  __int16 v1573; // r3
  __int16 v1574; // r0
  _WORD *v1575; // r2
  int v1576; // r5
  int v1577; // r6
  int v1578; // r5
  unsigned int v1579; // r5
  int v1580; // r3
  unsigned int v1581; // r5
  unsigned int v1582; // r5
  int i16; // r5
  int v1584; // r3
  _WORD *v1585; // r2
  int v1586; // r3
  __int16 v1587; // r7
  unsigned int v1588; // r3
  unsigned int v1589; // r5
  bool v1590; // zf
  unsigned int v1591; // r6
  int v1592; // r5
  unsigned int v1593; // r3
  int v1594; // r6
  unsigned int v1595; // r1
  unsigned int v1596; // r12
  char *v1597; // lr
  unsigned int v1598; // r5
  int i12; // r6
  int v1600; // r8
  int *v1601; // r3
  int v1602; // r9
  unsigned int v1603; // r8
  unsigned int v1604; // r0
  bool v1605; // zf
  int i13; // r3
  _DWORD *v1607; // r0
  int v1608; // r9
  unsigned int v1609; // r0
  size_t v1610; // r0
  unsigned int v1611; // r11
  unsigned int v1612; // r8
  size_t v1613; // r0
  _BYTE *v1614; // r0
  _BYTE *v1615; // r6
  size_t v1616; // r1
  char v1617; // r10
  size_t v1618; // r11
  _BYTE *v1619; // r0
  unsigned int v1620; // r10
  size_t v1621; // r0
  unsigned int v1622; // r11
  size_t v1623; // r0
  _BYTE *v1624; // r0
  _BYTE *v1625; // r9
  size_t v1626; // r1
  char v1627; // r7
  size_t v1628; // r10
  _BYTE *v1629; // r0
  unsigned int v1630; // r11
  size_t v1631; // r1
  char v1632; // r7
  size_t v1633; // r10
  _BYTE *v1634; // r0
  size_t v1635; // r1
  char v1636; // r7
  size_t v1637; // r10
  _BYTE *v1638; // r0
  int v1639; // r3
  int v1640; // r1
  _DWORD *v1641; // r2
  unsigned int v1642; // r1
  unsigned int v1643; // r0
  int v1644; // r2
  unsigned int v1645; // r3
  unsigned int v1646; // r10
  int v1647; // r3
  unsigned int v1648; // r0
  unsigned int v1649; // r2
  int v1650; // r5
  unsigned int v1651; // r1
  int v1652; // r1
  int v1653; // r5
  int v1654; // lr
  int v1655; // r6
  int v1656; // r3
  unsigned int v1657; // r3
  int v1658; // r0
  unsigned int v1659; // r3
  int v1660; // r6
  int v1661; // r7
  int v1662; // r0
  unsigned int v1663; // r3
  unsigned int v1664; // r0
  unsigned int v1665; // r3
  int v1666; // r0
  unsigned int *v1667; // r0
  int v1668; // r0
  int i20; // r5
  int i21; // r3
  __int16 v1671; // lr
  __int16 v1672; // r7
  __int16 v1673; // r6
  __int16 v1674; // r0
  __int16 v1675; // r3
  __int16 v1676; // r0
  _WORD *v1677; // r2
  int v1678; // r5
  int v1679; // r6
  int v1680; // r5
  unsigned int v1681; // r5
  int v1682; // r3
  unsigned int v1683; // r5
  unsigned int v1684; // r5
  int i22; // r5
  int v1686; // r3
  _WORD *v1687; // r2
  int v1688; // r3
  __int16 v1689; // r7
  unsigned int v1690; // r3
  unsigned int v1691; // r5
  bool v1692; // zf
  unsigned int v1693; // r6
  int v1694; // r5
  unsigned int v1695; // r3
  int v1696; // r6
  unsigned int v1697; // r1
  unsigned int v1698; // r12
  char *v1699; // lr
  unsigned int v1700; // r5
  int i18; // r6
  int v1702; // r8
  int *v1703; // r3
  int v1704; // r9
  unsigned int v1705; // r8
  unsigned int v1706; // r0
  bool v1707; // zf
  int i19; // r3
  _DWORD *v1709; // r0
  int v1710; // r9
  unsigned int v1711; // r0
  char *v1712; // r0
  int v1713; // r0
  unsigned int v1714; // r3
  int v1715; // r2
  bool v1716; // zf
  unsigned int v1717; // r1
  unsigned int v1718; // r3
  int v1719; // r0
  int v1720; // r3
  int v1721; // r2
  size_t v1722; // r0
  unsigned int v1723; // r7
  char *v1724; // r5
  size_t v1725; // r8
  size_t v1726; // r0
  char *v1727; // r0
  size_t v1728; // r0
  unsigned int v1729; // r11
  unsigned int v1730; // r10
  size_t v1731; // r0
  char *v1732; // r0
  char *v1733; // r7
  size_t v1734; // r1
  char v1735; // r9
  size_t v1736; // r11
  char *v1737; // r0
  size_t v1738; // r0
  unsigned int v1739; // r11
  size_t v1740; // r0
  char *v1741; // r0
  char *v1742; // r9
  size_t v1743; // r1
  char v1744; // r8
  size_t v1745; // r10
  char *v1746; // r0
  unsigned int v1747; // r11
  size_t v1748; // r1
  char v1749; // r8
  size_t v1750; // r10
  char *v1751; // r0
  size_t v1752; // r1
  char v1753; // r8
  size_t v1754; // r10
  char *v1755; // r0
  char *v1756; // r7
  char *v1757; // r0
  int (__fastcall *v1758)(char *); // r3
  unsigned int i66; // r2
  unsigned int v1760; // r3
  int v1761; // r1
  bool v1762; // zf
  unsigned int v1763; // r0
  int v1764; // r2
  unsigned int v1765; // r3
  int v1766; // r0
  int v1767; // r2
  int v1768; // r10
  size_t v1769; // r0
  size_t v1770; // r8
  size_t v1771; // r0
  char *v1772; // r0
  size_t v1773; // r0
  int v1774; // r11
  unsigned int v1775; // r9
  size_t v1776; // r0
  char *v1777; // r0
  char *v1778; // r7
  size_t v1779; // r1
  char v1780; // r10
  size_t v1781; // r11
  char *v1782; // r0
  size_t v1783; // r0
  unsigned int v1784; // r11
  size_t v1785; // r0
  char *v1786; // r0
  char *v1787; // r10
  size_t v1788; // r1
  char v1789; // r6
  size_t v1790; // r8
  char *v1791; // r0
  unsigned int v1792; // r11
  size_t v1793; // r1
  char v1794; // r6
  size_t v1795; // r8
  char *v1796; // r0
  size_t v1797; // r1
  char v1798; // r6
  size_t v1799; // r8
  char *v1800; // r0
  int v1801; // r0
  char *v1802; // r0
  unsigned int v1803; // r3
  int v1804; // r2
  bool v1805; // zf
  unsigned int v1806; // r1
  unsigned int v1807; // r3
  int v1808; // r0
  int v1809; // r3
  int v1810; // r2
  char *v1811; // r8
  size_t v1812; // r0
  char *v1813; // r6
  size_t v1814; // r9
  size_t v1815; // r0
  void *v1816; // r0
  char *v1817; // r11
  size_t v1818; // r0
  unsigned int v1819; // r10
  size_t v1820; // r0
  void *v1821; // r0
  size_t v1822; // r1
  char v1823; // r8
  size_t v1824; // r11
  _BYTE *v1825; // r0
  unsigned int v1826; // r12
  size_t v1827; // r0
  unsigned int v1828; // r11
  size_t v1829; // r0
  char *v1830; // r0
  char *v1831; // r8
  size_t v1832; // r1
  char v1833; // r9
  size_t v1834; // r10
  char *v1835; // r0
  unsigned int v1836; // r11
  size_t v1837; // r1
  char v1838; // r9
  size_t v1839; // r10
  char *v1840; // r0
  size_t v1841; // r1
  char v1842; // r9
  size_t v1843; // r10
  char *v1844; // r0
  unsigned int v1845; // r0
  int (__fastcall *v1846)(char *); // r3
  unsigned int i68; // r2
  unsigned int v1848; // r3
  int v1849; // r1
  bool v1850; // zf
  unsigned int v1851; // r0
  int v1852; // r2
  unsigned int v1853; // r3
  int v1854; // r0
  int v1855; // r3
  int v1856; // r2
  char *v1857; // r10
  size_t v1858; // r0
  size_t v1859; // r0
  char *v1860; // r0
  unsigned int v1861; // r11
  size_t v1862; // r0
  unsigned int v1863; // r9
  size_t v1864; // r0
  char *v1865; // r0
  char *v1866; // r8
  size_t v1867; // r1
  char v1868; // r10
  size_t v1869; // r11
  char *v1870; // r0
  size_t v1871; // r0
  unsigned int v1872; // r11
  size_t v1873; // r0
  char *v1874; // r0
  char *v1875; // r10
  size_t v1876; // r1
  char v1877; // r7
  size_t v1878; // r9
  char *v1879; // r0
  unsigned int v1880; // r11
  size_t v1881; // r1
  char v1882; // r7
  size_t v1883; // r9
  char *v1884; // r0
  size_t v1885; // r1
  char v1886; // r7
  size_t v1887; // r9
  char *v1888; // r0
  int v1889; // r0
  const char *v1890; // r0
  unsigned int v1891; // r3
  int v1892; // r2
  bool v1893; // zf
  unsigned int v1894; // r1
  unsigned int v1895; // r3
  int v1896; // r0
  int v1897; // r2
  size_t v1898; // r0
  char *v1899; // r6
  _BYTE *v1900; // r4
  size_t v1901; // r7
  size_t v1902; // r0
  void *v1903; // r0
  char *v1904; // r10
  size_t v1905; // r0
  unsigned int v1906; // r11
  size_t v1907; // r0
  _BYTE *v1908; // r0
  _BYTE *v1909; // r6
  size_t v1910; // r1
  char v1911; // r9
  size_t v1912; // r10
  _BYTE *v1913; // r0
  char *v1914; // r9
  size_t v1915; // r0
  unsigned int v1916; // r10
  size_t v1917; // r0
  _BYTE *v1918; // r0
  _BYTE *v1919; // r8
  size_t v1920; // r1
  char v1921; // r7
  size_t v1922; // r9
  _BYTE *v1923; // r0
  unsigned int v1924; // r10
  size_t v1925; // r1
  char v1926; // r7
  size_t v1927; // r9
  _BYTE *v1928; // r0
  size_t v1929; // r1
  char v1930; // r7
  size_t v1931; // r9
  _BYTE *v1932; // r0
  char *v1933; // r6
  const char *v1934; // r0
  int (__fastcall *v1935)(char *); // r3
  unsigned int i69; // r2
  unsigned int v1937; // r3
  int v1938; // r1
  bool v1939; // zf
  unsigned int v1940; // r0
  int v1941; // r2
  unsigned int v1942; // r3
  int v1943; // r0
  int v1944; // r2
  size_t v1945; // r0
  unsigned int v1946; // r9
  size_t v1947; // r7
  size_t v1948; // r0
  _BYTE *v1949; // r0
  _BYTE *v1950; // r8
  unsigned int v1951; // r10
  size_t v1952; // r0
  unsigned int v1953; // r11
  size_t v1954; // r0
  _BYTE *v1955; // r0
  _BYTE *v1956; // r6
  size_t v1957; // r1
  char v1958; // r9
  size_t v1959; // r10
  _BYTE *v1960; // r0
  size_t v1961; // r0
  unsigned int v1962; // r10
  size_t v1963; // r0
  _BYTE *v1964; // r0
  _BYTE *v1965; // r9
  size_t v1966; // r1
  char v1967; // r5
  size_t v1968; // r7
  _BYTE *v1969; // r0
  unsigned int v1970; // r10
  size_t v1971; // r1
  char v1972; // r5
  size_t v1973; // r7
  _BYTE *v1974; // r0
  size_t v1975; // r1
  char v1976; // r5
  size_t v1977; // r7
  _BYTE *v1978; // r0
  int v1979; // r0
  int v1980; // [sp-CF4h] [bp-CF4h] BYREF
  int v1981; // [sp-CF0h] [bp-CF0h]
  char *v1982; // [sp-CECh] [bp-CECh]
  char *v1983; // [sp-CE8h] [bp-CE8h]
  unsigned int v1984; // [sp-CE4h] [bp-CE4h]
  unsigned int v1985; // [sp-CE0h] [bp-CE0h]
  unsigned int v1986; // [sp-CDCh] [bp-CDCh]
  unsigned int v1987; // [sp-CD8h] [bp-CD8h]
  char *v1988; // [sp-CD4h] [bp-CD4h]
  unsigned int *v1989; // [sp-CD0h] [bp-CD0h]
  unsigned int v1990; // [sp-CCCh] [bp-CCCh]
  unsigned int v1991; // [sp-CC8h] [bp-CC8h]
  char *v1992; // [sp-CC4h] [bp-CC4h]
  char *v1993; // [sp-CC0h] [bp-CC0h]
  unsigned int v1994; // [sp-CBCh] [bp-CBCh]
  char *v1995; // [sp-CB8h] [bp-CB8h]
  unsigned int v1996; // [sp-CB4h] [bp-CB4h]
  int v1997; // [sp-CB0h] [bp-CB0h]
  char *v1998; // [sp-CACh] [bp-CACh]
  char *v1999; // [sp-CA8h] [bp-CA8h]
  int v2000; // [sp-CA4h] [bp-CA4h]
  char *v2001; // [sp-CA0h] [bp-CA0h]
  char *v2002; // [sp-C9Ch] [bp-C9Ch]
  int *v2003; // [sp-C98h] [bp-C98h]
  char *v2004; // [sp-C94h] [bp-C94h]
  char *v2005; // [sp-C90h] [bp-C90h]
  int v2006; // [sp-C8Ch] [bp-C8Ch]
  char v2007; // [sp-C80h] [bp-C80h] BYREF
  char v2008; // [sp-C7Fh] [bp-C7Fh]
  char v2009; // [sp-C7Ch] [bp-C7Ch] BYREF
  char v2010; // [sp-C7Bh] [bp-C7Bh]
  int v2011; // [sp-C78h] [bp-C78h]
  int v2012; // [sp-C74h] [bp-C74h]
  int v2013; // [sp-C70h] [bp-C70h] BYREF
  int v2014; // [sp-C6Ch] [bp-C6Ch] BYREF
  char *v2015; // [sp-C68h] [bp-C68h] BYREF
  _DWORD v2016[256]; // [sp-C64h] [bp-C64h] BYREF
  _BYTE v2017[5]; // [sp-864h] [bp-864h] BYREF
  char v2018[4]; // [sp-85Fh] [bp-85Fh] BYREF
  char v2019[12]; // [sp-858h] [bp-858h] BYREF
  char v2020[12]; // [sp-84Ch] [bp-84Ch] BYREF
  char v2021[16]; // [sp-840h] [bp-840h] BYREF
  char v2022; // [sp-830h] [bp-830h] BYREF
  char v2023; // [sp-82Fh] [bp-82Fh]
  char v2024; // [sp-82Eh] [bp-82Eh]
  char v2025; // [sp-82Dh] [bp-82Dh]
  char v2026; // [sp-82Ch] [bp-82Ch]
  _BYTE v2027[6]; // [sp-82Bh] [bp-82Bh] BYREF
  char v2028; // [sp-825h] [bp-825h]
  char v2029; // [sp-824h] [bp-824h]
  char v2030; // [sp-823h] [bp-823h] BYREF
  char v2031; // [sp-822h] [bp-822h]
  char v2032; // [sp-821h] [bp-821h]
  char v2033[3]; // [sp-820h] [bp-820h] BYREF
  char v2034; // [sp-81Dh] [bp-81Dh] BYREF
  char v2035; // [sp-81Ch] [bp-81Ch] BYREF
  char v2036; // [sp-81Bh] [bp-81Bh]
  char v2037; // [sp-81Ah] [bp-81Ah]
  char v2038; // [sp-819h] [bp-819h]
  char v2039; // [sp-818h] [bp-818h]
  char v2040; // [sp-817h] [bp-817h]
  char v2041; // [sp-816h] [bp-816h]
  char v2042; // [sp-815h] [bp-815h]
  char v2043; // [sp-814h] [bp-814h]
  char v2044; // [sp-813h] [bp-813h]
  char v2045; // [sp-812h] [bp-812h]
  char v2046; // [sp-811h] [bp-811h]
  char v2047; // [sp-810h] [bp-810h]
  char v2048; // [sp-80Fh] [bp-80Fh] BYREF
  char v2049; // [sp-80Eh] [bp-80Eh]
  char v2050; // [sp-80Dh] [bp-80Dh]
  char v2051; // [sp-80Ch] [bp-80Ch] BYREF
  char v2052; // [sp-80Bh] [bp-80Bh] BYREF
  char v2053; // [sp-80Ah] [bp-80Ah]
  char v2054; // [sp-809h] [bp-809h]
  _BYTE v2055[1024]; // [sp-808h] [bp-808h] BYREF
  _BYTE v2056[1032]; // [sp-408h] [bp-408h] BYREF

  if ( v14 )
  {
    a1 = v14 >> 30;
    v13 = v15 >> 14;
  }
  v16 = *(_DWORD *)v13;
  v17 = *(_DWORD *)(*(_DWORD *)a1 + 4);
  *(_DWORD *)(*(_DWORD *)&byte_8[4 * v15] + 72) = v16;
  v18 = *(_DWORD *)(v17 + v16);
  if ( !v18 )
  {
    *(_DWORD *)(**(_DWORD **)(v16 - 204) + 12) = 256;
    goto LABEL_4055;
  }
  v2012 = v18;
  for ( i = 0; i != 256; ++i )
    v2056[i] = i;
  LOBYTE(v20) = 0;
  for ( j = 0; j != 256; ++j )
  {
    v22 = v2056[j];
    v20 = (unsigned __int8)(v20 + v22 + *((_BYTE *)&v2012 + (j & 3)));
    v2056[j] = v2056[v20];
    v2056[v20] = v22;
  }
  LOBYTE(v23) = 0;
  LOBYTE(v24) = 0;
  v2003 = dword_280F480;
  v25 = (char *)dword_280F480 + 3;
  v2004 = (char *)dword_280F480 + 3;
  v26 = (char *)dword_280F480 + 3;
  v2002 = (char *)&unk_280F503;
  while ( v26 != v2002 )
  {
    v24 = (unsigned __int8)(v24 + 1);
    v27 = v2056[v24];
    v23 = (unsigned __int8)(v23 + v27);
    v2056[v24] = v2056[v23];
    v2056[v23] = v27;
    v28 = (unsigned __int8)v2056[(unsigned __int8)(v27 + v2056[v24])];
    v26[1] ^= ((v28 >> 4) | (16 * v28)) - 92;
    ++v26;
  }
  v29 = dword_280F504 ^ dword_280F508;
  dword_280F504 ^= dword_280F508;
  v30 = 0;
  v2011 = dword_280F508;
  do
  {
    v2056[v30] = v30;
    ++v30;
  }
  while ( v30 != 256 );
  LOBYTE(v31) = 0;
  for ( k = 0; k != 256; ++k )
  {
    v33 = v2056[k];
    v31 = (unsigned __int8)(v31 + v33 + *((_BYTE *)&v2011 + (k & 3)));
    v2056[k] = v2056[v31];
    v2056[v31] = v33;
  }
  LOBYTE(v34) = 0;
  v35 = &v2002[v29];
  v2005 = (char *)&dword_280F508 + 3;
  v36 = (char *)&dword_280F508 + 3;
  LOBYTE(v37) = 0;
  while ( v36 != v35 )
  {
    v37 = (unsigned __int8)(v37 + 1);
    v38 = v2056[v37];
    v34 = (unsigned __int8)(v34 + v38);
    v2056[v37] = v2056[v34];
    v2056[v34] = v38;
    v39 = (unsigned __int8)v2056[(unsigned __int8)(v38 + v2056[v37])];
    v36[1] ^= ((v39 >> 4) | (16 * v39)) - 92;
    ++v36;
  }
  memset(v2016, 0, sizeof(v2016));
  for ( m = 0; m != 256; ++m )
  {
    v41 = m;
    v42 = 8;
    do
    {
      v43 = (v41 & 1) == 0;
      v44 = v41 >> 1;
      if ( (v41 & 1) != 0 )
        v41 = -1888602208;
      else
        v41 >>= 1;
      if ( !v43 )
        v41 ^= v44;
      --v42;
    }
    while ( v42 );
    v2016[m] = v41;
  }
  v45 = -1;
  while ( v42 != 16 * dword_280F510 )
  {
    v46 = (char *)dword_280F480 + v42++;
    v45 = (v2016[(unsigned __int8)v45 ^ (unsigned __int8)v46[156]] ^ (v45 >> 8)) + 16;
  }
  if ( 517762880 - v45 != dword_280F514 )
  {
    *(_DWORD *)(**((_DWORD **)v1988 - 51) + 20) = &unk_280F491;
    goto LABEL_4055;
  }
  v2022 = 46;
  v2026 = 53;
  v2023 = 49;
  v2027[1] = 18;
  v2024 = 56;
  v2027[2] = 6;
  v2025 = 12;
  v2027[3] = 10;
  v2027[0] = 38;
  v2027[4] = 40;
  v2028 = 38;
  v2029 = 53;
  v2031 = 38;
  v1992 = &v2022;
  v2032 = -19;
  v2027[5] = 43;
  strcpy(v2033, "'+");
  v47 = 0;
  v2030 = 55;
  do
  {
    v48 = (unsigned __int8)*(&v2022 + v47) ^ 0x1F;
    if ( v48 + 59 > 255 )
      *(&v2022 + v47) = v48 + 60;
    else
      v25 = &v2022;
    if ( v48 + 59 <= 255 )
      v25[v47] = v48 + 59;
    ++v47;
  }
  while ( v47 != 18 );
  v1999 = v2055;
  memset(v2055, 0, sizeof(v2055));
  v2035 = 95;
  v2039 = 76;
  v2036 = 2;
  v2040 = 92;
  v2037 = 29;
  v2041 = 22;
  v2038 = 12;
  v2042 = 9;
  v2046 = 12;
  v2043 = 10;
  v2047 = 17;
  v2044 = 73;
  v2048 = 3;
  v2045 = 66;
  v2050 = 0;
  v2049 = 115;
  v49 = &v2048;
  v1985 = (unsigned int)&v2035;
  do
  {
    v50 = *v49--;
    v49[1] = v50 ^ v49[2];
  }
  while ( v49 != &v2034 );
  v51 = 0;
  LOWORD(v2013) = 114;
  v1983 = (char *)&v2013;
  qmemcpy(v2021, "OHBL", 4);
  v2021[4] = 4;
  strcpy(&v2021[5], "E@K");
  do
    v2021[v51++] ^= 0x29u;
  while ( v51 != 8 );
  v52 = (unsigned int *)*((_DWORD *)v1988 - 51);
  v53 = (const char *)(*(int (__fastcall **)(char *, int *))(*v52 + 76))(&v2035, &v2013);
  v1989 = v52;
  v1995 = (char *)v53;
  if ( !v53 )
    goto LABEL_58;
  memset(v2056, 0, 0x400u);
  while ( 1 )
  {
    if ( !(*(int (__fastcall **)(_BYTE *, int, char *))(*v1989 + 80))(v2056, 1023, v1995) )
    {
      v55 = 0;
      goto LABEL_51;
    }
    if ( (*(int (__fastcall **)(_BYTE *, void *))(*v1989 + 28))(v2056, &unk_280F484) )
    {
      v54 = (*(int (__fastcall **)(_BYTE *, char *))(*v1989 + 28))(v2056, v2021);
      if ( !v54 )
      {
        LOWORD(v2014) = 47;
        v1223 = (char *)(*(int (__fastcall **)(_BYTE *, int *))(*v1989 + 28))(v2056, &v2014);
        v1993 = v1223;
        if ( v1223 )
          break;
      }
    }
  }
  v1987 = (*(int (**)(void))(*v1989 + 32))();
  if ( v1993 == v1999 )
  {
    memset(v2016, 0, sizeof(v2016));
    do
    {
      v1224 = v54;
      v1225 = 8;
      do
      {
        v1226 = (v1224 & 1) == 0;
        v1227 = v1224 >> 1;
        if ( (v1224 & 1) != 0 )
          v1224 = -128629065;
        else
          v1224 >>= 1;
        if ( !v1226 )
          v1224 ^= v1227;
        --v1225;
      }
      while ( v1225 );
      v2016[v54++] = v1224;
    }
    while ( v54 != 256 );
    v1228 = -1;
    do
    {
      v1229 = (unsigned __int8)v2055[v1225++];
      v1228 = (v2016[v1229 ^ (unsigned __int8)v1228] ^ (v1228 >> 8)) + 16;
    }
    while ( v1225 != 4 );
    switch ( v1987 )
    {
      case 0u:
      case 1u:
      case 2u:
        v1230 = 0;
        break;
      case 3u:
        v1230 = 3;
        break;
      case 4u:
        v1230 = 517762881 - v1228;
        break;
      case 5u:
        v1230 = 517762879 - v1228;
        break;
      case 6u:
        v1230 = 7;
        break;
      case 7u:
        v1230 = 6;
        break;
      default:
        v1230 = v1987 + 15;
        break;
    }
    v1987 = v1230 % 16;
  }
  v2016[0] = -1523182318;
  LOBYTE(v2016[1]) = 0;
  v1231 = strlen((const char *)v2016);
  v1232 = *v1989;
  v1233 = (char *)*((_DWORD *)v1988 - 49);
  v1234 = v1231;
  if ( v1231 && (v1235 = v1231 + 1, v1235 > v1234) && (v1236 = (char *)malloc(v1235), (v1998 = v1236) != 0) )
  {
    (*(void (__fastcall **)(char *, _DWORD *, size_t))(v1232 + 24))(v1236, v2016, v1234);
    v1998[v1234] = 0;
  }
  else
  {
    v1234 = 0;
    v1998 = v1233;
  }
  v2015 = (_BYTE *)&loc_A65562;
  v1237 = strlen((const char *)&v2015);
  v1238 = *v1989;
  v1239 = v1237;
  if ( v1237 && (v1240 = v1237 + 1, v1240 > v1239) && (v1241 = (char *)malloc(v1240), (v1242 = v1241) != 0) )
  {
    (*(void (__fastcall **)(char *, char **, unsigned int))(v1238 + 24))(v1241, &v2015, v1239);
    v1242[v1239] = 0;
  }
  else
  {
    v1239 = 0;
    v1242 = v1233;
  }
  v1243 = v1239 + 2;
  v1244 = v2016[0];
  if ( v1239 + 2 < v1239 )
    goto LABEL_2364;
  v1245 = v1239 + 1;
  if ( v1239 + 1 >= v1239 )
  {
    if ( v1243 < v1245 )
      goto LABEL_2364;
    if ( v1242 == v1233 )
    {
      if ( v1243 > v1245 )
      {
        v1246 = (char *)malloc(v1239 + 2);
        if ( v1246 )
        {
          *v1246 = 0;
          goto LABEL_2362;
        }
      }
LABEL_2364:
      v1991 = *v1989;
      v1247 = strlen(v1993);
      v1248 = v1247;
      if ( v1247 && (v1249 = v1247 + 1, v1249 > v1248) && (v1250 = (char *)malloc(v1249), (v1251 = v1250) != 0) )
      {
        (*(void (__fastcall **)(char *, char *, unsigned int))(v1991 + 24))(v1250, v1993, v1248);
        v1251[v1248] = 0;
      }
      else
      {
        v1248 = 0;
        v1251 = v1233;
      }
      if ( v1234 != 8 )
      {
        if ( v1234 != 9 )
        {
          if ( v1234 != 7 )
          {
            v1256 = v1239 - 4;
            goto LABEL_2405;
          }
          v1252 = v1248 + 2;
          v1253 = BYTE1(v2015);
          if ( v1248 + 2 < v1248 )
            goto LABEL_2381;
          v1254 = v1248 + 1;
          if ( v1248 + 1 >= v1248 )
          {
            if ( v1252 < v1254 )
              goto LABEL_2381;
            if ( v1251 == v1233 )
            {
              if ( v1252 > v1254 )
              {
                v1255 = (char *)malloc(v1248 + 2);
                if ( v1255 )
                {
                  *v1255 = 0;
                  goto LABEL_2379;
                }
              }
LABEL_2381:
              v1256 = v1248 + 20;
LABEL_2405:
              if ( v1251 != v1233 )
                free(v1251);
              if ( v1242 != v1233 )
                free(v1242);
              if ( v1998 != v1233 )
                free(v1998);
              while ( v1256 < v1987 )
              {
                v2055[v1256] = v1993[v1256];
                ++v1256;
              }
              v1265 = (char *)(*(int (__fastcall **)(_BYTE *, void *))(*v1989 + 28))(v2055, &unk_280F484);
              v1266 = *(int (__fastcall **)(char *))(*v1989 + 32);
              v1998 = v1265;
              v1987 = v1266(&v2022);
              if ( v1998 == v1992 )
              {
                memset(v2016, 0, sizeof(v2016));
                for ( n = 0; n != 256; ++n )
                {
                  v1268 = n;
                  v1269 = 8;
                  do
                  {
                    v1270 = (v1268 & 1) == 0;
                    v1271 = v1268 >> 1;
                    if ( (v1268 & 1) != 0 )
                      v1268 = -128629065;
                    else
                      v1268 >>= 1;
                    if ( !v1270 )
                      v1268 ^= v1271;
                    --v1269;
                  }
                  while ( v1269 );
                  v2016[n] = v1268;
                }
                v1272 = 0;
                v1273 = -1;
                do
                {
                  v1274 = (unsigned __int8)*(&v2022 + v1272++);
                  v1273 = (v2016[v1274 ^ (unsigned __int8)v1273] ^ (v1273 >> 8)) + 16;
                }
                while ( v1272 != 4 );
                switch ( v1987 )
                {
                  case 0u:
                  case 1u:
                  case 2u:
                    v1275 = 0;
                    break;
                  case 3u:
                    v1275 = 3;
                    break;
                  case 4u:
                    v1275 = 517762881 - v1273;
                    break;
                  case 5u:
                    v1275 = 517762879 - v1273;
                    break;
                  case 6u:
                    v1275 = 7;
                    break;
                  case 7u:
                    v1275 = 6;
                    break;
                  default:
                    v1275 = v1987 + 15;
                    break;
                }
                v1987 = v1275 % 16;
              }
              v2016[0] = -1523182318;
              v1276 = *v1989;
              LOBYTE(v2016[1]) = 0;
              v1277 = strlen((const char *)v2016);
              v1278 = v1277;
              if ( v1277 && (v1279 = v1277 + 1, v1279 > v1278) && (v1280 = (char *)malloc(v1279), (v1993 = v1280) != 0) )
              {
                (*(void (__fastcall **)(char *, _DWORD *, size_t))(v1276 + 24))(v1280, v2016, v1278);
                v1993[v1278] = 0;
              }
              else
              {
                v1278 = 0;
                v1993 = v1233;
              }
              v2015 = (_BYTE *)&loc_A65562;
              v1281 = strlen((const char *)&v2015);
              v1282 = *v1989;
              v1283 = v1281;
              if ( v1281 && (v1284 = v1281 + 1, v1284 > v1283) && (v1285 = (char *)malloc(v1284), (v1286 = v1285) != 0) )
              {
                (*(void (__fastcall **)(char *, char **, unsigned int))(v1282 + 24))(v1285, &v2015, v1283);
                v1286[v1283] = 0;
              }
              else
              {
                v1283 = 0;
                v1286 = v1233;
              }
              v1287 = v1283 + 2;
              v1288 = v2016[0];
              if ( v1283 + 2 < v1283 )
                goto LABEL_2452;
              v1289 = v1283 + 1;
              if ( v1283 + 1 >= v1283 )
              {
                if ( v1287 < v1289 )
                  goto LABEL_2452;
                if ( v1286 == v1233 )
                {
                  if ( v1287 > v1289 )
                  {
                    v1290 = (char *)malloc(v1283 + 2);
                    if ( v1290 )
                    {
                      *v1290 = 0;
                      goto LABEL_2450;
                    }
                  }
LABEL_2452:
                  v1991 = *v1989;
                  v1291 = strlen(&v2022);
                  v1292 = v1291;
                  if ( v1291
                    && (v1293 = v1291 + 1, v1293 > v1292)
                    && (v1294 = (char *)malloc(v1293), (v1295 = v1294) != 0) )
                  {
                    (*(void (__fastcall **)(char *, char *, unsigned int))(v1991 + 24))(v1294, &v2022, v1292);
                    v1295[v1292] = 0;
                  }
                  else
                  {
                    v1292 = 0;
                    v1295 = v1233;
                  }
                  if ( v1278 != 8 )
                  {
                    if ( v1278 != 9 )
                    {
                      if ( v1278 != 7 )
                      {
                        v1300 = v1283 - 4;
                        goto LABEL_2493;
                      }
                      v1296 = v1292 + 2;
                      v1297 = BYTE1(v2015);
                      if ( v1292 + 2 < v1292 )
                        goto LABEL_2469;
                      v1298 = v1292 + 1;
                      if ( v1292 + 1 >= v1292 )
                      {
                        if ( v1296 < v1298 )
                          goto LABEL_2469;
                        if ( v1295 == v1233 )
                        {
                          if ( v1296 > v1298 )
                          {
                            v1299 = (char *)malloc(v1292 + 2);
                            if ( v1299 )
                            {
                              *v1299 = 0;
                              goto LABEL_2467;
                            }
                          }
LABEL_2469:
                          v1300 = v1292 + 20;
LABEL_2493:
                          if ( v1295 != v1233 )
                            free(v1295);
                          if ( v1286 != v1233 )
                            free(v1286);
                          if ( v1993 != v1233 )
                            free(v1993);
                          while ( v1300 < v1987 )
                          {
                            v1998[v1300] = *(&v2022 + v1300);
                            ++v1300;
                          }
                          v55 = 1;
                          v1998[(*(int (__fastcall **)(char *))(*v1989 + 32))(&v2022)] = 0;
LABEL_51:
                          (*(void (__fastcall **)(char *))(*v1989 + 84))(v1995);
                          if ( v55 )
                          {
                            v56 = (*(int (__fastcall **)(_BYTE *, _DWORD))(*v1989 + 36))(v2055, 0);
                            if ( !v56 )
                            {
LABEL_84:
                              *(_DWORD *)(*v1989 + 4) = dword_280F480;
                              goto LABEL_4055;
                            }
                            if ( (v56 & 1) == 0 )
                            {
                              v57 = *(_DWORD *)(*v1989 + 212) == 1 ? *(char **)(v56 + 8) : *(char **)(v56 + 140);
                              if ( v57 )
                              {
LABEL_83:
                                v1998 = v57;
                                if ( !v57 )
                                  goto LABEL_84;
                                if ( !v1997 )
                                  goto LABEL_2283;
                                v68 = *(_DWORD *)(*v1989 + 128);
                                if ( v68 )
                                  (*(void (__fastcall **)(int, _DWORD, int))(*v1989 + 20))(v68, 0, 256);
                                v69 = (char *)*((_DWORD *)v1988 - 45);
                                v1987 = (unsigned int)v2056;
                                v70 = *((_DWORD *)v69 + 8);
                                v1993 = v69;
                                v71 = 12 * v70;
                                v2013 = *((_DWORD *)v69 + 6);
                                for ( ii = 0; ii != 256; ++ii )
                                  *((_BYTE *)&v1980 + ii + 2284) = ii;
                                LOBYTE(v73) = 0;
                                for ( jj = 0; jj != 256; ++jj )
                                {
                                  v75 = &v2013;
                                  v76 = v2056[jj];
                                  v73 = (unsigned __int8)(v73 + v76 + *((_BYTE *)&v2013 + (jj & 3)));
                                  v2056[jj] = v2056[v73];
                                  v2056[v73] = v76;
                                }
                                LOBYTE(v77) = 0;
                                LOBYTE(v78) = 0;
                                v2001 = v1993 + 35;
                                v79 = &v1993[v71 + 35];
                                for ( kk = v1993 + 35; kk != v79; ++kk )
                                {
                                  v78 = (unsigned __int8)(v78 + 1);
                                  v81 = v2056[v78];
                                  v77 = (unsigned __int8)(v77 + v81);
                                  v2056[v78] = v2056[v77];
                                  v2056[v77] = v81;
                                  v82 = (unsigned __int8)v2056[(unsigned __int8)(v81 + v2056[v78])];
                                  v75 = (int *)(unsigned __int8)kk[1];
                                  kk[1] = (((v82 >> 4) | (16 * v82)) - 92) ^ (unsigned __int8)v75;
                                }
                                v1995 = (char *)*((_DWORD *)v1993 + 7);
                                if ( !*((_DWORD *)v1993 + 8) )
                                  goto LABEL_2214;
                                if ( v1995 == (_BYTE *)&jpt_9DA69C + 1 )
                                {
                                  v1991 = 0;
                                  v1983 = (char *)&v2015;
                                  while ( 1 )
                                  {
                                    if ( v1991 >= *((_DWORD *)v1993 + 8) )
                                      goto LABEL_2207;
                                    v83 = &v1993[12 * v1991];
                                    v84 = *((_DWORD *)v83 + 11);
                                    switch ( v84 )
                                    {
                                      case 0:
                                        v85 = *((_DWORD *)v83 + 10);
                                        if ( v85 )
                                          **((_DWORD **)v1988 - 44) = &v1998[v85];
                                        v86 = v1997 + *(_DWORD *)&v1993[12 * v1991 + 36];
                                        v87 = *((_DWORD *)v1988 - 43);
                                        if ( !v86 )
                                          goto LABEL_522;
                                        v88 = (unsigned int *)operator new(0x7Cu);
                                        v89 = v88;
                                        if ( !v88 )
                                          goto LABEL_522;
                                        (*(void (__fastcall **)(unsigned int *, _DWORD, int))(*v1989 + 20))(v88, 0, 124);
                                        v90 = v1988;
                                        *v89 = v86;
                                        v89[1] = v87;
                                        if ( (v86 & 1) != 0 )
                                          v91 = 12;
                                        else
                                          v91 = 8;
                                        v92 = *((_DWORD *)v90 - 42);
                                        v89[30] = v91;
                                        v89[2] = v92;
                                        v93 = operator new[](v91);
                                        v1984 = v93;
                                        v89[3] = v93;
                                        if ( !v93 )
                                          goto LABEL_521;
                                        v94 = v89[30];
                                        v1982 = (char *)(*v89 & 0xFFFFFFFE);
                                        v1990 = v94;
                                        if ( (char *)v1984 == v1982 )
                                        {
                                          memset(v2016, 0, sizeof(v2016));
                                          for ( mm = 0; mm != 256; ++mm )
                                          {
                                            v96 = mm;
                                            v97 = 8;
                                            do
                                            {
                                              v98 = (v96 & 1) == 0;
                                              v99 = v96 >> 1;
                                              if ( (v96 & 1) != 0 )
                                                v96 = -128629065;
                                              else
                                                v96 >>= 1;
                                              if ( !v98 )
                                                v96 ^= v99;
                                              --v97;
                                            }
                                            while ( v97 );
                                            v2016[mm] = v96;
                                          }
                                          v100 = 0;
                                          v101 = -1;
                                          do
                                          {
                                            v102 = *(unsigned __int8 *)(v1984 + v100++);
                                            v101 = (v2016[v102 ^ (unsigned __int8)v101] ^ (v101 >> 8)) + 16;
                                          }
                                          while ( v100 != 4 );
                                          v103 = ~v101;
                                          switch ( v94 )
                                          {
                                            case 0u:
                                            case 1u:
                                            case 2u:
                                              v104 = 0;
                                              break;
                                            case 3u:
                                              v104 = 3;
                                              break;
                                            case 4u:
                                              v104 = v103 + 517762882;
                                              break;
                                            case 5u:
                                              v104 = v103 + 517762880;
                                              break;
                                            case 6u:
                                              v104 = 7;
                                              break;
                                            case 7u:
                                              v104 = 6;
                                              break;
                                            default:
                                              v104 = v94 + 15;
                                              break;
                                          }
                                          v1990 = v104 % 16;
                                        }
                                        v2016[0] = -1523182318;
                                        LOBYTE(v2016[1]) = 0;
                                        v105 = strlen((const char *)v2016);
                                        v106 = *v1989;
                                        v107 = (_BYTE *)*((_DWORD *)v1988 - 49);
                                        v108 = v105;
                                        if ( v105
                                          && (v109 = v105 + 1, v109 > v108)
                                          && (v110 = malloc(v109), (v1986 = (unsigned int)v110) != 0) )
                                        {
                                          (*(void (__fastcall **)(void *, _DWORD *, size_t))(v106 + 24))(
                                            v110,
                                            v2016,
                                            v108);
                                          *(_BYTE *)(v1986 + v108) = 0;
                                        }
                                        else
                                        {
                                          v108 = 0;
                                          v1986 = (unsigned int)v107;
                                        }
                                        v2015 = (_BYTE *)&loc_A65562;
                                        v1309 = strlen((const char *)&v2015);
                                        v1310 = *v1989;
                                        v1311 = v1309;
                                        if ( v1309
                                          && (v1312 = v1309 + 1, v1312 > v1311)
                                          && (v1313 = malloc(v1312), (v1314 = v1313) != 0) )
                                        {
                                          (*(void (__fastcall **)(_BYTE *, char **, unsigned int))(v1310 + 24))(
                                            v1313,
                                            &v2015,
                                            v1311);
                                          v1314[v1311] = 0;
                                        }
                                        else
                                        {
                                          v1311 = 0;
                                          v1314 = v107;
                                        }
                                        v1315 = v1311 + 2;
                                        v1316 = v2016[0];
                                        if ( v1311 + 2 < v1311 )
                                          goto LABEL_2523;
                                        v1317 = v1311 + 1;
                                        if ( v1311 + 1 >= v1311 )
                                        {
                                          if ( v1315 < v1317 )
                                            goto LABEL_2523;
                                          if ( v1314 == v107 )
                                          {
                                            if ( v1315 > v1317 )
                                            {
                                              v1318 = malloc(v1311 + 2);
                                              if ( v1318 )
                                              {
                                                *v1318 = 0;
                                                goto LABEL_2521;
                                              }
                                            }
LABEL_2523:
                                            v1319 = *v1989;
                                            if ( v1982 )
                                            {
                                              v1320 = strlen(v1982);
                                              v1321 = v1320;
                                              if ( v1320 )
                                              {
                                                v1322 = v1320 + 1;
                                                if ( v1322 > v1321 )
                                                {
                                                  v1323 = malloc(v1322);
                                                  v1324 = v1323;
                                                  if ( v1323 )
                                                  {
                                                    (*(void (__fastcall **)(_BYTE *, char *, unsigned int))(v1319 + 24))(
                                                      v1323,
                                                      v1982,
                                                      v1321);
                                                    v1324[v1321] = 0;
                                                    goto LABEL_2530;
                                                  }
                                                }
                                              }
                                              v1321 = 0;
                                            }
                                            else
                                            {
                                              v1321 = 0;
                                            }
                                            v1324 = v107;
LABEL_2530:
                                            if ( v108 != 8 )
                                            {
                                              if ( v108 != 9 )
                                              {
                                                if ( v108 != 7 )
                                                {
                                                  v1329 = v1311 - 4;
                                                  goto LABEL_2567;
                                                }
                                                v1325 = v1321 + 2;
                                                v1326 = BYTE1(v2015);
                                                if ( v1321 + 2 < v1321 )
                                                  goto LABEL_2543;
                                                v1327 = v1321 + 1;
                                                if ( v1321 + 1 >= v1321 )
                                                {
                                                  if ( v1325 < v1327 )
                                                    goto LABEL_2543;
                                                  if ( v1324 == v107 )
                                                  {
                                                    if ( v1325 > v1327 )
                                                    {
                                                      v1328 = malloc(v1321 + 2);
                                                      if ( v1328 )
                                                      {
                                                        *v1328 = 0;
                                                        goto LABEL_2541;
                                                      }
                                                    }
LABEL_2543:
                                                    v1329 = v1321 + 20;
LABEL_2567:
                                                    if ( v1324 != v107 )
                                                      free(v1324);
                                                    if ( v1314 != v107 )
                                                      free(v1314);
                                                    if ( (_BYTE *)v1986 != v107 )
                                                      free((void *)v1986);
                                                    while ( v1329 < v1990 )
                                                    {
                                                      *(_BYTE *)(v1984 + v1329) = v1982[v1329];
                                                      ++v1329;
                                                    }
                                                    v1982 = (char *)*((_DWORD *)v1988 - 51);
                                                    v1338 = *(_DWORD *)v1982;
                                                    v1339 = *(_DWORD *)(*(_DWORD *)v1982 + 128);
                                                    if ( !v1339 )
                                                      v1339 = *((_DWORD *)v1988 - 30);
                                                    v1340 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                                    v1341 = v1339 + 84 * (*v1340)++;
                                                    v89[29] = v1341;
                                                    (*(void (__fastcall **)(unsigned int, unsigned int, int))(v1338 + 4))(
                                                      v1341 & 0xFFFFF000,
                                                      ((v1341 + 4351) & 0xFFFFF000) - (v1341 & 0xFFFFF000),
                                                      7);
                                                    v243 = *v89;
                                                    v1342 = v89[3];
                                                    v1990 = (unsigned int)(v89 + 8);
                                                    v1343 = v243 & 1;
                                                    v1344 = v89[30];
                                                    v1984 = v1342;
                                                    v247 = v89[29];
                                                    v1986 = (unsigned int)(v89 + 4);
                                                    if ( (v243 & 1) != 0 )
                                                    {
                                                      v248 = 0;
                                                      v1345 = v243 + 3;
                                                      v250 = 0;
                                                      v1990 = v1344 >> 1;
                                                      while ( 1 )
                                                      {
                                                        v1346 = *(unsigned __int16 *)(v1984 + 2 * v250);
                                                        if ( (unsigned int)((v1346 >> 11) - 29) > 2 )
                                                        {
                                                          v1376 = (_WORD *)(v247 + 2 * v248);
                                                          if ( (v1346 & 0xF000) == 0xD000 )
                                                          {
                                                            v1380 = 2 * (unsigned __int8)v1346;
                                                            if ( v1380 >> 8 )
                                                              v1380 |= 0xFFFFFF00;
                                                            v1383 = v1380 + v1345;
                                                            *(_WORD *)(v247 + 2 * v248) = v1346 & 0xFF00;
                                                            v1376[1] = -8189;
                                                            v1385 = 2;
                                                          }
                                                          else
                                                          {
                                                            v1377 = v1346 & 0xF800;
                                                            if ( v1377 == 57344 )
                                                            {
                                                              v1381 = v1346 & 0x7FF;
                                                              v1382 = 2 * v1381;
                                                              if ( (unsigned int)(2 * v1381) >> 11 )
                                                                v1382 = ~((unsigned int)~(v1381 << 22) >> 21);
                                                              v1383 = v1382 + v1345;
                                                            }
                                                            else
                                                            {
                                                              if ( (v1346 & 0xFFFFFFF8) != 0x4778 )
                                                              {
                                                                v1378 = v1346 & 0xFF78;
                                                                if ( v1378 == 17528 )
                                                                {
                                                                  for ( nn = 7;
                                                                        nn == (v1346 & 7
                                                                             | ((unsigned __int8)(v1346 & 0x80) >> 4));
                                                                        --nn )
                                                                  {
                                                                    ;
                                                                  }
                                                                  v1388 = 1 << nn;
                                                                  *(_WORD *)(v247 + 2 * v248) = v1388 | 0xB400;
                                                                  v1376[2] = v1346 & 0xFF87 | (8 * nn);
                                                                  v1376[6] = v1345;
                                                                  v1376[1] = ((_WORD)nn << 8) | 0x4802;
                                                                  v1376[3] = v1388 | 0xBC00;
                                                                  v1376[4] = -8190;
                                                                  v1376[5] = -16640;
                                                                  v1376[7] = HIWORD(v1345);
                                                                  v1387 = 8;
                                                                }
                                                                else
                                                                {
                                                                  if ( v1378 == 18040 )
                                                                  {
                                                                    v1379 = 4;
                                                                  }
                                                                  else if ( v1377 == 40960 )
                                                                  {
                                                                    v1379 = 5;
                                                                  }
                                                                  else if ( v1377 == 18432 )
                                                                  {
                                                                    v1379 = 6;
                                                                  }
                                                                  else if ( (v1346 & 0xF500) == 0xB100 )
                                                                  {
                                                                    v1379 = 7;
                                                                  }
                                                                  else
                                                                  {
                                                                    v1379 = 26;
                                                                  }
                                                                  if ( (unsigned int)(v1379 - 4) > 2 )
                                                                  {
                                                                    if ( v1379 == 7 )
                                                                    {
                                                                      *(_WORD *)(v247 + 2 * v248) = v1346 & 0xFD07;
                                                                      v1395 = (((unsigned __int16)(v1346 & 0x200) >> 3)
                                                                             | ((unsigned __int8)(v1346 & 0xF8) >> 2))
                                                                            + v1345
                                                                            + 1;
                                                                      v1376[2] = -1825;
                                                                      v1376[4] = v1395;
                                                                      v1376[3] = -4096;
                                                                      v1387 = 6;
                                                                      v1376[1] = -8189;
                                                                      v1376[5] = HIWORD(v1395);
                                                                    }
                                                                    else
                                                                    {
                                                                      *(_WORD *)(v247 + 2 * v248) = v1346;
                                                                      v1376[1] = -16640;
                                                                      v1387 = 2;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    if ( v1379 == 4 )
                                                                    {
                                                                      LOWORD(v1389) = *(_WORD *)(v1984 + 2 * v250) & 7;
                                                                      v1390 = v1345;
                                                                    }
                                                                    else
                                                                    {
                                                                      v1391 = v1379 == 5;
                                                                      v1392 = v1345 & 0xFFFFFFFC;
                                                                      v1393 = (unsigned __int8)v1346;
                                                                      v1394 = v1346 & 0x700;
                                                                      if ( v1391 )
                                                                        v1390 = v1393 + v1392;
                                                                      else
                                                                        v1390 = *(_DWORD *)(v1392 + 4 * v1393);
                                                                      v1389 = v1394 >> 8;
                                                                      if ( v1391 )
                                                                        v1390 *= 4;
                                                                    }
                                                                    *(_WORD *)(v247 + 2 * v248) = ((_WORD)v1389 << 8)
                                                                                                | 0x4800;
                                                                    v1376[2] = v1390;
                                                                    v1387 = 4;
                                                                    v1376[1] = -8191;
                                                                    v1376[3] = HIWORD(v1390);
                                                                  }
                                                                }
                                                                goto LABEL_2683;
                                                              }
                                                              v1383 = v1345;
                                                            }
                                                            v1385 = 0;
                                                          }
                                                          v1376[v1385] = -1825;
                                                          v1386 = &v1376[v1385];
                                                          v1387 = v1385 + 4;
                                                          v1386[2] = v1383;
                                                          v1386[1] = -4096;
                                                          v1386[3] = HIWORD(v1383);
LABEL_2683:
                                                          v1345 += 2;
                                                          v248 += v1387;
                                                          ++v250;
                                                          goto LABEL_2684;
                                                        }
                                                        v1986 = v250 + 2;
                                                        if ( v250 + 2 > v1990 )
                                                          goto LABEL_443;
                                                        v1347 = *(unsigned __int16 *)(2 * v250 + v1984 + 2);
                                                        v1348 = v247 + 2 * v248;
                                                        v1349 = v1347 | (v1346 << 16);
                                                        v1350 = v1349 & 0xF800D000;
                                                        if ( (v1349 & 0xF800D000) == 0xF000C000 )
                                                        {
                                                          v1351 = 8;
                                                        }
                                                        else
                                                        {
                                                          switch ( v1350 )
                                                          {
                                                            case 0xF000D000:
                                                              v1351 = 9;
                                                              break;
                                                            case 0xF0008000:
                                                              v1351 = 10;
                                                              break;
                                                            case 0xF0009000:
                                                              v1351 = 11;
                                                              break;
                                                            default:
                                                              if ( (v1349 & 0xFBFF8000) == 0xF2AF0000 )
                                                              {
                                                                v1351 = 12;
                                                              }
                                                              else if ( (v1349 & 0xFBFF8000) == 0xF20F0000 )
                                                              {
                                                                v1351 = 13;
                                                              }
                                                              else if ( (v1349 & 0xFF7F0000) == 0xF85F0000 )
                                                              {
                                                                v1351 = 14;
                                                              }
                                                              else if ( (v1347 & 0xFFFF00F0 | (v1346 << 16)) == 0xE8DF0000 )
                                                              {
                                                                v1351 = 15;
                                                              }
                                                              else if ( (v1347 & 0xFFFF00F0 | (v1346 << 16)) == 0xE8DF0010 )
                                                              {
                                                                v1351 = 16;
                                                              }
                                                              else
                                                              {
                                                                v1351 = 26;
                                                              }
                                                              break;
                                                          }
                                                        }
                                                        v1996 = v1351 - 8;
                                                        if ( (unsigned int)(v1351 - 8) > 3 )
                                                        {
                                                          if ( (unsigned int)(v1351 - 12) > 2 )
                                                          {
                                                            if ( (unsigned int)(v1351 - 15) > 1 )
                                                            {
                                                              *(_WORD *)(v247 + 2 * v248) = v1346;
                                                              v1359 = 2;
                                                              *(_WORD *)(v1348 + 2) = v1347;
                                                            }
                                                            else
                                                            {
                                                              v1367 = v1347 & 0xF;
                                                              for ( i1 = 7; i1 == v1367; --i1 )
                                                                ;
                                                              for ( i2 = 7; i2 == v1367 || i2 == i1; --i2 )
                                                                ;
                                                              v1370 = 1 << i2;
                                                              *(_WORD *)(v247 + 2 * v248) = v1370 | 0xB400;
                                                              *(_WORD *)(v1348 + 6) = i1 | 0xEB00;
                                                              v1371 = (_WORD)i1 << 8;
                                                              *(_WORD *)(v1348 + 2) = ((_WORD)i1 << 8) | 0x4805;
                                                              v1372 = i2;
                                                              *(_WORD *)(v1348 + 4) = i2 | (8 * v1367) | 0x4600;
                                                              v1373 = (_WORD)i2 << 8;
                                                              v1374 = 8 * i2;
                                                              if ( v1351 == 15 )
                                                              {
                                                                *(_WORD *)(v1348 + 8) = v1373 | v1372;
                                                                v1375 = v1372 | 0x7800;
                                                              }
                                                              else
                                                              {
                                                                *(_WORD *)(v1348 + 8) = v1372 | 0x40 | v1373;
                                                                v1375 = v1372 | 0x8800;
                                                              }
                                                              *(_WORD *)(v1348 + 10) = v1374 | v1375;
                                                              *(_WORD *)(v1348 + 14) = v1372 | v1371 | 0x40;
                                                              *(_WORD *)(v1348 + 18) = v1370 | 0xBC00;
                                                              *(_WORD *)(v1348 + 12) = i1 | 0xEB00;
                                                              *(_WORD *)(v1348 + 22) = -16640;
                                                              v1359 = 14;
                                                              *(_WORD *)(v1348 + 16) = v1371 | 0x3001;
                                                              *(_WORD *)(v1348 + 20) = (8 * i1) | 0x4700;
                                                              *(_DWORD *)(v1348 + 24) = v1345;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if ( v1351 == 14 )
                                                            {
                                                              v1360 = (int)v1347 >> 12;
                                                              v43 = (v1346 & 0x80) == 0;
                                                              v1364 = v1345 & 0xFFFFFFFC;
                                                              v1365 = v1347 & 0xFFF;
                                                              if ( v43 )
                                                                v1366 = (unsigned int *)(v1364 - v1365);
                                                              else
                                                                v1366 = (unsigned int *)(v1365 + v1364);
                                                              v1363 = *v1366;
                                                            }
                                                            else
                                                            {
                                                              v1360 = (v1347 >> 8) & 0xF;
                                                              v1361 = (v1349 << 27)
                                                                    | (v1347 >> 12 << 30)
                                                                    | ((unsigned int)v1346 >> 10 << 31);
                                                              v1362 = v1345 & 0xFFFFFFFC;
                                                              if ( v1351 == 12 )
                                                                v1363 = v1361 + v1362;
                                                              else
                                                                v1363 = v1362 - v1361;
                                                            }
                                                            *(_WORD *)(v247 + 2 * v248) = ((_WORD)v1360 << 8) | 0x4800;
                                                            *(_WORD *)(v1348 + 4) = v1363;
                                                            v1359 = 4;
                                                            *(_WORD *)(v1348 + 2) = -8191;
                                                            *(_WORD *)(v1348 + 6) = HIWORD(v1363);
                                                          }
                                                          goto LABEL_2644;
                                                        }
                                                        v2000 = (v1347 >> 11) & 1;
                                                        v1352 = ((unsigned int)v1346 >> 10) & 1;
                                                        v1994 = (v1347 >> 13) & 1;
                                                        v1353 = v1994 == v1352;
                                                        v1981 = v2000 == v1352;
                                                        if ( v1996 <= 1 )
                                                          break;
                                                        if ( v1351 == 10 )
                                                        {
                                                          v1996 = 4 * (v1346 & 0x3C0);
                                                          *(_WORD *)(v247 + 2 * v248) = (4 * (v1346 & 0x3C0)) | 0xD000;
                                                          *(_WORD *)(v1348 + 2) = -8189;
                                                          goto LABEL_2605;
                                                        }
                                                        v1354 = 0;
LABEL_2607:
                                                        v1980 = 2 * v1354;
                                                        *(_WORD *)(v1348 + 2 * v1354) = -1825;
                                                        *(_WORD *)(2 * v1354 + v1348 + 2) = -4096;
                                                        if ( v1351 == 8 )
                                                        {
                                                          v1355 = (2 * (v1347 & 0x7FE))
                                                                | (v1352 << 24)
                                                                | ((v1346 & 0x3FF) << 12)
                                                                | (v1353 << 23)
                                                                | (v1981 << 22);
                                                          if ( v1352 )
                                                            v1355 |= 0xFE000000;
                                                          v1356 = v1355 + v1345;
                                                          goto LABEL_2620;
                                                        }
                                                        v1357 = 2 * (v1347 & 0x7FF);
                                                        if ( v1351 == 9 )
                                                        {
                                                          v1358 = v1357
                                                                | (v1352 << 24)
                                                                | ((v1346 & 0x3FF) << 12)
                                                                | (v1353 << 23)
                                                                | (v1981 << 22);
                                                        }
                                                        else
                                                        {
                                                          if ( v1351 == 10 )
                                                          {
                                                            v1358 = v1357
                                                                  | (v1352 << 20)
                                                                  | ((v1346 & 0x3F) << 12)
                                                                  | (v2000 << 19)
                                                                  | (v1994 << 18);
                                                            if ( v1352 )
                                                              v1358 = ~(~(v1358 << 11) >> 11);
                                                            goto LABEL_2619;
                                                          }
                                                          v1358 = v1357
                                                                | (v1352 << 24)
                                                                | ((v1346 & 0x3FF) << 12)
                                                                | (v1353 << 23)
                                                                | (v1981 << 22);
                                                        }
                                                        if ( v1352 )
                                                          v1358 |= 0xFE000000;
LABEL_2619:
                                                        v1356 = v1358 + v1345 + 1;
LABEL_2620:
                                                        v1359 = v1354 + 4;
                                                        *(_DWORD *)(v1348 + v1980 + 4) = v1356;
LABEL_2644:
                                                        v1345 += 4;
                                                        v248 += v1359;
                                                        v250 = v1986;
LABEL_2684:
                                                        if ( v250 >= v1990 )
                                                          goto LABEL_443;
                                                      }
                                                      *(_WORD *)(v247 + 2 * v248) = -3569;
                                                      *(_WORD *)(v1348 + 2) = 3593;
LABEL_2605:
                                                      v1354 = 2;
                                                      goto LABEL_2607;
                                                    }
                                                    v319 = v243 + 8;
                                                    v320 = v1344 >> 2;
                                                    v321 = (char *)(v1984 - v243);
                                                    v1994 = v1344 + v243;
                                                    v322 = 0;
                                                    for ( i3 = 0; ; ++i3 )
                                                    {
                                                      v308 = 4 * v1343;
                                                      if ( i3 == v320 )
                                                        break;
                                                      *(_DWORD *)(v1986 + 4 * v89[28]) = 4 * i3;
                                                      *(_DWORD *)(v1990 + 4 * v89[28]++) = v308;
                                                      v1396 = *(_DWORD *)&v321[v319 - 8];
                                                      if ( (v1396 & 0xFE000000) == 0xFA000000 )
                                                      {
                                                        v1397 = (_DWORD *)(&word_10 + 1);
                                                      }
                                                      else if ( (v1396 & 0xF000000) == 0xB000000 )
                                                      {
                                                        v1397 = (_DWORD *)&word_12;
                                                      }
                                                      else if ( (v1396 & 0xF000000) == 0xA000000 )
                                                      {
                                                        v1397 = (_DWORD *)(&word_12 + 1);
                                                      }
                                                      else if ( (v1396 & 0xFF000FF) == 0x120001F )
                                                      {
                                                        v1397 = &dword_14;
                                                      }
                                                      else if ( (v1396 & 0xFEF0010) == 0x8F0000 )
                                                      {
                                                        v1397 = &dword_14 + 1;
                                                      }
                                                      else if ( (v1396 & 0xFFF0000) == 0x28F0000 )
                                                      {
                                                        v1397 = &dword_14 + 2;
                                                      }
                                                      else if ( (v1396 & 0xFFF0000) == 0x24F0000 )
                                                      {
                                                        v1397 = &dword_14 + 3;
                                                      }
                                                      else if ( (v1396 & 0xE5F0000) == 0x41F0000 )
                                                      {
                                                        v1397 = &dword_18 + 1;
                                                      }
                                                      else if ( (v1396 & 0xFE00FFF) == 0x1A0000F )
                                                      {
                                                        v1397 = &dword_18;
                                                      }
                                                      else
                                                      {
                                                        v1397 = &dword_18 + 2;
                                                      }
                                                      if ( (unsigned int)v1397 - 17 > 3 )
                                                      {
                                                        if ( v1397 == (int *)((char *)&dword_14 + 1) )
                                                        {
                                                          for ( i4 = 12;
                                                                i4 == (unsigned __int16)v1396 >> 12
                                                             || i4 == (*(_DWORD *)&v321[v319 - 8] & 0xF);
                                                                --i4 )
                                                          {
                                                            ;
                                                          }
                                                          v1343 += 6;
                                                          *(_DWORD *)(v247 + v308) = (i4 << 12) | 0xE52D0004;
                                                          v1403 = (_DWORD *)(v308 + v247);
                                                          v1403[2] = v1396 & 0xFFF0FFFF | (i4 << 16);
                                                          v1403[5] = v319;
                                                          v1403[3] = (i4 << 12) | 0xE49D0004;
                                                          v1403[1] = (i4 << 12) | 0xE59F0008;
                                                          v1403[4] = -493883392;
                                                        }
                                                        else if ( (unsigned int)v1397 - 22 > 3 )
                                                        {
                                                          ++v1343;
                                                          *(_DWORD *)(v247 + v308) = v1396;
                                                        }
                                                        else
                                                        {
                                                          if ( (unsigned int)v1397 - 22 <= 1
                                                            || v1397 == (int *)((char *)&dword_18 + 1) )
                                                          {
                                                            v1404 = *(_DWORD *)&v321[v319 - 8] & 0xFFF;
                                                            if ( v1397 == (int *)((char *)&dword_14 + 2) )
                                                            {
                                                              v322 = v1404 + v319;
                                                            }
                                                            else if ( v1397 == (int *)((char *)&dword_14 + 3) )
                                                            {
                                                              v322 = v319 - v1404;
                                                            }
                                                            else if ( v1397 == (int *)((char *)&dword_18 + 1) )
                                                            {
                                                              if ( (v1396 & 0x800000) != 0 )
                                                                v322 = *(_DWORD *)(v1404 + v319);
                                                              else
                                                                v1397 = (int *)(v319 - v1404);
                                                              if ( (v1396 & 0x800000) == 0 )
                                                                v322 = *v1397;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            v322 = v319;
                                                          }
                                                          v1343 += 3;
                                                          *(_DWORD *)(v247 + v308) = ((unsigned __int16)v1396 >> 12 << 12)
                                                                                   | 0xE51F0000;
                                                          v1405 = v308 + v247;
                                                          *(_DWORD *)(v1405 + 4) = -493883392;
                                                          *(_DWORD *)(v1405 + 8) = v322;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        if ( (unsigned int)v1397 - 17 <= 1 )
                                                        {
                                                          ++v1343;
                                                          *(_DWORD *)(v247 + v308) = -493887484;
                                                        }
                                                        *(_DWORD *)(v247 + 4 * v1343) = -450891772;
                                                        if ( v1397 == (int *)((char *)&word_10 + 1) )
                                                        {
                                                          v1398 = v1396 & 0x1000000;
                                                          v1399 = (4 * (v1396 & 0xFFFFFF))
                                                                | ((v1396 & 0x1000000u) >> 23);
                                                        }
                                                        else
                                                        {
                                                          v1398 = (int)v1397 - 18;
                                                          if ( (unsigned int)v1397 - 18 > 1 )
                                                            v1399 = 0;
                                                          else
                                                            v1399 = v1396 & 0xFFFFFF;
                                                          if ( (unsigned int)v1397 - 18 <= 1 )
                                                            v1399 *= 4;
                                                        }
                                                        v1400 = 4 * v1343 + v247;
                                                        if ( v1399 >> 25 )
                                                          v1399 |= 0xFC000000;
                                                        v1401 = v1397 == (int *)((char *)&word_10 + 1);
                                                        if ( v1397 == (int *)((char *)&word_10 + 1) )
                                                          v1398 = v319 + 1;
                                                        else
                                                          v1397 = (int *)(v1399 + v319);
                                                        if ( v1401 )
                                                          v1397 = (int *)(v1399 + v1398);
                                                        v1343 += 2;
                                                        *(_DWORD *)(v1400 + 4) = v1397;
                                                      }
                                                      v319 += 4;
                                                    }
LABEL_509:
                                                    *(_DWORD *)(v247 + v308) = -450891772;
                                                    *(_DWORD *)(v308 + v247 + 4) = v1994;
                                                    goto LABEL_510;
                                                  }
                                                  v1328 = realloc(v1324, v1325);
                                                  if ( !v1328 )
                                                    goto LABEL_2543;
LABEL_2541:
                                                  v1324 = v1328;
                                                }
                                                v1324[v1321++] = v1326;
                                                v1324[v1327] = 0;
                                                goto LABEL_2543;
                                              }
                                              v1334 = v1321 + 2;
                                              v1335 = HIBYTE(v2016[0]);
                                              if ( v1321 + 2 < v1321 )
                                                goto LABEL_2565;
                                              v1336 = v1321 + 1;
                                              if ( v1321 + 1 >= v1321 )
                                              {
                                                if ( v1334 < v1336 )
                                                  goto LABEL_2565;
                                                if ( v1324 == v107 )
                                                {
                                                  if ( v1334 > v1336 )
                                                  {
                                                    v1337 = malloc(v1321 + 2);
                                                    if ( v1337 )
                                                    {
                                                      *v1337 = 0;
                                                      goto LABEL_2563;
                                                    }
                                                  }
LABEL_2565:
                                                  v1329 = v1321 + 6;
                                                  goto LABEL_2567;
                                                }
                                                v1337 = realloc(v1324, v1334);
                                                if ( !v1337 )
                                                  goto LABEL_2565;
LABEL_2563:
                                                v1324 = v1337;
                                              }
                                              v1324[v1321++] = v1335;
                                              v1324[v1336] = 0;
                                              goto LABEL_2565;
                                            }
                                            v1330 = v1321 + 2;
                                            v1331 = BYTE1(v2016[0]);
                                            if ( v1321 + 2 < v1321 )
                                              goto LABEL_2554;
                                            v1332 = v1321 + 1;
                                            if ( v1321 + 1 >= v1321 )
                                            {
                                              if ( v1330 < v1332 )
                                                goto LABEL_2554;
                                              if ( v1324 == v107 )
                                              {
                                                if ( v1330 > v1332 )
                                                {
                                                  v1333 = malloc(v1321 + 2);
                                                  if ( v1333 )
                                                  {
                                                    *v1333 = 0;
                                                    goto LABEL_2552;
                                                  }
                                                }
LABEL_2554:
                                                v1329 = v1321 + 8;
                                                goto LABEL_2567;
                                              }
                                              v1333 = realloc(v1324, v1330);
                                              if ( !v1333 )
                                                goto LABEL_2554;
LABEL_2552:
                                              v1324 = v1333;
                                            }
                                            v1324[v1321++] = v1331;
                                            v1324[v1332] = 0;
                                            goto LABEL_2554;
                                          }
                                          v1318 = realloc(v1314, v1315);
                                          if ( !v1318 )
                                            goto LABEL_2523;
LABEL_2521:
                                          v1314 = v1318;
                                        }
                                        v1314[v1311++] = v1316;
                                        v1314[v1317] = 0;
                                        goto LABEL_2523;
                                      case 1:
                                        v111 = *((_DWORD *)v83 + 10);
                                        if ( v111 )
                                          **((_DWORD **)v1988 - 41) = &v1998[v111];
                                        v112 = v1997 + *(_DWORD *)&v1993[12 * v1991 + 36];
                                        v113 = *((_DWORD *)v1988 - 40);
                                        if ( !v112 )
                                          goto LABEL_522;
                                        v114 = (unsigned int *)operator new(0x7Cu);
                                        v89 = v114;
                                        if ( !v114 )
                                          goto LABEL_522;
                                        (*(void (__fastcall **)(unsigned int *, _DWORD, int))(*v1989 + 20))(
                                          v114,
                                          0,
                                          124);
                                        v115 = v1988;
                                        *v89 = v112;
                                        v89[1] = v113;
                                        if ( (v112 & 1) != 0 )
                                          v116 = 12;
                                        else
                                          v116 = 8;
                                        v117 = *((_DWORD *)v115 - 39);
                                        v89[30] = v116;
                                        v89[2] = v117;
                                        v118 = operator new[](v116);
                                        v1984 = v118;
                                        v89[3] = v118;
                                        if ( !v118 )
                                          goto LABEL_521;
                                        v119 = v89[30];
                                        v1982 = (char *)(*v89 & 0xFFFFFFFE);
                                        v1990 = v119;
                                        if ( (char *)v1984 == v1982 )
                                        {
                                          memset(v2016, 0, sizeof(v2016));
                                          for ( i5 = 0; i5 != 256; ++i5 )
                                          {
                                            v121 = i5;
                                            v122 = 8;
                                            do
                                            {
                                              v123 = (v121 & 1) == 0;
                                              v124 = v121 >> 1;
                                              if ( (v121 & 1) != 0 )
                                                v121 = -128629065;
                                              else
                                                v121 >>= 1;
                                              if ( !v123 )
                                                v121 ^= v124;
                                              --v122;
                                            }
                                            while ( v122 );
                                            v2016[i5] = v121;
                                          }
                                          v125 = 0;
                                          v126 = -1;
                                          do
                                          {
                                            v127 = *(unsigned __int8 *)(v1984 + v125++);
                                            v126 = (v2016[v127 ^ (unsigned __int8)v126] ^ (v126 >> 8)) + 16;
                                          }
                                          while ( v125 != 4 );
                                          v128 = ~v126;
                                          switch ( v119 )
                                          {
                                            case 0u:
                                            case 1u:
                                            case 2u:
                                              v129 = 0;
                                              break;
                                            case 3u:
                                              v129 = 3;
                                              break;
                                            case 4u:
                                              v129 = v128 + 517762882;
                                              break;
                                            case 5u:
                                              v129 = v128 + 517762880;
                                              break;
                                            case 6u:
                                              v129 = 7;
                                              break;
                                            case 7u:
                                              v129 = 6;
                                              break;
                                            default:
                                              v129 = v119 + 15;
                                              break;
                                          }
                                          v1990 = v129 % 16;
                                        }
                                        v2016[0] = -1523182318;
                                        LOBYTE(v2016[1]) = 0;
                                        v130 = strlen((const char *)v2016);
                                        v131 = *v1989;
                                        v132 = (_BYTE *)*((_DWORD *)v1988 - 49);
                                        v133 = v130;
                                        if ( v130
                                          && (v134 = v130 + 1, v134 > v133)
                                          && (v135 = malloc(v134), (v1986 = (unsigned int)v135) != 0) )
                                        {
                                          (*(void (__fastcall **)(void *, _DWORD *, size_t))(v131 + 24))(
                                            v135,
                                            v2016,
                                            v133);
                                          *(_BYTE *)(v1986 + v133) = 0;
                                        }
                                        else
                                        {
                                          v133 = 0;
                                          v1986 = (unsigned int)v132;
                                        }
                                        v2015 = (_BYTE *)&loc_A65562;
                                        v1406 = strlen((const char *)&v2015);
                                        v1407 = *v1989;
                                        v1408 = v1406;
                                        if ( v1406
                                          && (v1409 = v1406 + 1, v1409 > v1408)
                                          && (v1410 = malloc(v1409), (v1411 = v1410) != 0) )
                                        {
                                          (*(void (__fastcall **)(_BYTE *, char **, unsigned int))(v1407 + 24))(
                                            v1410,
                                            &v2015,
                                            v1408);
                                          v1411[v1408] = 0;
                                        }
                                        else
                                        {
                                          v1408 = 0;
                                          v1411 = v132;
                                        }
                                        v1412 = v1408 + 2;
                                        v1413 = v2016[0];
                                        if ( v1408 + 2 < v1408 )
                                          goto LABEL_2765;
                                        v1414 = v1408 + 1;
                                        if ( v1408 + 1 >= v1408 )
                                        {
                                          if ( v1412 < v1414 )
                                            goto LABEL_2765;
                                          if ( v1411 == v132 )
                                          {
                                            if ( v1412 > v1414 )
                                            {
                                              v1415 = malloc(v1408 + 2);
                                              if ( v1415 )
                                              {
                                                *v1415 = 0;
                                                goto LABEL_2763;
                                              }
                                            }
LABEL_2765:
                                            v1416 = *v1989;
                                            if ( v1982 )
                                            {
                                              v1417 = strlen(v1982);
                                              v1418 = v1417;
                                              if ( v1417 )
                                              {
                                                v1419 = v1417 + 1;
                                                if ( v1419 > v1418 )
                                                {
                                                  v1420 = malloc(v1419);
                                                  v1421 = v1420;
                                                  if ( v1420 )
                                                  {
                                                    (*(void (__fastcall **)(_BYTE *, char *, unsigned int))(v1416 + 24))(
                                                      v1420,
                                                      v1982,
                                                      v1418);
                                                    v1421[v1418] = 0;
                                                    goto LABEL_2772;
                                                  }
                                                }
                                              }
                                              v1418 = 0;
                                            }
                                            else
                                            {
                                              v1418 = 0;
                                            }
                                            v1421 = v132;
LABEL_2772:
                                            if ( v133 != 8 )
                                            {
                                              if ( v133 != 9 )
                                              {
                                                if ( v133 != 7 )
                                                {
                                                  v1426 = v1408 - 4;
                                                  goto LABEL_2809;
                                                }
                                                v1422 = v1418 + 2;
                                                v1423 = BYTE1(v2015);
                                                if ( v1418 + 2 < v1418 )
                                                  goto LABEL_2785;
                                                v1424 = v1418 + 1;
                                                if ( v1418 + 1 >= v1418 )
                                                {
                                                  if ( v1422 < v1424 )
                                                    goto LABEL_2785;
                                                  if ( v1421 == v132 )
                                                  {
                                                    if ( v1422 > v1424 )
                                                    {
                                                      v1425 = malloc(v1418 + 2);
                                                      if ( v1425 )
                                                      {
                                                        *v1425 = 0;
                                                        goto LABEL_2783;
                                                      }
                                                    }
LABEL_2785:
                                                    v1426 = v1418 + 20;
LABEL_2809:
                                                    if ( v1421 != v132 )
                                                      free(v1421);
                                                    if ( v1411 != v132 )
                                                      free(v1411);
                                                    if ( (_BYTE *)v1986 != v132 )
                                                      free((void *)v1986);
                                                    while ( v1426 < v1990 )
                                                    {
                                                      *(_BYTE *)(v1984 + v1426) = v1982[v1426];
                                                      ++v1426;
                                                    }
                                                    v1982 = (char *)*((_DWORD *)v1988 - 51);
                                                    v1435 = *(_DWORD *)v1982;
                                                    v1436 = *(_DWORD *)(*(_DWORD *)v1982 + 128);
                                                    if ( !v1436 )
                                                      v1436 = *((_DWORD *)v1988 - 30);
                                                    v1437 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                                    v1438 = v1436 + 84 * (*v1437)++;
                                                    v89[29] = v1438;
                                                    (*(void (__fastcall **)(unsigned int, unsigned int, int))(v1435 + 4))(
                                                      v1438 & 0xFFFFF000,
                                                      ((v1438 + 4351) & 0xFFFFF000) - (v1438 & 0xFFFFF000),
                                                      7);
                                                    v243 = *v89;
                                                    v1439 = v89[3];
                                                    v1990 = (unsigned int)(v89 + 8);
                                                    v1440 = v243 & 1;
                                                    v1441 = v89[30];
                                                    v1984 = v1439;
                                                    v247 = v89[29];
                                                    v1986 = (unsigned int)(v89 + 4);
                                                    if ( (v243 & 1) == 0 )
                                                    {
                                                      v1493 = v243 + 8;
                                                      v1494 = v1441 >> 2;
                                                      v1495 = (char *)(v1984 - v243);
                                                      v1994 = v1441 + v243;
                                                      v1496 = 0;
                                                      for ( i6 = 0; ; ++i6 )
                                                      {
                                                        v308 = 4 * v1440;
                                                        if ( i6 == v1494 )
                                                          break;
                                                        *(_DWORD *)(v1986 + 4 * v89[28]) = 4 * i6;
                                                        *(_DWORD *)(v1990 + 4 * v89[28]++) = v308;
                                                        v1498 = *(_DWORD *)&v1495[v1493 - 8];
                                                        if ( (v1498 & 0xFE000000) == 0xFA000000 )
                                                        {
                                                          v1499 = (_DWORD *)(&word_10 + 1);
                                                        }
                                                        else if ( (v1498 & 0xF000000) == 0xB000000 )
                                                        {
                                                          v1499 = (_DWORD *)&word_12;
                                                        }
                                                        else if ( (v1498 & 0xF000000) == 0xA000000 )
                                                        {
                                                          v1499 = (_DWORD *)(&word_12 + 1);
                                                        }
                                                        else if ( (v1498 & 0xFF000FF) == 0x120001F )
                                                        {
                                                          v1499 = &dword_14;
                                                        }
                                                        else if ( (v1498 & 0xFEF0010) == 0x8F0000 )
                                                        {
                                                          v1499 = &dword_14 + 1;
                                                        }
                                                        else if ( (v1498 & 0xFFF0000) == 0x28F0000 )
                                                        {
                                                          v1499 = &dword_14 + 2;
                                                        }
                                                        else if ( (v1498 & 0xFFF0000) == 0x24F0000 )
                                                        {
                                                          v1499 = &dword_14 + 3;
                                                        }
                                                        else if ( (v1498 & 0xE5F0000) == 0x41F0000 )
                                                        {
                                                          v1499 = &dword_18 + 1;
                                                        }
                                                        else if ( (v1498 & 0xFE00FFF) == 0x1A0000F )
                                                        {
                                                          v1499 = &dword_18;
                                                        }
                                                        else
                                                        {
                                                          v1499 = &dword_18 + 2;
                                                        }
                                                        if ( (unsigned int)v1499 - 17 > 3 )
                                                        {
                                                          if ( v1499 == (int *)((char *)&dword_14 + 1) )
                                                          {
                                                            for ( i7 = 12;
                                                                  i7 == (unsigned __int16)v1498 >> 12
                                                               || i7 == (*(_DWORD *)&v1495[v1493 - 8] & 0xF);
                                                                  --i7 )
                                                            {
                                                              ;
                                                            }
                                                            v1440 += 6;
                                                            *(_DWORD *)(v247 + v308) = (i7 << 12) | 0xE52D0004;
                                                            v1505 = (_DWORD *)(v308 + v247);
                                                            v1505[2] = v1498 & 0xFFF0FFFF | (i7 << 16);
                                                            v1505[5] = v1493;
                                                            v1505[3] = (i7 << 12) | 0xE49D0004;
                                                            v1505[1] = (i7 << 12) | 0xE59F0008;
                                                            v1505[4] = -493883392;
                                                          }
                                                          else if ( (unsigned int)v1499 - 22 > 3 )
                                                          {
                                                            ++v1440;
                                                            *(_DWORD *)(v247 + v308) = v1498;
                                                          }
                                                          else
                                                          {
                                                            if ( (unsigned int)v1499 - 22 <= 1
                                                              || v1499 == (int *)((char *)&dword_18 + 1) )
                                                            {
                                                              v1506 = *(_DWORD *)&v1495[v1493 - 8] & 0xFFF;
                                                              if ( v1499 == (int *)((char *)&dword_14 + 2) )
                                                              {
                                                                v1496 = v1506 + v1493;
                                                              }
                                                              else if ( v1499 == (int *)((char *)&dword_14 + 3) )
                                                              {
                                                                v1496 = v1493 - v1506;
                                                              }
                                                              else if ( v1499 == (int *)((char *)&dword_18 + 1) )
                                                              {
                                                                if ( (v1498 & 0x800000) != 0 )
                                                                  v1496 = *(_DWORD *)(v1506 + v1493);
                                                                else
                                                                  v1499 = (int *)(v1493 - v1506);
                                                                if ( (v1498 & 0x800000) == 0 )
                                                                  v1496 = *v1499;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              v1496 = v1493;
                                                            }
                                                            v1440 += 3;
                                                            *(_DWORD *)(v247 + v308) = ((unsigned __int16)v1498 >> 12 << 12)
                                                                                     | 0xE51F0000;
                                                            v1507 = v308 + v247;
                                                            *(_DWORD *)(v1507 + 4) = -493883392;
                                                            *(_DWORD *)(v1507 + 8) = v1496;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if ( (unsigned int)v1499 - 17 <= 1 )
                                                          {
                                                            ++v1440;
                                                            *(_DWORD *)(v247 + v308) = -493887484;
                                                          }
                                                          *(_DWORD *)(v247 + 4 * v1440) = -450891772;
                                                          if ( v1499 == (int *)((char *)&word_10 + 1) )
                                                          {
                                                            v1500 = v1498 & 0x1000000;
                                                            v1501 = (4 * (v1498 & 0xFFFFFF))
                                                                  | ((v1498 & 0x1000000u) >> 23);
                                                          }
                                                          else
                                                          {
                                                            v1500 = (int)v1499 - 18;
                                                            if ( (unsigned int)v1499 - 18 > 1 )
                                                              v1501 = 0;
                                                            else
                                                              v1501 = v1498 & 0xFFFFFF;
                                                            if ( (unsigned int)v1499 - 18 <= 1 )
                                                              v1501 *= 4;
                                                          }
                                                          v1502 = 4 * v1440 + v247;
                                                          if ( v1501 >> 25 )
                                                            v1501 |= 0xFC000000;
                                                          v1503 = v1499 == (int *)((char *)&word_10 + 1);
                                                          if ( v1499 == (int *)((char *)&word_10 + 1) )
                                                            v1500 = v1493 + 1;
                                                          else
                                                            v1499 = (int *)(v1501 + v1493);
                                                          if ( v1503 )
                                                            v1499 = (int *)(v1501 + v1500);
                                                          v1440 += 2;
                                                          *(_DWORD *)(v1502 + 4) = v1499;
                                                        }
                                                        v1493 += 4;
                                                      }
                                                      goto LABEL_509;
                                                    }
                                                    v248 = 0;
                                                    v1442 = v243 + 3;
                                                    v250 = 0;
                                                    v1990 = v1441 >> 1;
                                                    while ( 2 )
                                                    {
                                                      v1443 = *(unsigned __int16 *)(v1984 + 2 * v250);
                                                      if ( (unsigned int)((v1443 >> 11) - 29) <= 2 )
                                                      {
                                                        v1986 = v250 + 2;
                                                        if ( v250 + 2 > v1990 )
                                                          goto LABEL_443;
                                                        v1444 = *(unsigned __int16 *)(2 * v250 + v1984 + 2);
                                                        v1445 = v247 + 2 * v248;
                                                        v1446 = v1444 | (v1443 << 16);
                                                        v1447 = v1446 & 0xF800D000;
                                                        if ( (v1446 & 0xF800D000) == 0xF000C000 )
                                                        {
                                                          v1448 = 8;
                                                        }
                                                        else
                                                        {
                                                          switch ( v1447 )
                                                          {
                                                            case 0xF000D000:
                                                              v1448 = 9;
                                                              break;
                                                            case 0xF0008000:
                                                              v1448 = 10;
                                                              break;
                                                            case 0xF0009000:
                                                              v1448 = 11;
                                                              break;
                                                            default:
                                                              if ( (v1446 & 0xFBFF8000) == 0xF2AF0000 )
                                                              {
                                                                v1448 = 12;
                                                              }
                                                              else if ( (v1446 & 0xFBFF8000) == 0xF20F0000 )
                                                              {
                                                                v1448 = 13;
                                                              }
                                                              else if ( (v1446 & 0xFF7F0000) == 0xF85F0000 )
                                                              {
                                                                v1448 = 14;
                                                              }
                                                              else if ( (v1444 & 0xFFFF00F0 | (v1443 << 16)) == 0xE8DF0000 )
                                                              {
                                                                v1448 = 15;
                                                              }
                                                              else if ( (v1444 & 0xFFFF00F0 | (v1443 << 16)) == 0xE8DF0010 )
                                                              {
                                                                v1448 = 16;
                                                              }
                                                              else
                                                              {
                                                                v1448 = 26;
                                                              }
                                                              break;
                                                          }
                                                        }
                                                        v1996 = v1448 - 8;
                                                        if ( (unsigned int)(v1448 - 8) > 3 )
                                                        {
                                                          if ( (unsigned int)(v1448 - 12) > 2 )
                                                          {
                                                            if ( (unsigned int)(v1448 - 15) > 1 )
                                                            {
                                                              *(_WORD *)(v247 + 2 * v248) = v1443;
                                                              v1456 = 2;
                                                              *(_WORD *)(v1445 + 2) = v1444;
                                                            }
                                                            else
                                                            {
                                                              v1464 = v1444 & 0xF;
                                                              for ( i8 = 7; i8 == v1464; --i8 )
                                                                ;
                                                              for ( i9 = 7; i9 == v1464 || i9 == i8; --i9 )
                                                                ;
                                                              v1467 = 1 << i9;
                                                              *(_WORD *)(v247 + 2 * v248) = v1467 | 0xB400;
                                                              *(_WORD *)(v1445 + 6) = i8 | 0xEB00;
                                                              v1468 = (_WORD)i8 << 8;
                                                              *(_WORD *)(v1445 + 2) = ((_WORD)i8 << 8) | 0x4805;
                                                              v1469 = i9;
                                                              *(_WORD *)(v1445 + 4) = i9 | (8 * v1464) | 0x4600;
                                                              v1470 = (_WORD)i9 << 8;
                                                              v1471 = 8 * i9;
                                                              if ( v1448 == 15 )
                                                              {
                                                                *(_WORD *)(v1445 + 8) = v1470 | v1469;
                                                                v1472 = v1469 | 0x7800;
                                                              }
                                                              else
                                                              {
                                                                *(_WORD *)(v1445 + 8) = v1469 | 0x40 | v1470;
                                                                v1472 = v1469 | 0x8800;
                                                              }
                                                              *(_WORD *)(v1445 + 10) = v1471 | v1472;
                                                              *(_WORD *)(v1445 + 14) = v1469 | v1468 | 0x40;
                                                              *(_WORD *)(v1445 + 18) = v1467 | 0xBC00;
                                                              *(_WORD *)(v1445 + 12) = i8 | 0xEB00;
                                                              *(_WORD *)(v1445 + 22) = -16640;
                                                              v1456 = 14;
                                                              *(_WORD *)(v1445 + 16) = v1468 | 0x3001;
                                                              *(_WORD *)(v1445 + 20) = (8 * i8) | 0x4700;
                                                              *(_DWORD *)(v1445 + 24) = v1442;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if ( v1448 == 14 )
                                                            {
                                                              v1457 = (int)v1444 >> 12;
                                                              v43 = (v1443 & 0x80) == 0;
                                                              v1461 = v1442 & 0xFFFFFFFC;
                                                              v1462 = v1444 & 0xFFF;
                                                              if ( v43 )
                                                                v1463 = (unsigned int *)(v1461 - v1462);
                                                              else
                                                                v1463 = (unsigned int *)(v1462 + v1461);
                                                              v1460 = *v1463;
                                                            }
                                                            else
                                                            {
                                                              v1457 = (v1444 >> 8) & 0xF;
                                                              v1458 = (v1446 << 27)
                                                                    | (v1444 >> 12 << 30)
                                                                    | ((unsigned int)v1443 >> 10 << 31);
                                                              v1459 = v1442 & 0xFFFFFFFC;
                                                              if ( v1448 == 12 )
                                                                v1460 = v1458 + v1459;
                                                              else
                                                                v1460 = v1459 - v1458;
                                                            }
                                                            *(_WORD *)(v247 + 2 * v248) = ((_WORD)v1457 << 8) | 0x4800;
                                                            *(_WORD *)(v1445 + 4) = v1460;
                                                            v1456 = 4;
                                                            *(_WORD *)(v1445 + 2) = -8191;
                                                            *(_WORD *)(v1445 + 6) = HIWORD(v1460);
                                                          }
                                                          goto LABEL_2886;
                                                        }
                                                        v2000 = (v1444 >> 11) & 1;
                                                        v1449 = ((unsigned int)v1443 >> 10) & 1;
                                                        v1994 = (v1444 >> 13) & 1;
                                                        v1450 = v1994 == v1449;
                                                        v1981 = v2000 == v1449;
                                                        if ( v1996 <= 1 )
                                                        {
                                                          *(_WORD *)(v247 + 2 * v248) = -3569;
                                                          *(_WORD *)(v1445 + 2) = 3593;
                                                          goto LABEL_2847;
                                                        }
                                                        if ( v1448 == 10 )
                                                        {
                                                          v1996 = 4 * (v1443 & 0x3C0);
                                                          *(_WORD *)(v247 + 2 * v248) = (4 * (v1443 & 0x3C0)) | 0xD000;
                                                          *(_WORD *)(v1445 + 2) = -8189;
LABEL_2847:
                                                          v1451 = 2;
                                                        }
                                                        else
                                                        {
                                                          v1451 = 0;
                                                        }
                                                        v1980 = 2 * v1451;
                                                        *(_WORD *)(v1445 + 2 * v1451) = -1825;
                                                        *(_WORD *)(2 * v1451 + v1445 + 2) = -4096;
                                                        if ( v1448 == 8 )
                                                        {
                                                          v1452 = (2 * (v1444 & 0x7FE))
                                                                | (v1449 << 24)
                                                                | ((v1443 & 0x3FF) << 12)
                                                                | (v1450 << 23)
                                                                | (v1981 << 22);
                                                          if ( v1449 )
                                                            v1452 |= 0xFE000000;
                                                          v1453 = v1452 + v1442;
LABEL_2862:
                                                          v1456 = v1451 + 4;
                                                          *(_DWORD *)(v1445 + v1980 + 4) = v1453;
LABEL_2886:
                                                          v1442 += 4;
                                                          v248 += v1456;
                                                          v250 = v1986;
LABEL_2926:
                                                          if ( v250 >= v1990 )
                                                            goto LABEL_443;
                                                          continue;
                                                        }
                                                        v1454 = 2 * (v1444 & 0x7FF);
                                                        if ( v1448 == 9 )
                                                        {
                                                          v1455 = v1454
                                                                | (v1449 << 24)
                                                                | ((v1443 & 0x3FF) << 12)
                                                                | (v1450 << 23)
                                                                | (v1981 << 22);
LABEL_2859:
                                                          if ( v1449 )
                                                            v1455 |= 0xFE000000;
                                                        }
                                                        else
                                                        {
                                                          if ( v1448 != 10 )
                                                          {
                                                            v1455 = v1454
                                                                  | (v1449 << 24)
                                                                  | ((v1443 & 0x3FF) << 12)
                                                                  | (v1450 << 23)
                                                                  | (v1981 << 22);
                                                            goto LABEL_2859;
                                                          }
                                                          v1455 = v1454
                                                                | (v1449 << 20)
                                                                | ((v1443 & 0x3F) << 12)
                                                                | (v2000 << 19)
                                                                | (v1994 << 18);
                                                          if ( v1449 )
                                                            v1455 = ~(~(v1455 << 11) >> 11);
                                                        }
                                                        v1453 = v1455 + v1442 + 1;
                                                        goto LABEL_2862;
                                                      }
                                                      break;
                                                    }
                                                    v1473 = (_WORD *)(v247 + 2 * v248);
                                                    if ( (v1443 & 0xF000) == 0xD000 )
                                                    {
                                                      v1477 = 2 * (unsigned __int8)v1443;
                                                      if ( v1477 >> 8 )
                                                        v1477 |= 0xFFFFFF00;
                                                      v1480 = v1477 + v1442;
                                                      *(_WORD *)(v247 + 2 * v248) = v1443 & 0xFF00;
                                                      v1473[1] = -8189;
                                                      v1482 = 2;
                                                    }
                                                    else
                                                    {
                                                      v1474 = v1443 & 0xF800;
                                                      if ( v1474 == 57344 )
                                                      {
                                                        v1478 = v1443 & 0x7FF;
                                                        v1479 = 2 * v1478;
                                                        if ( (unsigned int)(2 * v1478) >> 11 )
                                                          v1479 = ~((unsigned int)~(v1478 << 22) >> 21);
                                                        v1480 = v1479 + v1442;
                                                      }
                                                      else
                                                      {
                                                        if ( (v1443 & 0xFFFFFFF8) != 0x4778 )
                                                        {
                                                          v1475 = v1443 & 0xFF78;
                                                          if ( v1475 == 17528 )
                                                          {
                                                            for ( i10 = 7;
                                                                  i10 == (v1443 & 7
                                                                        | ((unsigned __int8)(v1443 & 0x80) >> 4));
                                                                  --i10 )
                                                            {
                                                              ;
                                                            }
                                                            v1485 = 1 << i10;
                                                            *(_WORD *)(v247 + 2 * v248) = v1485 | 0xB400;
                                                            v1473[2] = v1443 & 0xFF87 | (8 * i10);
                                                            v1473[6] = v1442;
                                                            v1473[1] = ((_WORD)i10 << 8) | 0x4802;
                                                            v1473[3] = v1485 | 0xBC00;
                                                            v1473[4] = -8190;
                                                            v1473[5] = -16640;
                                                            v1473[7] = HIWORD(v1442);
                                                            v1484 = 8;
                                                          }
                                                          else
                                                          {
                                                            if ( v1475 == 18040 )
                                                            {
                                                              v1476 = 4;
                                                            }
                                                            else if ( v1474 == 40960 )
                                                            {
                                                              v1476 = 5;
                                                            }
                                                            else if ( v1474 == 18432 )
                                                            {
                                                              v1476 = 6;
                                                            }
                                                            else if ( (v1443 & 0xF500) == 0xB100 )
                                                            {
                                                              v1476 = 7;
                                                            }
                                                            else
                                                            {
                                                              v1476 = 26;
                                                            }
                                                            if ( (unsigned int)(v1476 - 4) > 2 )
                                                            {
                                                              if ( v1476 == 7 )
                                                              {
                                                                *(_WORD *)(v247 + 2 * v248) = v1443 & 0xFD07;
                                                                v1492 = (((unsigned __int16)(v1443 & 0x200) >> 3)
                                                                       | ((unsigned __int8)(v1443 & 0xF8) >> 2))
                                                                      + v1442
                                                                      + 1;
                                                                v1473[2] = -1825;
                                                                v1473[4] = v1492;
                                                                v1473[3] = -4096;
                                                                v1484 = 6;
                                                                v1473[1] = -8189;
                                                                v1473[5] = HIWORD(v1492);
                                                              }
                                                              else
                                                              {
                                                                *(_WORD *)(v247 + 2 * v248) = v1443;
                                                                v1473[1] = -16640;
                                                                v1484 = 2;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              if ( v1476 == 4 )
                                                              {
                                                                LOWORD(v1486) = *(_WORD *)(v1984 + 2 * v250) & 7;
                                                                v1487 = v1442;
                                                              }
                                                              else
                                                              {
                                                                v1488 = v1476 == 5;
                                                                v1489 = v1442 & 0xFFFFFFFC;
                                                                v1490 = (unsigned __int8)v1443;
                                                                v1491 = v1443 & 0x700;
                                                                if ( v1488 )
                                                                  v1487 = v1490 + v1489;
                                                                else
                                                                  v1487 = *(_DWORD *)(v1489 + 4 * v1490);
                                                                v1486 = v1491 >> 8;
                                                                if ( v1488 )
                                                                  v1487 *= 4;
                                                              }
                                                              *(_WORD *)(v247 + 2 * v248) = ((_WORD)v1486 << 8) | 0x4800;
                                                              v1473[2] = v1487;
                                                              v1484 = 4;
                                                              v1473[1] = -8191;
                                                              v1473[3] = HIWORD(v1487);
                                                            }
                                                          }
                                                          goto LABEL_2925;
                                                        }
                                                        v1480 = v1442;
                                                      }
                                                      v1482 = 0;
                                                    }
                                                    v1473[v1482] = -1825;
                                                    v1483 = &v1473[v1482];
                                                    v1484 = v1482 + 4;
                                                    v1483[2] = v1480;
                                                    v1483[1] = -4096;
                                                    v1483[3] = HIWORD(v1480);
LABEL_2925:
                                                    v1442 += 2;
                                                    v248 += v1484;
                                                    ++v250;
                                                    goto LABEL_2926;
                                                  }
                                                  v1425 = realloc(v1421, v1422);
                                                  if ( !v1425 )
                                                    goto LABEL_2785;
LABEL_2783:
                                                  v1421 = v1425;
                                                }
                                                v1421[v1418++] = v1423;
                                                v1421[v1424] = 0;
                                                goto LABEL_2785;
                                              }
                                              v1431 = v1418 + 2;
                                              v1432 = HIBYTE(v2016[0]);
                                              if ( v1418 + 2 < v1418 )
                                                goto LABEL_2807;
                                              v1433 = v1418 + 1;
                                              if ( v1418 + 1 >= v1418 )
                                              {
                                                if ( v1431 < v1433 )
                                                  goto LABEL_2807;
                                                if ( v1421 == v132 )
                                                {
                                                  if ( v1431 > v1433 )
                                                  {
                                                    v1434 = malloc(v1418 + 2);
                                                    if ( v1434 )
                                                    {
                                                      *v1434 = 0;
                                                      goto LABEL_2805;
                                                    }
                                                  }
LABEL_2807:
                                                  v1426 = v1418 + 6;
                                                  goto LABEL_2809;
                                                }
                                                v1434 = realloc(v1421, v1431);
                                                if ( !v1434 )
                                                  goto LABEL_2807;
LABEL_2805:
                                                v1421 = v1434;
                                              }
                                              v1421[v1418++] = v1432;
                                              v1421[v1433] = 0;
                                              goto LABEL_2807;
                                            }
                                            v1427 = v1418 + 2;
                                            v1428 = BYTE1(v2016[0]);
                                            if ( v1418 + 2 < v1418 )
                                              goto LABEL_2796;
                                            v1429 = v1418 + 1;
                                            if ( v1418 + 1 >= v1418 )
                                            {
                                              if ( v1427 < v1429 )
                                                goto LABEL_2796;
                                              if ( v1421 == v132 )
                                              {
                                                if ( v1427 > v1429 )
                                                {
                                                  v1430 = malloc(v1418 + 2);
                                                  if ( v1430 )
                                                  {
                                                    *v1430 = 0;
                                                    goto LABEL_2794;
                                                  }
                                                }
LABEL_2796:
                                                v1426 = v1418 + 8;
                                                goto LABEL_2809;
                                              }
                                              v1430 = realloc(v1421, v1427);
                                              if ( !v1430 )
                                                goto LABEL_2796;
LABEL_2794:
                                              v1421 = v1430;
                                            }
                                            v1421[v1418++] = v1428;
                                            v1421[v1429] = 0;
                                            goto LABEL_2796;
                                          }
                                          v1415 = realloc(v1411, v1412);
                                          if ( !v1415 )
                                            goto LABEL_2765;
LABEL_2763:
                                          v1411 = v1415;
                                        }
                                        v1411[v1408++] = v1413;
                                        v1411[v1414] = 0;
                                        goto LABEL_2765;
                                      case 2:
                                        v136 = *((_DWORD *)v83 + 10);
                                        if ( v136 )
                                          **((_DWORD **)v1988 - 38) = v136 + v1997;
                                        v137 = v1997 + *(_DWORD *)&v1993[12 * v1991 + 36];
                                        v138 = *((_DWORD *)v1988 - 37);
                                        if ( !v137 )
                                          goto LABEL_522;
                                        v139 = (unsigned int *)operator new(0x7Cu);
                                        v89 = v139;
                                        if ( !v139 )
                                          goto LABEL_522;
                                        (*(void (__fastcall **)(unsigned int *, _DWORD, int))(*v1989 + 20))(
                                          v139,
                                          0,
                                          124);
                                        v140 = v1988;
                                        *v89 = v137;
                                        v89[1] = v138;
                                        if ( (v137 & 1) != 0 )
                                          v141 = 12;
                                        else
                                          v141 = 8;
                                        v142 = *((_DWORD *)v140 - 36);
                                        v89[30] = v141;
                                        v89[2] = v142;
                                        v143 = operator new[](v141);
                                        v1984 = v143;
                                        v89[3] = v143;
                                        if ( !v143 )
                                          goto LABEL_521;
                                        v144 = v89[30];
                                        v1982 = (char *)(*v89 & 0xFFFFFFFE);
                                        v1990 = v144;
                                        if ( (char *)v1984 == v1982 )
                                        {
                                          memset(v2016, 0, sizeof(v2016));
                                          for ( i11 = 0; i11 != 256; ++i11 )
                                          {
                                            v146 = i11;
                                            v147 = 8;
                                            do
                                            {
                                              v148 = (v146 & 1) == 0;
                                              v149 = v146 >> 1;
                                              if ( (v146 & 1) != 0 )
                                                v146 = -128629065;
                                              else
                                                v146 >>= 1;
                                              if ( !v148 )
                                                v146 ^= v149;
                                              --v147;
                                            }
                                            while ( v147 );
                                            v2016[i11] = v146;
                                          }
                                          v150 = 0;
                                          v151 = -1;
                                          do
                                          {
                                            v152 = *(unsigned __int8 *)(v1984 + v150++);
                                            v151 = (v2016[v152 ^ (unsigned __int8)v151] ^ (v151 >> 8)) + 16;
                                          }
                                          while ( v150 != 4 );
                                          v153 = ~v151;
                                          switch ( v144 )
                                          {
                                            case 0u:
                                            case 1u:
                                            case 2u:
                                              v154 = 0;
                                              break;
                                            case 3u:
                                              v154 = 3;
                                              break;
                                            case 4u:
                                              v154 = v153 + 517762882;
                                              break;
                                            case 5u:
                                              v154 = v153 + 517762880;
                                              break;
                                            case 6u:
                                              v154 = 7;
                                              break;
                                            case 7u:
                                              v154 = 6;
                                              break;
                                            default:
                                              v154 = v144 + 15;
                                              break;
                                          }
                                          v1990 = v154 % 16;
                                        }
                                        v2016[0] = -1523182318;
                                        LOBYTE(v2016[1]) = 0;
                                        v155 = strlen((const char *)v2016);
                                        v156 = *v1989;
                                        v157 = (_BYTE *)*((_DWORD *)v1988 - 49);
                                        v158 = v155;
                                        if ( v155
                                          && (v159 = v155 + 1, v159 > v158)
                                          && (v160 = malloc(v159), (v1986 = (unsigned int)v160) != 0) )
                                        {
                                          (*(void (__fastcall **)(void *, _DWORD *, size_t))(v156 + 24))(
                                            v160,
                                            v2016,
                                            v158);
                                          *(_BYTE *)(v1986 + v158) = 0;
                                        }
                                        else
                                        {
                                          v158 = 0;
                                          v1986 = (unsigned int)v157;
                                        }
                                        v2015 = (_BYTE *)&loc_A65562;
                                        v1508 = strlen((const char *)&v2015);
                                        v1509 = *v1989;
                                        v1510 = v1508;
                                        if ( v1508
                                          && (v1511 = v1508 + 1, v1511 > v1510)
                                          && (v1512 = malloc(v1511), (v1513 = v1512) != 0) )
                                        {
                                          (*(void (__fastcall **)(_BYTE *, char **, unsigned int))(v1509 + 24))(
                                            v1512,
                                            &v2015,
                                            v1510);
                                          v1513[v1510] = 0;
                                        }
                                        else
                                        {
                                          v1510 = 0;
                                          v1513 = v157;
                                        }
                                        v1514 = v1510 + 2;
                                        v1515 = v2016[0];
                                        if ( v1510 + 2 < v1510 )
                                          goto LABEL_3009;
                                        v1516 = v1510 + 1;
                                        if ( v1510 + 1 >= v1510 )
                                        {
                                          if ( v1514 < v1516 )
                                            goto LABEL_3009;
                                          if ( v1513 == v157 )
                                          {
                                            if ( v1514 > v1516 )
                                            {
                                              v1517 = malloc(v1510 + 2);
                                              if ( v1517 )
                                              {
                                                *v1517 = 0;
                                                goto LABEL_3007;
                                              }
                                            }
LABEL_3009:
                                            v1518 = *v1989;
                                            if ( v1982 )
                                            {
                                              v1519 = strlen(v1982);
                                              v1520 = v1519;
                                              if ( v1519 )
                                              {
                                                v1521 = v1519 + 1;
                                                if ( v1521 > v1520 )
                                                {
                                                  v1522 = malloc(v1521);
                                                  v1523 = v1522;
                                                  if ( v1522 )
                                                  {
                                                    (*(void (__fastcall **)(_BYTE *, char *, unsigned int))(v1518 + 24))(
                                                      v1522,
                                                      v1982,
                                                      v1520);
                                                    v1523[v1520] = 0;
                                                    goto LABEL_3016;
                                                  }
                                                }
                                              }
                                              v1520 = 0;
                                            }
                                            else
                                            {
                                              v1520 = 0;
                                            }
                                            v1523 = v157;
LABEL_3016:
                                            if ( v158 != 8 )
                                            {
                                              if ( v158 != 9 )
                                              {
                                                if ( v158 != 7 )
                                                {
                                                  v1528 = v1510 - 4;
                                                  goto LABEL_3053;
                                                }
                                                v1524 = v1520 + 2;
                                                v1525 = BYTE1(v2015);
                                                if ( v1520 + 2 < v1520 )
                                                  goto LABEL_3029;
                                                v1526 = v1520 + 1;
                                                if ( v1520 + 1 >= v1520 )
                                                {
                                                  if ( v1524 < v1526 )
                                                    goto LABEL_3029;
                                                  if ( v1523 == v157 )
                                                  {
                                                    if ( v1524 > v1526 )
                                                    {
                                                      v1527 = malloc(v1520 + 2);
                                                      if ( v1527 )
                                                      {
                                                        *v1527 = 0;
                                                        goto LABEL_3027;
                                                      }
                                                    }
LABEL_3029:
                                                    v1528 = v1520 + 20;
LABEL_3053:
                                                    if ( v1523 != v157 )
                                                      free(v1523);
                                                    if ( v1513 != v157 )
                                                      free(v1513);
                                                    if ( (_BYTE *)v1986 != v157 )
                                                      free((void *)v1986);
                                                    while ( v1528 < v1990 )
                                                    {
                                                      *(_BYTE *)(v1984 + v1528) = v1982[v1528];
                                                      ++v1528;
                                                    }
                                                    v1982 = (char *)*((_DWORD *)v1988 - 51);
                                                    v1537 = *(_DWORD *)v1982;
                                                    v1538 = *(_DWORD *)(*(_DWORD *)v1982 + 128);
                                                    if ( !v1538 )
                                                      v1538 = *((_DWORD *)v1988 - 30);
                                                    v1539 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                                    v1540 = v1538 + 84 * (*v1539)++;
                                                    v89[29] = v1540;
                                                    (*(void (__fastcall **)(unsigned int, unsigned int, int))(v1537 + 4))(
                                                      v1540 & 0xFFFFF000,
                                                      ((v1540 + 4351) & 0xFFFFF000) - (v1540 & 0xFFFFF000),
                                                      7);
                                                    v243 = *v89;
                                                    v1541 = v89[3];
                                                    v1990 = (unsigned int)(v89 + 8);
                                                    v1542 = v243 & 1;
                                                    v1543 = v89[30];
                                                    v1984 = v1541;
                                                    v247 = v89[29];
                                                    v1986 = (unsigned int)(v89 + 4);
                                                    if ( (v243 & 1) == 0 )
                                                    {
                                                      v1595 = v243 + 8;
                                                      v1596 = v1543 >> 2;
                                                      v1597 = (char *)(v1984 - v243);
                                                      v1994 = v1543 + v243;
                                                      v1598 = 0;
                                                      for ( i12 = 0; ; ++i12 )
                                                      {
                                                        v308 = 4 * v1542;
                                                        if ( i12 == v1596 )
                                                          break;
                                                        *(_DWORD *)(v1986 + 4 * v89[28]) = 4 * i12;
                                                        *(_DWORD *)(v1990 + 4 * v89[28]++) = v308;
                                                        v1600 = *(_DWORD *)&v1597[v1595 - 8];
                                                        if ( (v1600 & 0xFE000000) == 0xFA000000 )
                                                        {
                                                          v1601 = (_DWORD *)(&word_10 + 1);
                                                        }
                                                        else if ( (v1600 & 0xF000000) == 0xB000000 )
                                                        {
                                                          v1601 = (_DWORD *)&word_12;
                                                        }
                                                        else if ( (v1600 & 0xF000000) == 0xA000000 )
                                                        {
                                                          v1601 = (_DWORD *)(&word_12 + 1);
                                                        }
                                                        else if ( (v1600 & 0xFF000FF) == 0x120001F )
                                                        {
                                                          v1601 = &dword_14;
                                                        }
                                                        else if ( (v1600 & 0xFEF0010) == 0x8F0000 )
                                                        {
                                                          v1601 = &dword_14 + 1;
                                                        }
                                                        else if ( (v1600 & 0xFFF0000) == 0x28F0000 )
                                                        {
                                                          v1601 = &dword_14 + 2;
                                                        }
                                                        else if ( (v1600 & 0xFFF0000) == 0x24F0000 )
                                                        {
                                                          v1601 = &dword_14 + 3;
                                                        }
                                                        else if ( (v1600 & 0xE5F0000) == 0x41F0000 )
                                                        {
                                                          v1601 = &dword_18 + 1;
                                                        }
                                                        else if ( (v1600 & 0xFE00FFF) == 0x1A0000F )
                                                        {
                                                          v1601 = &dword_18;
                                                        }
                                                        else
                                                        {
                                                          v1601 = &dword_18 + 2;
                                                        }
                                                        if ( (unsigned int)v1601 - 17 > 3 )
                                                        {
                                                          if ( v1601 == (int *)((char *)&dword_14 + 1) )
                                                          {
                                                            for ( i13 = 12;
                                                                  i13 == (unsigned __int16)v1600 >> 12
                                                               || i13 == (*(_DWORD *)&v1597[v1595 - 8] & 0xF);
                                                                  --i13 )
                                                            {
                                                              ;
                                                            }
                                                            v1542 += 6;
                                                            *(_DWORD *)(v247 + v308) = (i13 << 12) | 0xE52D0004;
                                                            v1607 = (_DWORD *)(v308 + v247);
                                                            v1607[2] = v1600 & 0xFFF0FFFF | (i13 << 16);
                                                            v1607[5] = v1595;
                                                            v1607[3] = (i13 << 12) | 0xE49D0004;
                                                            v1607[1] = (i13 << 12) | 0xE59F0008;
                                                            v1607[4] = -493883392;
                                                          }
                                                          else if ( (unsigned int)v1601 - 22 > 3 )
                                                          {
                                                            ++v1542;
                                                            *(_DWORD *)(v247 + v308) = v1600;
                                                          }
                                                          else
                                                          {
                                                            if ( (unsigned int)v1601 - 22 <= 1
                                                              || v1601 == (int *)((char *)&dword_18 + 1) )
                                                            {
                                                              v1608 = *(_DWORD *)&v1597[v1595 - 8] & 0xFFF;
                                                              if ( v1601 == (int *)((char *)&dword_14 + 2) )
                                                              {
                                                                v1598 = v1608 + v1595;
                                                              }
                                                              else if ( v1601 == (int *)((char *)&dword_14 + 3) )
                                                              {
                                                                v1598 = v1595 - v1608;
                                                              }
                                                              else if ( v1601 == (int *)((char *)&dword_18 + 1) )
                                                              {
                                                                if ( (v1600 & 0x800000) != 0 )
                                                                  v1598 = *(_DWORD *)(v1608 + v1595);
                                                                else
                                                                  v1601 = (int *)(v1595 - v1608);
                                                                if ( (v1600 & 0x800000) == 0 )
                                                                  v1598 = *v1601;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              v1598 = v1595;
                                                            }
                                                            v1542 += 3;
                                                            *(_DWORD *)(v247 + v308) = ((unsigned __int16)v1600 >> 12 << 12)
                                                                                     | 0xE51F0000;
                                                            v1609 = v308 + v247;
                                                            *(_DWORD *)(v1609 + 4) = -493883392;
                                                            *(_DWORD *)(v1609 + 8) = v1598;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if ( (unsigned int)v1601 - 17 <= 1 )
                                                          {
                                                            ++v1542;
                                                            *(_DWORD *)(v247 + v308) = -493887484;
                                                          }
                                                          *(_DWORD *)(v247 + 4 * v1542) = -450891772;
                                                          if ( v1601 == (int *)((char *)&word_10 + 1) )
                                                          {
                                                            v1602 = v1600 & 0x1000000;
                                                            v1603 = (4 * (v1600 & 0xFFFFFF))
                                                                  | ((v1600 & 0x1000000u) >> 23);
                                                          }
                                                          else
                                                          {
                                                            v1602 = (int)v1601 - 18;
                                                            if ( (unsigned int)v1601 - 18 > 1 )
                                                              v1603 = 0;
                                                            else
                                                              v1603 = v1600 & 0xFFFFFF;
                                                            if ( (unsigned int)v1601 - 18 <= 1 )
                                                              v1603 *= 4;
                                                          }
                                                          v1604 = 4 * v1542 + v247;
                                                          if ( v1603 >> 25 )
                                                            v1603 |= 0xFC000000;
                                                          v1605 = v1601 == (int *)((char *)&word_10 + 1);
                                                          if ( v1601 == (int *)((char *)&word_10 + 1) )
                                                            v1602 = v1595 + 1;
                                                          else
                                                            v1601 = (int *)(v1603 + v1595);
                                                          if ( v1605 )
                                                            v1601 = (int *)(v1603 + v1602);
                                                          v1542 += 2;
                                                          *(_DWORD *)(v1604 + 4) = v1601;
                                                        }
                                                        v1595 += 4;
                                                      }
                                                      goto LABEL_509;
                                                    }
                                                    v248 = 0;
                                                    v1544 = v243 + 3;
                                                    v250 = 0;
                                                    v1990 = v1543 >> 1;
                                                    while ( 2 )
                                                    {
                                                      v1545 = *(unsigned __int16 *)(v1984 + 2 * v250);
                                                      if ( (unsigned int)((v1545 >> 11) - 29) <= 2 )
                                                      {
                                                        v1986 = v250 + 2;
                                                        if ( v250 + 2 > v1990 )
                                                          goto LABEL_443;
                                                        v1546 = *(unsigned __int16 *)(2 * v250 + v1984 + 2);
                                                        v1547 = v247 + 2 * v248;
                                                        v1548 = v1546 | (v1545 << 16);
                                                        v1549 = v1548 & 0xF800D000;
                                                        if ( (v1548 & 0xF800D000) == 0xF000C000 )
                                                        {
                                                          v1550 = 8;
                                                        }
                                                        else
                                                        {
                                                          switch ( v1549 )
                                                          {
                                                            case 0xF000D000:
                                                              v1550 = 9;
                                                              break;
                                                            case 0xF0008000:
                                                              v1550 = 10;
                                                              break;
                                                            case 0xF0009000:
                                                              v1550 = 11;
                                                              break;
                                                            default:
                                                              if ( (v1548 & 0xFBFF8000) == 0xF2AF0000 )
                                                              {
                                                                v1550 = 12;
                                                              }
                                                              else if ( (v1548 & 0xFBFF8000) == 0xF20F0000 )
                                                              {
                                                                v1550 = 13;
                                                              }
                                                              else if ( (v1548 & 0xFF7F0000) == 0xF85F0000 )
                                                              {
                                                                v1550 = 14;
                                                              }
                                                              else if ( (v1546 & 0xFFFF00F0 | (v1545 << 16)) == 0xE8DF0000 )
                                                              {
                                                                v1550 = 15;
                                                              }
                                                              else if ( (v1546 & 0xFFFF00F0 | (v1545 << 16)) == 0xE8DF0010 )
                                                              {
                                                                v1550 = 16;
                                                              }
                                                              else
                                                              {
                                                                v1550 = 26;
                                                              }
                                                              break;
                                                          }
                                                        }
                                                        v1996 = v1550 - 8;
                                                        if ( (unsigned int)(v1550 - 8) > 3 )
                                                        {
                                                          if ( (unsigned int)(v1550 - 12) > 2 )
                                                          {
                                                            if ( (unsigned int)(v1550 - 15) > 1 )
                                                            {
                                                              *(_WORD *)(v247 + 2 * v248) = v1545;
                                                              v1558 = 2;
                                                              *(_WORD *)(v1547 + 2) = v1546;
                                                            }
                                                            else
                                                            {
                                                              v1566 = v1546 & 0xF;
                                                              for ( i14 = 7; i14 == v1566; --i14 )
                                                                ;
                                                              for ( i15 = 7; i15 == v1566 || i15 == i14; --i15 )
                                                                ;
                                                              v1569 = 1 << i15;
                                                              *(_WORD *)(v247 + 2 * v248) = v1569 | 0xB400;
                                                              *(_WORD *)(v1547 + 6) = i14 | 0xEB00;
                                                              v1570 = (_WORD)i14 << 8;
                                                              *(_WORD *)(v1547 + 2) = ((_WORD)i14 << 8) | 0x4805;
                                                              v1571 = i15;
                                                              *(_WORD *)(v1547 + 4) = i15 | (8 * v1566) | 0x4600;
                                                              v1572 = (_WORD)i15 << 8;
                                                              v1573 = 8 * i15;
                                                              if ( v1550 == 15 )
                                                              {
                                                                *(_WORD *)(v1547 + 8) = v1572 | v1571;
                                                                v1574 = v1571 | 0x7800;
                                                              }
                                                              else
                                                              {
                                                                *(_WORD *)(v1547 + 8) = v1571 | 0x40 | v1572;
                                                                v1574 = v1571 | 0x8800;
                                                              }
                                                              *(_WORD *)(v1547 + 10) = v1573 | v1574;
                                                              *(_WORD *)(v1547 + 14) = v1571 | v1570 | 0x40;
                                                              *(_WORD *)(v1547 + 18) = v1569 | 0xBC00;
                                                              *(_WORD *)(v1547 + 12) = i14 | 0xEB00;
                                                              *(_WORD *)(v1547 + 22) = -16640;
                                                              v1558 = 14;
                                                              *(_WORD *)(v1547 + 16) = v1570 | 0x3001;
                                                              *(_WORD *)(v1547 + 20) = (8 * i14) | 0x4700;
                                                              *(_DWORD *)(v1547 + 24) = v1544;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if ( v1550 == 14 )
                                                            {
                                                              v1559 = (int)v1546 >> 12;
                                                              v43 = (v1545 & 0x80) == 0;
                                                              v1563 = v1544 & 0xFFFFFFFC;
                                                              v1564 = v1546 & 0xFFF;
                                                              if ( v43 )
                                                                v1565 = (unsigned int *)(v1563 - v1564);
                                                              else
                                                                v1565 = (unsigned int *)(v1564 + v1563);
                                                              v1562 = *v1565;
                                                            }
                                                            else
                                                            {
                                                              v1559 = (v1546 >> 8) & 0xF;
                                                              v1560 = (v1548 << 27)
                                                                    | (v1546 >> 12 << 30)
                                                                    | ((unsigned int)v1545 >> 10 << 31);
                                                              v1561 = v1544 & 0xFFFFFFFC;
                                                              if ( v1550 == 12 )
                                                                v1562 = v1560 + v1561;
                                                              else
                                                                v1562 = v1561 - v1560;
                                                            }
                                                            *(_WORD *)(v247 + 2 * v248) = ((_WORD)v1559 << 8) | 0x4800;
                                                            *(_WORD *)(v1547 + 4) = v1562;
                                                            v1558 = 4;
                                                            *(_WORD *)(v1547 + 2) = -8191;
                                                            *(_WORD *)(v1547 + 6) = HIWORD(v1562);
                                                          }
                                                          goto LABEL_3130;
                                                        }
                                                        v2000 = (v1546 >> 11) & 1;
                                                        v1551 = ((unsigned int)v1545 >> 10) & 1;
                                                        v1994 = (v1546 >> 13) & 1;
                                                        v1552 = v1994 == v1551;
                                                        v1981 = v2000 == v1551;
                                                        if ( v1996 <= 1 )
                                                        {
                                                          *(_WORD *)(v247 + 2 * v248) = -3569;
                                                          *(_WORD *)(v1547 + 2) = 3593;
                                                          goto LABEL_3091;
                                                        }
                                                        if ( v1550 == 10 )
                                                        {
                                                          v1996 = 4 * (v1545 & 0x3C0);
                                                          *(_WORD *)(v247 + 2 * v248) = (4 * (v1545 & 0x3C0)) | 0xD000;
                                                          *(_WORD *)(v1547 + 2) = -8189;
LABEL_3091:
                                                          v1553 = 2;
                                                        }
                                                        else
                                                        {
                                                          v1553 = 0;
                                                        }
                                                        v1980 = 2 * v1553;
                                                        *(_WORD *)(v1547 + 2 * v1553) = -1825;
                                                        *(_WORD *)(2 * v1553 + v1547 + 2) = -4096;
                                                        if ( v1550 == 8 )
                                                        {
                                                          v1554 = (2 * (v1546 & 0x7FE))
                                                                | (v1551 << 24)
                                                                | ((v1545 & 0x3FF) << 12)
                                                                | (v1552 << 23)
                                                                | (v1981 << 22);
                                                          if ( v1551 )
                                                            v1554 |= 0xFE000000;
                                                          v1555 = v1554 + v1544;
LABEL_3106:
                                                          v1558 = v1553 + 4;
                                                          *(_DWORD *)(v1547 + v1980 + 4) = v1555;
LABEL_3130:
                                                          v1544 += 4;
                                                          v248 += v1558;
                                                          v250 = v1986;
LABEL_3170:
                                                          if ( v250 >= v1990 )
                                                            goto LABEL_443;
                                                          continue;
                                                        }
                                                        v1556 = 2 * (v1546 & 0x7FF);
                                                        if ( v1550 == 9 )
                                                        {
                                                          v1557 = v1556
                                                                | (v1551 << 24)
                                                                | ((v1545 & 0x3FF) << 12)
                                                                | (v1552 << 23)
                                                                | (v1981 << 22);
LABEL_3103:
                                                          if ( v1551 )
                                                            v1557 |= 0xFE000000;
                                                        }
                                                        else
                                                        {
                                                          if ( v1550 != 10 )
                                                          {
                                                            v1557 = v1556
                                                                  | (v1551 << 24)
                                                                  | ((v1545 & 0x3FF) << 12)
                                                                  | (v1552 << 23)
                                                                  | (v1981 << 22);
                                                            goto LABEL_3103;
                                                          }
                                                          v1557 = v1556
                                                                | (v1551 << 20)
                                                                | ((v1545 & 0x3F) << 12)
                                                                | (v2000 << 19)
                                                                | (v1994 << 18);
                                                          if ( v1551 )
                                                            v1557 = ~(~(v1557 << 11) >> 11);
                                                        }
                                                        v1555 = v1557 + v1544 + 1;
                                                        goto LABEL_3106;
                                                      }
                                                      break;
                                                    }
                                                    v1575 = (_WORD *)(v247 + 2 * v248);
                                                    if ( (v1545 & 0xF000) == 0xD000 )
                                                    {
                                                      v1579 = 2 * (unsigned __int8)v1545;
                                                      if ( v1579 >> 8 )
                                                        v1579 |= 0xFFFFFF00;
                                                      v1582 = v1579 + v1544;
                                                      *(_WORD *)(v247 + 2 * v248) = v1545 & 0xFF00;
                                                      v1575[1] = -8189;
                                                      v1584 = 2;
                                                    }
                                                    else
                                                    {
                                                      v1576 = v1545 & 0xF800;
                                                      if ( v1576 == 57344 )
                                                      {
                                                        v1580 = v1545 & 0x7FF;
                                                        v1581 = 2 * v1580;
                                                        if ( (unsigned int)(2 * v1580) >> 11 )
                                                          v1581 = ~((unsigned int)~(v1580 << 22) >> 21);
                                                        v1582 = v1581 + v1544;
                                                      }
                                                      else
                                                      {
                                                        if ( (v1545 & 0xFFFFFFF8) != 0x4778 )
                                                        {
                                                          v1577 = v1545 & 0xFF78;
                                                          if ( v1577 == 17528 )
                                                          {
                                                            for ( i16 = 7;
                                                                  i16 == (v1545 & 7
                                                                        | ((unsigned __int8)(v1545 & 0x80) >> 4));
                                                                  --i16 )
                                                            {
                                                              ;
                                                            }
                                                            v1587 = 1 << i16;
                                                            *(_WORD *)(v247 + 2 * v248) = v1587 | 0xB400;
                                                            v1575[2] = v1545 & 0xFF87 | (8 * i16);
                                                            v1575[6] = v1544;
                                                            v1575[1] = ((_WORD)i16 << 8) | 0x4802;
                                                            v1575[3] = v1587 | 0xBC00;
                                                            v1575[4] = -8190;
                                                            v1575[5] = -16640;
                                                            v1575[7] = HIWORD(v1544);
                                                            v1586 = 8;
                                                          }
                                                          else
                                                          {
                                                            if ( v1577 == 18040 )
                                                            {
                                                              v1578 = 4;
                                                            }
                                                            else if ( v1576 == 40960 )
                                                            {
                                                              v1578 = 5;
                                                            }
                                                            else if ( v1576 == 18432 )
                                                            {
                                                              v1578 = 6;
                                                            }
                                                            else if ( (v1545 & 0xF500) == 0xB100 )
                                                            {
                                                              v1578 = 7;
                                                            }
                                                            else
                                                            {
                                                              v1578 = 26;
                                                            }
                                                            if ( (unsigned int)(v1578 - 4) > 2 )
                                                            {
                                                              if ( v1578 == 7 )
                                                              {
                                                                *(_WORD *)(v247 + 2 * v248) = v1545 & 0xFD07;
                                                                v1594 = (((unsigned __int16)(v1545 & 0x200) >> 3)
                                                                       | ((unsigned __int8)(v1545 & 0xF8) >> 2))
                                                                      + v1544
                                                                      + 1;
                                                                v1575[2] = -1825;
                                                                v1575[4] = v1594;
                                                                v1575[3] = -4096;
                                                                v1586 = 6;
                                                                v1575[1] = -8189;
                                                                v1575[5] = HIWORD(v1594);
                                                              }
                                                              else
                                                              {
                                                                *(_WORD *)(v247 + 2 * v248) = v1545;
                                                                v1575[1] = -16640;
                                                                v1586 = 2;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              if ( v1578 == 4 )
                                                              {
                                                                LOWORD(v1588) = *(_WORD *)(v1984 + 2 * v250) & 7;
                                                                v1589 = v1544;
                                                              }
                                                              else
                                                              {
                                                                v1590 = v1578 == 5;
                                                                v1591 = v1544 & 0xFFFFFFFC;
                                                                v1592 = (unsigned __int8)v1545;
                                                                v1593 = v1545 & 0x700;
                                                                if ( v1590 )
                                                                  v1589 = v1592 + v1591;
                                                                else
                                                                  v1589 = *(_DWORD *)(v1591 + 4 * v1592);
                                                                v1588 = v1593 >> 8;
                                                                if ( v1590 )
                                                                  v1589 *= 4;
                                                              }
                                                              *(_WORD *)(v247 + 2 * v248) = ((_WORD)v1588 << 8) | 0x4800;
                                                              v1575[2] = v1589;
                                                              v1586 = 4;
                                                              v1575[1] = -8191;
                                                              v1575[3] = HIWORD(v1589);
                                                            }
                                                          }
                                                          goto LABEL_3169;
                                                        }
                                                        v1582 = v1544;
                                                      }
                                                      v1584 = 0;
                                                    }
                                                    v1575[v1584] = -1825;
                                                    v1585 = &v1575[v1584];
                                                    v1586 = v1584 + 4;
                                                    v1585[2] = v1582;
                                                    v1585[1] = -4096;
                                                    v1585[3] = HIWORD(v1582);
LABEL_3169:
                                                    v1544 += 2;
                                                    v248 += v1586;
                                                    ++v250;
                                                    goto LABEL_3170;
                                                  }
                                                  v1527 = realloc(v1523, v1524);
                                                  if ( !v1527 )
                                                    goto LABEL_3029;
LABEL_3027:
                                                  v1523 = v1527;
                                                }
                                                v1523[v1520++] = v1525;
                                                v1523[v1526] = 0;
                                                goto LABEL_3029;
                                              }
                                              v1533 = v1520 + 2;
                                              v1534 = HIBYTE(v2016[0]);
                                              if ( v1520 + 2 < v1520 )
                                                goto LABEL_3051;
                                              v1535 = v1520 + 1;
                                              if ( v1520 + 1 >= v1520 )
                                              {
                                                if ( v1533 < v1535 )
                                                  goto LABEL_3051;
                                                if ( v1523 == v157 )
                                                {
                                                  if ( v1533 > v1535 )
                                                  {
                                                    v1536 = malloc(v1520 + 2);
                                                    if ( v1536 )
                                                    {
                                                      *v1536 = 0;
                                                      goto LABEL_3049;
                                                    }
                                                  }
LABEL_3051:
                                                  v1528 = v1520 + 6;
                                                  goto LABEL_3053;
                                                }
                                                v1536 = realloc(v1523, v1533);
                                                if ( !v1536 )
                                                  goto LABEL_3051;
LABEL_3049:
                                                v1523 = v1536;
                                              }
                                              v1523[v1520++] = v1534;
                                              v1523[v1535] = 0;
                                              goto LABEL_3051;
                                            }
                                            v1529 = v1520 + 2;
                                            v1530 = BYTE1(v2016[0]);
                                            if ( v1520 + 2 < v1520 )
                                              goto LABEL_3040;
                                            v1531 = v1520 + 1;
                                            if ( v1520 + 1 >= v1520 )
                                            {
                                              if ( v1529 < v1531 )
                                                goto LABEL_3040;
                                              if ( v1523 == v157 )
                                              {
                                                if ( v1529 > v1531 )
                                                {
                                                  v1532 = malloc(v1520 + 2);
                                                  if ( v1532 )
                                                  {
                                                    *v1532 = 0;
                                                    goto LABEL_3038;
                                                  }
                                                }
LABEL_3040:
                                                v1528 = v1520 + 8;
                                                goto LABEL_3053;
                                              }
                                              v1532 = realloc(v1523, v1529);
                                              if ( !v1532 )
                                                goto LABEL_3040;
LABEL_3038:
                                              v1523 = v1532;
                                            }
                                            v1523[v1520++] = v1530;
                                            v1523[v1531] = 0;
                                            goto LABEL_3040;
                                          }
                                          v1517 = realloc(v1513, v1514);
                                          if ( !v1517 )
                                            goto LABEL_3009;
LABEL_3007:
                                          v1513 = v1517;
                                        }
                                        v1513[v1510++] = v1515;
                                        v1513[v1516] = 0;
                                        goto LABEL_3009;
                                      case 3:
                                        v161 = *((_DWORD *)v83 + 10);
                                        if ( v161 )
                                          **((_DWORD **)v1988 - 35) = &v1998[v161];
                                        v162 = v1997 + *(_DWORD *)&v1993[12 * v1991 + 36];
                                        v163 = *((_DWORD *)v1988 - 34);
                                        if ( !v162 )
                                          goto LABEL_522;
                                        v164 = (unsigned int *)operator new(0x7Cu);
                                        v89 = v164;
                                        if ( !v164 )
                                          goto LABEL_522;
                                        (*(void (__fastcall **)(unsigned int *, _DWORD, int))(*v1989 + 20))(
                                          v164,
                                          0,
                                          124);
                                        v165 = v1988;
                                        *v89 = v162;
                                        v89[1] = v163;
                                        if ( (v162 & 1) != 0 )
                                          v166 = 12;
                                        else
                                          v166 = 8;
                                        v167 = *((_DWORD *)v165 - 33);
                                        v89[30] = v166;
                                        v89[2] = v167;
                                        v168 = operator new[](v166);
                                        v1984 = v168;
                                        v89[3] = v168;
                                        if ( !v168 )
                                          goto LABEL_521;
                                        v169 = v89[30];
                                        v1982 = (char *)(*v89 & 0xFFFFFFFE);
                                        v1990 = v169;
                                        if ( (char *)v1984 == v1982 )
                                        {
                                          memset(v2016, 0, sizeof(v2016));
                                          for ( i17 = 0; i17 != 256; ++i17 )
                                          {
                                            v171 = i17;
                                            v172 = 8;
                                            do
                                            {
                                              v173 = (v171 & 1) == 0;
                                              v174 = v171 >> 1;
                                              if ( (v171 & 1) != 0 )
                                                v171 = -128629065;
                                              else
                                                v171 >>= 1;
                                              if ( !v173 )
                                                v171 ^= v174;
                                              --v172;
                                            }
                                            while ( v172 );
                                            v2016[i17] = v171;
                                          }
                                          v175 = 0;
                                          v176 = -1;
                                          do
                                          {
                                            v177 = *(unsigned __int8 *)(v1984 + v175++);
                                            v176 = (v2016[v177 ^ (unsigned __int8)v176] ^ (v176 >> 8)) + 16;
                                          }
                                          while ( v175 != 4 );
                                          v178 = ~v176;
                                          switch ( v169 )
                                          {
                                            case 0u:
                                            case 1u:
                                            case 2u:
                                              v179 = 0;
                                              break;
                                            case 3u:
                                              v179 = 3;
                                              break;
                                            case 4u:
                                              v179 = v178 + 517762882;
                                              break;
                                            case 5u:
                                              v179 = v178 + 517762880;
                                              break;
                                            case 6u:
                                              v179 = 7;
                                              break;
                                            case 7u:
                                              v179 = 6;
                                              break;
                                            default:
                                              v179 = v169 + 15;
                                              break;
                                          }
                                          v1990 = v179 % 16;
                                        }
                                        v2016[0] = -1523182318;
                                        LOBYTE(v2016[1]) = 0;
                                        v180 = strlen((const char *)v2016);
                                        v181 = *v1989;
                                        v182 = (_BYTE *)*((_DWORD *)v1988 - 49);
                                        v183 = v180;
                                        if ( v180
                                          && (v184 = v180 + 1, v184 > v183)
                                          && (v185 = malloc(v184), (v1986 = (unsigned int)v185) != 0) )
                                        {
                                          (*(void (__fastcall **)(void *, _DWORD *, size_t))(v181 + 24))(
                                            v185,
                                            v2016,
                                            v183);
                                          *(_BYTE *)(v1986 + v183) = 0;
                                        }
                                        else
                                        {
                                          v183 = 0;
                                          v1986 = (unsigned int)v182;
                                        }
                                        v2015 = (_BYTE *)&loc_A65562;
                                        v1610 = strlen((const char *)&v2015);
                                        v1611 = *v1989;
                                        v1612 = v1610;
                                        if ( v1610
                                          && (v1613 = v1610 + 1, v1613 > v1612)
                                          && (v1614 = malloc(v1613), (v1615 = v1614) != 0) )
                                        {
                                          (*(void (__fastcall **)(_BYTE *, char **, unsigned int))(v1611 + 24))(
                                            v1614,
                                            &v2015,
                                            v1612);
                                          v1615[v1612] = 0;
                                        }
                                        else
                                        {
                                          v1612 = 0;
                                          v1615 = v182;
                                        }
                                        v1616 = v1612 + 2;
                                        v1617 = v2016[0];
                                        if ( v1612 + 2 < v1612 )
                                          goto LABEL_3253;
                                        v1618 = v1612 + 1;
                                        if ( v1612 + 1 >= v1612 )
                                        {
                                          if ( v1616 < v1618 )
                                            goto LABEL_3253;
                                          if ( v1615 == v182 )
                                          {
                                            if ( v1616 > v1618 )
                                            {
                                              v1619 = malloc(v1612 + 2);
                                              if ( v1619 )
                                              {
                                                *v1619 = 0;
                                                goto LABEL_3251;
                                              }
                                            }
LABEL_3253:
                                            v1620 = *v1989;
                                            if ( v1982 )
                                            {
                                              v1621 = strlen(v1982);
                                              v1622 = v1621;
                                              if ( v1621 )
                                              {
                                                v1623 = v1621 + 1;
                                                if ( v1623 > v1622 )
                                                {
                                                  v1624 = malloc(v1623);
                                                  v1625 = v1624;
                                                  if ( v1624 )
                                                  {
                                                    (*(void (__fastcall **)(_BYTE *, char *, unsigned int))(v1620 + 24))(
                                                      v1624,
                                                      v1982,
                                                      v1622);
                                                    v1625[v1622] = 0;
                                                    goto LABEL_3260;
                                                  }
                                                }
                                              }
                                              v1622 = 0;
                                            }
                                            else
                                            {
                                              v1622 = 0;
                                            }
                                            v1625 = v182;
LABEL_3260:
                                            if ( v183 != 8 )
                                            {
                                              if ( v183 != 9 )
                                              {
                                                if ( v183 != 7 )
                                                {
                                                  v1630 = v1612 - 4;
                                                  goto LABEL_3297;
                                                }
                                                v1626 = v1622 + 2;
                                                v1627 = BYTE1(v2015);
                                                if ( v1622 + 2 < v1622 )
                                                  goto LABEL_3273;
                                                v1628 = v1622 + 1;
                                                if ( v1622 + 1 >= v1622 )
                                                {
                                                  if ( v1626 < v1628 )
                                                    goto LABEL_3273;
                                                  if ( v1625 == v182 )
                                                  {
                                                    if ( v1626 > v1628 )
                                                    {
                                                      v1629 = malloc(v1622 + 2);
                                                      if ( v1629 )
                                                      {
                                                        *v1629 = 0;
                                                        goto LABEL_3271;
                                                      }
                                                    }
LABEL_3273:
                                                    v1630 = v1622 + 20;
LABEL_3297:
                                                    if ( v1625 != v182 )
                                                      free(v1625);
                                                    if ( v1615 != v182 )
                                                      free(v1615);
                                                    if ( (_BYTE *)v1986 != v182 )
                                                      free((void *)v1986);
                                                    while ( v1630 < v1990 )
                                                    {
                                                      *(_BYTE *)(v1984 + v1630) = v1982[v1630];
                                                      ++v1630;
                                                    }
                                                    v1982 = (char *)*((_DWORD *)v1988 - 51);
                                                    v1639 = *(_DWORD *)v1982;
                                                    v1640 = *(_DWORD *)(*(_DWORD *)v1982 + 128);
                                                    if ( !v1640 )
                                                      v1640 = *((_DWORD *)v1988 - 30);
                                                    v1641 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                                    v1642 = v1640 + 84 * (*v1641)++;
                                                    v89[29] = v1642;
                                                    (*(void (__fastcall **)(unsigned int, unsigned int, int))(v1639 + 4))(
                                                      v1642 & 0xFFFFF000,
                                                      ((v1642 + 4351) & 0xFFFFF000) - (v1642 & 0xFFFFF000),
                                                      7);
                                                    v243 = *v89;
                                                    v1643 = v89[3];
                                                    v1990 = (unsigned int)(v89 + 8);
                                                    v1644 = v243 & 1;
                                                    v1645 = v89[30];
                                                    v1984 = v1643;
                                                    v247 = v89[29];
                                                    v1986 = (unsigned int)(v89 + 4);
                                                    if ( (v243 & 1) == 0 )
                                                    {
                                                      v1697 = v243 + 8;
                                                      v1698 = v1645 >> 2;
                                                      v1699 = (char *)(v1984 - v243);
                                                      v1994 = v1645 + v243;
                                                      v1700 = 0;
                                                      for ( i18 = 0; ; ++i18 )
                                                      {
                                                        v308 = 4 * v1644;
                                                        if ( i18 == v1698 )
                                                          break;
                                                        *(_DWORD *)(v1986 + 4 * v89[28]) = 4 * i18;
                                                        *(_DWORD *)(v1990 + 4 * v89[28]++) = v308;
                                                        v1702 = *(_DWORD *)&v1699[v1697 - 8];
                                                        if ( (v1702 & 0xFE000000) == 0xFA000000 )
                                                        {
                                                          v1703 = (_DWORD *)(&word_10 + 1);
                                                        }
                                                        else if ( (v1702 & 0xF000000) == 0xB000000 )
                                                        {
                                                          v1703 = (_DWORD *)&word_12;
                                                        }
                                                        else if ( (v1702 & 0xF000000) == 0xA000000 )
                                                        {
                                                          v1703 = (_DWORD *)(&word_12 + 1);
                                                        }
                                                        else if ( (v1702 & 0xFF000FF) == 0x120001F )
                                                        {
                                                          v1703 = &dword_14;
                                                        }
                                                        else if ( (v1702 & 0xFEF0010) == 0x8F0000 )
                                                        {
                                                          v1703 = &dword_14 + 1;
                                                        }
                                                        else if ( (v1702 & 0xFFF0000) == 0x28F0000 )
                                                        {
                                                          v1703 = &dword_14 + 2;
                                                        }
                                                        else if ( (v1702 & 0xFFF0000) == 0x24F0000 )
                                                        {
                                                          v1703 = &dword_14 + 3;
                                                        }
                                                        else if ( (v1702 & 0xE5F0000) == 0x41F0000 )
                                                        {
                                                          v1703 = &dword_18 + 1;
                                                        }
                                                        else if ( (v1702 & 0xFE00FFF) == 0x1A0000F )
                                                        {
                                                          v1703 = &dword_18;
                                                        }
                                                        else
                                                        {
                                                          v1703 = &dword_18 + 2;
                                                        }
                                                        if ( (unsigned int)v1703 - 17 > 3 )
                                                        {
                                                          if ( v1703 == (int *)((char *)&dword_14 + 1) )
                                                          {
                                                            for ( i19 = 12;
                                                                  i19 == (unsigned __int16)v1702 >> 12
                                                               || i19 == (*(_DWORD *)&v1699[v1697 - 8] & 0xF);
                                                                  --i19 )
                                                            {
                                                              ;
                                                            }
                                                            v1644 += 6;
                                                            *(_DWORD *)(v247 + v308) = (i19 << 12) | 0xE52D0004;
                                                            v1709 = (_DWORD *)(v308 + v247);
                                                            v1709[2] = v1702 & 0xFFF0FFFF | (i19 << 16);
                                                            v1709[5] = v1697;
                                                            v1709[3] = (i19 << 12) | 0xE49D0004;
                                                            v1709[1] = (i19 << 12) | 0xE59F0008;
                                                            v1709[4] = -493883392;
                                                          }
                                                          else if ( (unsigned int)v1703 - 22 > 3 )
                                                          {
                                                            ++v1644;
                                                            *(_DWORD *)(v247 + v308) = v1702;
                                                          }
                                                          else
                                                          {
                                                            if ( (unsigned int)v1703 - 22 <= 1
                                                              || v1703 == (int *)((char *)&dword_18 + 1) )
                                                            {
                                                              v1710 = *(_DWORD *)&v1699[v1697 - 8] & 0xFFF;
                                                              if ( v1703 == (int *)((char *)&dword_14 + 2) )
                                                              {
                                                                v1700 = v1710 + v1697;
                                                              }
                                                              else if ( v1703 == (int *)((char *)&dword_14 + 3) )
                                                              {
                                                                v1700 = v1697 - v1710;
                                                              }
                                                              else if ( v1703 == (int *)((char *)&dword_18 + 1) )
                                                              {
                                                                if ( (v1702 & 0x800000) != 0 )
                                                                  v1700 = *(_DWORD *)(v1710 + v1697);
                                                                else
                                                                  v1703 = (int *)(v1697 - v1710);
                                                                if ( (v1702 & 0x800000) == 0 )
                                                                  v1700 = *v1703;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              v1700 = v1697;
                                                            }
                                                            v1644 += 3;
                                                            *(_DWORD *)(v247 + v308) = ((unsigned __int16)v1702 >> 12 << 12)
                                                                                     | 0xE51F0000;
                                                            v1711 = v308 + v247;
                                                            *(_DWORD *)(v1711 + 4) = -493883392;
                                                            *(_DWORD *)(v1711 + 8) = v1700;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if ( (unsigned int)v1703 - 17 <= 1 )
                                                          {
                                                            ++v1644;
                                                            *(_DWORD *)(v247 + v308) = -493887484;
                                                          }
                                                          *(_DWORD *)(v247 + 4 * v1644) = -450891772;
                                                          if ( v1703 == (int *)((char *)&word_10 + 1) )
                                                          {
                                                            v1704 = v1702 & 0x1000000;
                                                            v1705 = (4 * (v1702 & 0xFFFFFF))
                                                                  | ((v1702 & 0x1000000u) >> 23);
                                                          }
                                                          else
                                                          {
                                                            v1704 = (int)v1703 - 18;
                                                            if ( (unsigned int)v1703 - 18 > 1 )
                                                              v1705 = 0;
                                                            else
                                                              v1705 = v1702 & 0xFFFFFF;
                                                            if ( (unsigned int)v1703 - 18 <= 1 )
                                                              v1705 *= 4;
                                                          }
                                                          v1706 = 4 * v1644 + v247;
                                                          if ( v1705 >> 25 )
                                                            v1705 |= 0xFC000000;
                                                          v1707 = v1703 == (int *)((char *)&word_10 + 1);
                                                          if ( v1703 == (int *)((char *)&word_10 + 1) )
                                                            v1704 = v1697 + 1;
                                                          else
                                                            v1703 = (int *)(v1705 + v1697);
                                                          if ( v1707 )
                                                            v1703 = (int *)(v1705 + v1704);
                                                          v1644 += 2;
                                                          *(_DWORD *)(v1706 + 4) = v1703;
                                                        }
                                                        v1697 += 4;
                                                      }
                                                      goto LABEL_509;
                                                    }
                                                    v248 = 0;
                                                    v1646 = v243 + 3;
                                                    v250 = 0;
                                                    v1990 = v1645 >> 1;
                                                    while ( 2 )
                                                    {
                                                      v1647 = *(unsigned __int16 *)(v1984 + 2 * v250);
                                                      if ( (unsigned int)((v1647 >> 11) - 29) <= 2 )
                                                      {
                                                        v1986 = v250 + 2;
                                                        if ( v250 + 2 > v1990 )
                                                          goto LABEL_443;
                                                        v1648 = *(unsigned __int16 *)(2 * v250 + v1984 + 2);
                                                        v1649 = v247 + 2 * v248;
                                                        v1650 = v1648 | (v1647 << 16);
                                                        v1651 = v1650 & 0xF800D000;
                                                        if ( (v1650 & 0xF800D000) == 0xF000C000 )
                                                        {
                                                          v1652 = 8;
                                                        }
                                                        else
                                                        {
                                                          switch ( v1651 )
                                                          {
                                                            case 0xF000D000:
                                                              v1652 = 9;
                                                              break;
                                                            case 0xF0008000:
                                                              v1652 = 10;
                                                              break;
                                                            case 0xF0009000:
                                                              v1652 = 11;
                                                              break;
                                                            default:
                                                              if ( (v1650 & 0xFBFF8000) == 0xF2AF0000 )
                                                              {
                                                                v1652 = 12;
                                                              }
                                                              else if ( (v1650 & 0xFBFF8000) == 0xF20F0000 )
                                                              {
                                                                v1652 = 13;
                                                              }
                                                              else if ( (v1650 & 0xFF7F0000) == 0xF85F0000 )
                                                              {
                                                                v1652 = 14;
                                                              }
                                                              else if ( (v1648 & 0xFFFF00F0 | (v1647 << 16)) == 0xE8DF0000 )
                                                              {
                                                                v1652 = 15;
                                                              }
                                                              else if ( (v1648 & 0xFFFF00F0 | (v1647 << 16)) == 0xE8DF0010 )
                                                              {
                                                                v1652 = 16;
                                                              }
                                                              else
                                                              {
                                                                v1652 = 26;
                                                              }
                                                              break;
                                                          }
                                                        }
                                                        v1996 = v1652 - 8;
                                                        if ( (unsigned int)(v1652 - 8) > 3 )
                                                        {
                                                          if ( (unsigned int)(v1652 - 12) > 2 )
                                                          {
                                                            if ( (unsigned int)(v1652 - 15) > 1 )
                                                            {
                                                              *(_WORD *)(v247 + 2 * v248) = v1647;
                                                              v1660 = 2;
                                                              *(_WORD *)(v1649 + 2) = v1648;
                                                            }
                                                            else
                                                            {
                                                              v1668 = v1648 & 0xF;
                                                              for ( i20 = 7; i20 == v1668; --i20 )
                                                                ;
                                                              for ( i21 = 7; i21 == v1668 || i21 == i20; --i21 )
                                                                ;
                                                              v1671 = 1 << i21;
                                                              *(_WORD *)(v247 + 2 * v248) = v1671 | 0xB400;
                                                              *(_WORD *)(v1649 + 6) = i20 | 0xEB00;
                                                              v1672 = (_WORD)i20 << 8;
                                                              *(_WORD *)(v1649 + 2) = ((_WORD)i20 << 8) | 0x4805;
                                                              v1673 = i21;
                                                              *(_WORD *)(v1649 + 4) = i21 | (8 * v1668) | 0x4600;
                                                              v1674 = (_WORD)i21 << 8;
                                                              v1675 = 8 * i21;
                                                              if ( v1652 == 15 )
                                                              {
                                                                *(_WORD *)(v1649 + 8) = v1674 | v1673;
                                                                v1676 = v1673 | 0x7800;
                                                              }
                                                              else
                                                              {
                                                                *(_WORD *)(v1649 + 8) = v1673 | 0x40 | v1674;
                                                                v1676 = v1673 | 0x8800;
                                                              }
                                                              *(_WORD *)(v1649 + 10) = v1675 | v1676;
                                                              *(_WORD *)(v1649 + 14) = v1673 | v1672 | 0x40;
                                                              *(_WORD *)(v1649 + 18) = v1671 | 0xBC00;
                                                              *(_WORD *)(v1649 + 12) = i20 | 0xEB00;
                                                              *(_WORD *)(v1649 + 22) = -16640;
                                                              v1660 = 14;
                                                              *(_WORD *)(v1649 + 16) = v1672 | 0x3001;
                                                              *(_WORD *)(v1649 + 20) = (8 * i20) | 0x4700;
                                                              *(_DWORD *)(v1649 + 24) = v1646;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if ( v1652 == 14 )
                                                            {
                                                              v1661 = (int)v1648 >> 12;
                                                              v43 = (v1647 & 0x80) == 0;
                                                              v1665 = v1646 & 0xFFFFFFFC;
                                                              v1666 = v1648 & 0xFFF;
                                                              if ( v43 )
                                                                v1667 = (unsigned int *)(v1665 - v1666);
                                                              else
                                                                v1667 = (unsigned int *)(v1666 + v1665);
                                                              v1664 = *v1667;
                                                            }
                                                            else
                                                            {
                                                              v1661 = (v1648 >> 8) & 0xF;
                                                              v1662 = (v1650 << 27)
                                                                    | (v1648 >> 12 << 30)
                                                                    | ((unsigned int)v1647 >> 10 << 31);
                                                              v1663 = v1646 & 0xFFFFFFFC;
                                                              if ( v1652 == 12 )
                                                                v1664 = v1662 + v1663;
                                                              else
                                                                v1664 = v1663 - v1662;
                                                            }
                                                            *(_WORD *)(v247 + 2 * v248) = ((_WORD)v1661 << 8) | 0x4800;
                                                            *(_WORD *)(v1649 + 4) = v1664;
                                                            v1660 = 4;
                                                            *(_WORD *)(v1649 + 2) = -8191;
                                                            *(_WORD *)(v1649 + 6) = HIWORD(v1664);
                                                          }
                                                          goto LABEL_3374;
                                                        }
                                                        v2000 = (v1648 >> 11) & 1;
                                                        v1653 = ((unsigned int)v1647 >> 10) & 1;
                                                        v1994 = (v1648 >> 13) & 1;
                                                        v1654 = v1994 == v1653;
                                                        v1981 = v2000 == v1653;
                                                        if ( v1996 <= 1 )
                                                        {
                                                          *(_WORD *)(v247 + 2 * v248) = -3569;
                                                          *(_WORD *)(v1649 + 2) = 3593;
                                                          goto LABEL_3335;
                                                        }
                                                        if ( v1652 == 10 )
                                                        {
                                                          v1996 = 4 * (v1647 & 0x3C0);
                                                          *(_WORD *)(v247 + 2 * v248) = (4 * (v1647 & 0x3C0)) | 0xD000;
                                                          *(_WORD *)(v1649 + 2) = -8189;
LABEL_3335:
                                                          v1655 = 2;
                                                        }
                                                        else
                                                        {
                                                          v1655 = 0;
                                                        }
                                                        v1980 = 2 * v1655;
                                                        *(_WORD *)(v1649 + 2 * v1655) = -1825;
                                                        *(_WORD *)(2 * v1655 + v1649 + 2) = -4096;
                                                        if ( v1652 == 8 )
                                                        {
                                                          v1656 = (2 * (v1648 & 0x7FE))
                                                                | (v1653 << 24)
                                                                | ((v1647 & 0x3FF) << 12)
                                                                | (v1654 << 23)
                                                                | (v1981 << 22);
                                                          if ( v1653 )
                                                            v1656 |= 0xFE000000;
                                                          v1657 = v1656 + v1646;
LABEL_3350:
                                                          v1660 = v1655 + 4;
                                                          *(_DWORD *)(v1649 + v1980 + 4) = v1657;
LABEL_3374:
                                                          v1646 += 4;
                                                          v248 += v1660;
                                                          v250 = v1986;
LABEL_3414:
                                                          if ( v250 >= v1990 )
                                                            goto LABEL_443;
                                                          continue;
                                                        }
                                                        v1658 = 2 * (v1648 & 0x7FF);
                                                        if ( v1652 == 9 )
                                                        {
                                                          v1659 = v1658
                                                                | (v1653 << 24)
                                                                | ((v1647 & 0x3FF) << 12)
                                                                | (v1654 << 23)
                                                                | (v1981 << 22);
LABEL_3347:
                                                          if ( v1653 )
                                                            v1659 |= 0xFE000000;
                                                        }
                                                        else
                                                        {
                                                          if ( v1652 != 10 )
                                                          {
                                                            v1659 = v1658
                                                                  | (v1653 << 24)
                                                                  | ((v1647 & 0x3FF) << 12)
                                                                  | (v1654 << 23)
                                                                  | (v1981 << 22);
                                                            goto LABEL_3347;
                                                          }
                                                          v1659 = v1658
                                                                | (v1653 << 20)
                                                                | ((v1647 & 0x3F) << 12)
                                                                | (v2000 << 19)
                                                                | (v1994 << 18);
                                                          if ( v1653 )
                                                            v1659 = ~(~(v1659 << 11) >> 11);
                                                        }
                                                        v1657 = v1659 + v1646 + 1;
                                                        goto LABEL_3350;
                                                      }
                                                      break;
                                                    }
                                                    v1677 = (_WORD *)(v247 + 2 * v248);
                                                    if ( (v1647 & 0xF000) == 0xD000 )
                                                    {
                                                      v1681 = 2 * (unsigned __int8)v1647;
                                                      if ( v1681 >> 8 )
                                                        v1681 |= 0xFFFFFF00;
                                                      v1684 = v1681 + v1646;
                                                      *(_WORD *)(v247 + 2 * v248) = v1647 & 0xFF00;
                                                      v1677[1] = -8189;
                                                      v1686 = 2;
                                                    }
                                                    else
                                                    {
                                                      v1678 = v1647 & 0xF800;
                                                      if ( v1678 == 57344 )
                                                      {
                                                        v1682 = v1647 & 0x7FF;
                                                        v1683 = 2 * v1682;
                                                        if ( (unsigned int)(2 * v1682) >> 11 )
                                                          v1683 = ~((unsigned int)~(v1682 << 22) >> 21);
                                                        v1684 = v1683 + v1646;
                                                      }
                                                      else
                                                      {
                                                        if ( (v1647 & 0xFFFFFFF8) != 0x4778 )
                                                        {
                                                          v1679 = v1647 & 0xFF78;
                                                          if ( v1679 == 17528 )
                                                          {
                                                            for ( i22 = 7;
                                                                  i22 == (v1647 & 7
                                                                        | ((unsigned __int8)(v1647 & 0x80) >> 4));
                                                                  --i22 )
                                                            {
                                                              ;
                                                            }
                                                            v1689 = 1 << i22;
                                                            *(_WORD *)(v247 + 2 * v248) = v1689 | 0xB400;
                                                            v1677[2] = v1647 & 0xFF87 | (8 * i22);
                                                            v1677[6] = v1646;
                                                            v1677[1] = ((_WORD)i22 << 8) | 0x4802;
                                                            v1677[3] = v1689 | 0xBC00;
                                                            v1677[4] = -8190;
                                                            v1677[5] = -16640;
                                                            v1677[7] = HIWORD(v1646);
                                                            v1688 = 8;
                                                          }
                                                          else
                                                          {
                                                            if ( v1679 == 18040 )
                                                            {
                                                              v1680 = 4;
                                                            }
                                                            else if ( v1678 == 40960 )
                                                            {
                                                              v1680 = 5;
                                                            }
                                                            else if ( v1678 == 18432 )
                                                            {
                                                              v1680 = 6;
                                                            }
                                                            else if ( (v1647 & 0xF500) == 0xB100 )
                                                            {
                                                              v1680 = 7;
                                                            }
                                                            else
                                                            {
                                                              v1680 = 26;
                                                            }
                                                            if ( (unsigned int)(v1680 - 4) > 2 )
                                                            {
                                                              if ( v1680 == 7 )
                                                              {
                                                                *(_WORD *)(v247 + 2 * v248) = v1647 & 0xFD07;
                                                                v1696 = (((unsigned __int16)(v1647 & 0x200) >> 3)
                                                                       | ((unsigned __int8)(v1647 & 0xF8) >> 2))
                                                                      + v1646
                                                                      + 1;
                                                                v1677[2] = -1825;
                                                                v1677[4] = v1696;
                                                                v1677[3] = -4096;
                                                                v1688 = 6;
                                                                v1677[1] = -8189;
                                                                v1677[5] = HIWORD(v1696);
                                                              }
                                                              else
                                                              {
                                                                *(_WORD *)(v247 + 2 * v248) = v1647;
                                                                v1677[1] = -16640;
                                                                v1688 = 2;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              if ( v1680 == 4 )
                                                              {
                                                                LOWORD(v1690) = *(_WORD *)(v1984 + 2 * v250) & 7;
                                                                v1691 = v1646;
                                                              }
                                                              else
                                                              {
                                                                v1692 = v1680 == 5;
                                                                v1693 = v1646 & 0xFFFFFFFC;
                                                                v1694 = (unsigned __int8)v1647;
                                                                v1695 = v1647 & 0x700;
                                                                if ( v1692 )
                                                                  v1691 = v1694 + v1693;
                                                                else
                                                                  v1691 = *(_DWORD *)(v1693 + 4 * v1694);
                                                                v1690 = v1695 >> 8;
                                                                if ( v1692 )
                                                                  v1691 *= 4;
                                                              }
                                                              *(_WORD *)(v247 + 2 * v248) = ((_WORD)v1690 << 8) | 0x4800;
                                                              v1677[2] = v1691;
                                                              v1688 = 4;
                                                              v1677[1] = -8191;
                                                              v1677[3] = HIWORD(v1691);
                                                            }
                                                          }
                                                          goto LABEL_3413;
                                                        }
                                                        v1684 = v1646;
                                                      }
                                                      v1686 = 0;
                                                    }
                                                    v1677[v1686] = -1825;
                                                    v1687 = &v1677[v1686];
                                                    v1688 = v1686 + 4;
                                                    v1687[2] = v1684;
                                                    v1687[1] = -4096;
                                                    v1687[3] = HIWORD(v1684);
LABEL_3413:
                                                    v1646 += 2;
                                                    v248 += v1688;
                                                    ++v250;
                                                    goto LABEL_3414;
                                                  }
                                                  v1629 = realloc(v1625, v1626);
                                                  if ( !v1629 )
                                                    goto LABEL_3273;
LABEL_3271:
                                                  v1625 = v1629;
                                                }
                                                v1625[v1622++] = v1627;
                                                v1625[v1628] = 0;
                                                goto LABEL_3273;
                                              }
                                              v1635 = v1622 + 2;
                                              v1636 = HIBYTE(v2016[0]);
                                              if ( v1622 + 2 < v1622 )
                                                goto LABEL_3295;
                                              v1637 = v1622 + 1;
                                              if ( v1622 + 1 >= v1622 )
                                              {
                                                if ( v1635 < v1637 )
                                                  goto LABEL_3295;
                                                if ( v1625 == v182 )
                                                {
                                                  if ( v1635 > v1637 )
                                                  {
                                                    v1638 = malloc(v1622 + 2);
                                                    if ( v1638 )
                                                    {
                                                      *v1638 = 0;
                                                      goto LABEL_3293;
                                                    }
                                                  }
LABEL_3295:
                                                  v1630 = v1622 + 6;
                                                  goto LABEL_3297;
                                                }
                                                v1638 = realloc(v1625, v1635);
                                                if ( !v1638 )
                                                  goto LABEL_3295;
LABEL_3293:
                                                v1625 = v1638;
                                              }
                                              v1625[v1622++] = v1636;
                                              v1625[v1637] = 0;
                                              goto LABEL_3295;
                                            }
                                            v1631 = v1622 + 2;
                                            v1632 = BYTE1(v2016[0]);
                                            if ( v1622 + 2 < v1622 )
                                              goto LABEL_3284;
                                            v1633 = v1622 + 1;
                                            if ( v1622 + 1 >= v1622 )
                                            {
                                              if ( v1631 < v1633 )
                                                goto LABEL_3284;
                                              if ( v1625 == v182 )
                                              {
                                                if ( v1631 > v1633 )
                                                {
                                                  v1634 = malloc(v1622 + 2);
                                                  if ( v1634 )
                                                  {
                                                    *v1634 = 0;
                                                    goto LABEL_3282;
                                                  }
                                                }
LABEL_3284:
                                                v1630 = v1622 + 8;
                                                goto LABEL_3297;
                                              }
                                              v1634 = realloc(v1625, v1631);
                                              if ( !v1634 )
                                                goto LABEL_3284;
LABEL_3282:
                                              v1625 = v1634;
                                            }
                                            v1625[v1622++] = v1632;
                                            v1625[v1633] = 0;
                                            goto LABEL_3284;
                                          }
                                          v1619 = realloc(v1615, v1616);
                                          if ( !v1619 )
                                            goto LABEL_3253;
LABEL_3251:
                                          v1615 = v1619;
                                        }
                                        v1615[v1612++] = v1617;
                                        v1615[v1618] = 0;
                                        goto LABEL_3253;
                                    }
                                    if ( v84 != 4 )
                                      goto LABEL_522;
                                    v186 = v1997 + *((_DWORD *)v83 + 9);
                                    v187 = *((_DWORD *)v1988 - 32);
                                    if ( !v186 )
                                      goto LABEL_522;
                                    v188 = (unsigned int *)operator new(0x7Cu);
                                    v89 = v188;
                                    if ( !v188 )
                                      goto LABEL_522;
                                    (*(void (__fastcall **)(unsigned int *, _DWORD, int))(*v1989 + 20))(v188, 0, 124);
                                    v189 = v1988;
                                    *v89 = v186;
                                    v89[1] = v187;
                                    if ( (v186 & 1) != 0 )
                                      v190 = 12;
                                    else
                                      v190 = 8;
                                    v191 = *((_DWORD *)v189 - 31);
                                    v89[30] = v190;
                                    v89[2] = v191;
                                    v192 = operator new[](v190);
                                    v1984 = v192;
                                    v89[3] = v192;
                                    if ( !v192 )
                                      goto LABEL_521;
                                    v193 = v89[30];
                                    v1982 = (char *)(*v89 & 0xFFFFFFFE);
                                    v1990 = v193;
                                    if ( (char *)v1984 == v1982 )
                                    {
                                      memset(v2016, 0, sizeof(v2016));
                                      for ( i23 = 0; i23 != 256; ++i23 )
                                      {
                                        v195 = i23;
                                        v196 = 8;
                                        do
                                        {
                                          v197 = (v195 & 1) == 0;
                                          v198 = v195 >> 1;
                                          if ( (v195 & 1) != 0 )
                                            v195 = -128629065;
                                          else
                                            v195 >>= 1;
                                          if ( !v197 )
                                            v195 ^= v198;
                                          --v196;
                                        }
                                        while ( v196 );
                                        v2016[i23] = v195;
                                      }
                                      v199 = 0;
                                      v200 = -1;
                                      do
                                      {
                                        v201 = *(unsigned __int8 *)(v1984 + v199++);
                                        v200 = (v2016[v201 ^ (unsigned __int8)v200] ^ (v200 >> 8)) + 16;
                                      }
                                      while ( v199 != 4 );
                                      v202 = ~v200;
                                      switch ( v193 )
                                      {
                                        case 0u:
                                        case 1u:
                                        case 2u:
                                          v203 = 0;
                                          break;
                                        case 3u:
                                          v203 = 3;
                                          break;
                                        case 4u:
                                          v203 = v202 + 517762882;
                                          break;
                                        case 5u:
                                          v203 = v202 + 517762880;
                                          break;
                                        case 6u:
                                          v203 = 7;
                                          break;
                                        case 7u:
                                          v203 = 6;
                                          break;
                                        default:
                                          v203 = v193 + 15;
                                          break;
                                      }
                                      v1990 = v203 % 16;
                                    }
                                    v2016[0] = -1523182318;
                                    LOBYTE(v2016[1]) = 0;
                                    v204 = strlen((const char *)v2016);
                                    v205 = *v1989;
                                    v206 = (_BYTE *)*((_DWORD *)v1988 - 49);
                                    v207 = v204;
                                    if ( v204
                                      && (v208 = v204 + 1, v208 > v207)
                                      && (v209 = malloc(v208), (v1986 = (unsigned int)v209) != 0) )
                                    {
                                      (*(void (__fastcall **)(void *, _DWORD *, size_t))(v205 + 24))(v209, v2016, v207);
                                      *(_BYTE *)(v1986 + v207) = 0;
                                    }
                                    else
                                    {
                                      v207 = 0;
                                      v1986 = (unsigned int)v206;
                                    }
                                    v2015 = (_BYTE *)&loc_A65562;
                                    v210 = strlen((const char *)&v2015);
                                    v211 = *v1989;
                                    v212 = v210;
                                    if ( v210
                                      && (v213 = v210 + 1, v213 > v212)
                                      && (v214 = malloc(v213), (v215 = v214) != 0) )
                                    {
                                      (*(void (__fastcall **)(_BYTE *, char **, unsigned int))(v211 + 24))(
                                        v214,
                                        &v2015,
                                        v212);
                                      v215[v212] = 0;
                                    }
                                    else
                                    {
                                      v212 = 0;
                                      v215 = v206;
                                    }
                                    v216 = v212 + 2;
                                    v217 = v2016[0];
                                    if ( v212 + 2 >= v212 )
                                    {
                                      v218 = v212 + 1;
                                      if ( v212 + 1 < v212 )
                                        goto LABEL_280;
                                      if ( v216 < v218 )
                                        goto LABEL_281;
                                      if ( v215 != v206 )
                                      {
                                        v219 = realloc(v215, v216);
                                        if ( !v219 )
                                          goto LABEL_281;
                                        goto LABEL_279;
                                      }
                                      if ( v216 > v218 )
                                      {
                                        v219 = malloc(v212 + 2);
                                        if ( v219 )
                                        {
                                          *v219 = 0;
LABEL_279:
                                          v215 = v219;
LABEL_280:
                                          v215[v212++] = v217;
                                          v215[v218] = 0;
                                        }
                                      }
                                    }
LABEL_281:
                                    v220 = *v1989;
                                    if ( !v1982 )
                                    {
                                      v222 = 0;
LABEL_287:
                                      v225 = v206;
                                      goto LABEL_288;
                                    }
                                    v221 = strlen(v1982);
                                    v222 = v221;
                                    if ( !v221
                                      || (v223 = v221 + 1, v223 <= v222)
                                      || (v224 = malloc(v223), (v225 = v224) == 0) )
                                    {
                                      v222 = 0;
                                      goto LABEL_287;
                                    }
                                    (*(void (__fastcall **)(_BYTE *, char *, unsigned int))(v220 + 24))(
                                      v224,
                                      v1982,
                                      v222);
                                    v225[v222] = 0;
LABEL_288:
                                    if ( v207 == 8 )
                                    {
                                      v231 = v222 + 2;
                                      v232 = BYTE1(v2016[0]);
                                      if ( v222 + 2 < v222 )
                                        goto LABEL_312;
                                      v233 = v222 + 1;
                                      if ( v222 + 1 >= v222 )
                                      {
                                        if ( v231 < v233 )
                                          goto LABEL_312;
                                        if ( v225 == v206 )
                                        {
                                          if ( v231 > v233 )
                                          {
                                            v234 = malloc(v222 + 2);
                                            if ( v234 )
                                            {
                                              *v234 = 0;
                                              goto LABEL_310;
                                            }
                                          }
LABEL_312:
                                          v230 = v222 + 8;
                                          goto LABEL_325;
                                        }
                                        v234 = realloc(v225, v231);
                                        if ( !v234 )
                                          goto LABEL_312;
LABEL_310:
                                        v225 = v234;
                                      }
                                      v225[v222++] = v232;
                                      v225[v233] = 0;
                                      goto LABEL_312;
                                    }
                                    if ( v207 == 9 )
                                    {
                                      v235 = v222 + 2;
                                      v236 = HIBYTE(v2016[0]);
                                      if ( v222 + 2 < v222 )
                                        goto LABEL_323;
                                      v237 = v222 + 1;
                                      if ( v222 + 1 >= v222 )
                                      {
                                        if ( v235 < v237 )
                                          goto LABEL_323;
                                        if ( v225 == v206 )
                                        {
                                          if ( v235 > v237 )
                                          {
                                            v238 = malloc(v222 + 2);
                                            if ( v238 )
                                            {
                                              *v238 = 0;
                                              goto LABEL_321;
                                            }
                                          }
LABEL_323:
                                          v230 = v222 + 6;
                                          goto LABEL_325;
                                        }
                                        v238 = realloc(v225, v235);
                                        if ( !v238 )
                                          goto LABEL_323;
LABEL_321:
                                        v225 = v238;
                                      }
                                      v225[v222++] = v236;
                                      v225[v237] = 0;
                                      goto LABEL_323;
                                    }
                                    if ( v207 != 7 )
                                    {
                                      v230 = v212 - 4;
                                      goto LABEL_325;
                                    }
                                    v226 = v222 + 2;
                                    v227 = BYTE1(v2015);
                                    if ( v222 + 2 >= v222 )
                                    {
                                      v228 = v222 + 1;
                                      if ( v222 + 1 < v222 )
                                        goto LABEL_300;
                                      if ( v226 >= v228 )
                                      {
                                        if ( v225 == v206 )
                                        {
                                          if ( v226 <= v228 )
                                            goto LABEL_301;
                                          v229 = malloc(v222 + 2);
                                          if ( !v229 )
                                            goto LABEL_301;
                                          *v229 = 0;
LABEL_299:
                                          v225 = v229;
LABEL_300:
                                          v225[v222++] = v227;
                                          v225[v228] = 0;
                                          goto LABEL_301;
                                        }
                                        v229 = realloc(v225, v226);
                                        if ( v229 )
                                          goto LABEL_299;
                                      }
                                    }
LABEL_301:
                                    v230 = v222 + 20;
LABEL_325:
                                    if ( v225 != v206 )
                                      free(v225);
                                    if ( v215 != v206 )
                                      free(v215);
                                    if ( (_BYTE *)v1986 != v206 )
                                      free((void *)v1986);
                                    while ( v230 < v1990 )
                                    {
                                      *(_BYTE *)(v1984 + v230) = v1982[v230];
                                      ++v230;
                                    }
                                    v1982 = (char *)*((_DWORD *)v1988 - 51);
                                    v239 = *(_DWORD *)v1982;
                                    v240 = *(_DWORD *)(*(_DWORD *)v1982 + 128);
                                    if ( !v240 )
                                      v240 = *((_DWORD *)v1988 - 30);
                                    v241 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                    v242 = v240 + 84 * (*v241)++;
                                    v89[29] = v242;
                                    (*(void (__fastcall **)(unsigned int, unsigned int, int))(v239 + 4))(
                                      v242 & 0xFFFFF000,
                                      ((v242 + 4351) & 0xFFFFF000) - (v242 & 0xFFFFF000),
                                      7);
                                    v243 = *v89;
                                    v244 = v89[3];
                                    v1990 = (unsigned int)(v89 + 8);
                                    v245 = v243 & 1;
                                    v246 = v89[30];
                                    v1984 = v244;
                                    v247 = v89[29];
                                    v1986 = (unsigned int)(v89 + 4);
                                    if ( (v243 & 1) == 0 )
                                    {
                                      v303 = v243 + 8;
                                      v304 = v246 >> 2;
                                      v305 = (char *)(v1984 - v243);
                                      v1994 = v246 + v243;
                                      v306 = 0;
                                      for ( i24 = 0; ; ++i24 )
                                      {
                                        v308 = 4 * v245;
                                        if ( i24 == v304 )
                                          break;
                                        *(_DWORD *)(v1986 + 4 * v89[28]) = 4 * i24;
                                        *(_DWORD *)(v1990 + 4 * v89[28]++) = v308;
                                        v309 = *(_DWORD *)&v305[v303 - 8];
                                        if ( (v309 & 0xFE000000) == 0xFA000000 )
                                        {
                                          v310 = (_DWORD *)(&word_10 + 1);
                                        }
                                        else if ( (v309 & 0xF000000) == 0xB000000 )
                                        {
                                          v310 = (_DWORD *)&word_12;
                                        }
                                        else if ( (v309 & 0xF000000) == 0xA000000 )
                                        {
                                          v310 = (_DWORD *)(&word_12 + 1);
                                        }
                                        else if ( (v309 & 0xFF000FF) == 0x120001F )
                                        {
                                          v310 = &dword_14;
                                        }
                                        else if ( (v309 & 0xFEF0010) == 0x8F0000 )
                                        {
                                          v310 = &dword_14 + 1;
                                        }
                                        else if ( (v309 & 0xFFF0000) == 0x28F0000 )
                                        {
                                          v310 = &dword_14 + 2;
                                        }
                                        else if ( (v309 & 0xFFF0000) == 0x24F0000 )
                                        {
                                          v310 = &dword_14 + 3;
                                        }
                                        else if ( (v309 & 0xE5F0000) == 0x41F0000 )
                                        {
                                          v310 = &dword_18 + 1;
                                        }
                                        else if ( (v309 & 0xFE00FFF) == 0x1A0000F )
                                        {
                                          v310 = &dword_18;
                                        }
                                        else
                                        {
                                          v310 = &dword_18 + 2;
                                        }
                                        if ( (unsigned int)v310 - 17 > 3 )
                                        {
                                          if ( v310 == (int *)((char *)&dword_14 + 1) )
                                          {
                                            for ( i25 = 12;
                                                  i25 == (unsigned __int16)v309 >> 12
                                               || i25 == (*(_DWORD *)&v305[v303 - 8] & 0xF);
                                                  --i25 )
                                            {
                                              ;
                                            }
                                            v245 += 6;
                                            *(_DWORD *)(v247 + v308) = (i25 << 12) | 0xE52D0004;
                                            v316 = (_DWORD *)(v308 + v247);
                                            v316[2] = v309 & 0xFFF0FFFF | (i25 << 16);
                                            v316[5] = v303;
                                            v316[3] = (i25 << 12) | 0xE49D0004;
                                            v316[1] = (i25 << 12) | 0xE59F0008;
                                            v316[4] = -493883392;
                                          }
                                          else if ( (unsigned int)v310 - 22 > 3 )
                                          {
                                            ++v245;
                                            *(_DWORD *)(v247 + v308) = v309;
                                          }
                                          else
                                          {
                                            if ( (unsigned int)v310 - 22 <= 1 || v310 == (int *)((char *)&dword_18 + 1) )
                                            {
                                              v317 = *(_DWORD *)&v305[v303 - 8] & 0xFFF;
                                              if ( v310 == (int *)((char *)&dword_14 + 2) )
                                              {
                                                v306 = v317 + v303;
                                              }
                                              else if ( v310 == (int *)((char *)&dword_14 + 3) )
                                              {
                                                v306 = v303 - v317;
                                              }
                                              else if ( v310 == (int *)((char *)&dword_18 + 1) )
                                              {
                                                if ( (v309 & 0x800000) != 0 )
                                                  v306 = *(_DWORD *)(v317 + v303);
                                                else
                                                  v310 = (int *)(v303 - v317);
                                                if ( (v309 & 0x800000) == 0 )
                                                  v306 = *v310;
                                              }
                                            }
                                            else
                                            {
                                              v306 = v303;
                                            }
                                            v245 += 3;
                                            *(_DWORD *)(v247 + v308) = ((unsigned __int16)v309 >> 12 << 12) | 0xE51F0000;
                                            v318 = v308 + v247;
                                            *(_DWORD *)(v318 + 4) = -493883392;
                                            *(_DWORD *)(v318 + 8) = v306;
                                          }
                                        }
                                        else
                                        {
                                          if ( (unsigned int)v310 - 17 <= 1 )
                                          {
                                            ++v245;
                                            *(_DWORD *)(v247 + v308) = -493887484;
                                          }
                                          *(_DWORD *)(v247 + 4 * v245) = -450891772;
                                          if ( v310 == (int *)((char *)&word_10 + 1) )
                                          {
                                            v311 = v309 & 0x1000000;
                                            v312 = (4 * (v309 & 0xFFFFFF)) | ((v309 & 0x1000000u) >> 23);
                                          }
                                          else
                                          {
                                            v311 = (int)v310 - 18;
                                            if ( (unsigned int)v310 - 18 > 1 )
                                              v312 = 0;
                                            else
                                              v312 = v309 & 0xFFFFFF;
                                            if ( (unsigned int)v310 - 18 <= 1 )
                                              v312 *= 4;
                                          }
                                          v313 = 4 * v245 + v247;
                                          if ( v312 >> 25 )
                                            v312 |= 0xFC000000;
                                          v314 = v310 == (int *)((char *)&word_10 + 1);
                                          if ( v310 == (int *)((char *)&word_10 + 1) )
                                            v311 = v303 + 1;
                                          else
                                            v310 = (int *)(v312 + v303);
                                          if ( v314 )
                                            v310 = (int *)(v312 + v311);
                                          v245 += 2;
                                          *(_DWORD *)(v313 + 4) = v310;
                                        }
                                        v303 += 4;
                                      }
                                      goto LABEL_509;
                                    }
                                    v248 = 0;
                                    v249 = v243 + 3;
                                    v250 = 0;
                                    v1990 = v246 >> 1;
                                    do
                                    {
                                      v251 = *(unsigned __int16 *)(v1984 + 2 * v250);
                                      if ( (unsigned int)((v251 >> 11) - 29) <= 2 )
                                      {
                                        v1986 = v250 + 2;
                                        if ( v250 + 2 > v1990 )
                                          break;
                                        v252 = *(unsigned __int16 *)(2 * v250 + v1984 + 2);
                                        v253 = v247 + 2 * v248;
                                        v254 = v252 | (v251 << 16);
                                        v255 = v254 & 0xF800D000;
                                        if ( (v254 & 0xF800D000) == 0xF000C000 )
                                        {
                                          v256 = 8;
                                        }
                                        else
                                        {
                                          switch ( v255 )
                                          {
                                            case 0xF000D000:
                                              v256 = 9;
                                              break;
                                            case 0xF0008000:
                                              v256 = 10;
                                              break;
                                            case 0xF0009000:
                                              v256 = 11;
                                              break;
                                            default:
                                              if ( (v254 & 0xFBFF8000) == 0xF2AF0000 )
                                              {
                                                v256 = 12;
                                              }
                                              else if ( (v254 & 0xFBFF8000) == 0xF20F0000 )
                                              {
                                                v256 = 13;
                                              }
                                              else if ( (v254 & 0xFF7F0000) == 0xF85F0000 )
                                              {
                                                v256 = 14;
                                              }
                                              else if ( (v252 & 0xFFFF00F0 | (v251 << 16)) == 0xE8DF0000 )
                                              {
                                                v256 = 15;
                                              }
                                              else if ( (v252 & 0xFFFF00F0 | (v251 << 16)) == 0xE8DF0010 )
                                              {
                                                v256 = 16;
                                              }
                                              else
                                              {
                                                v256 = 26;
                                              }
                                              break;
                                          }
                                        }
                                        v1996 = v256 - 8;
                                        if ( (unsigned int)(v256 - 8) > 3 )
                                        {
                                          if ( (unsigned int)(v256 - 12) > 2 )
                                          {
                                            if ( (unsigned int)(v256 - 15) > 1 )
                                            {
                                              *(_WORD *)(v247 + 2 * v248) = v251;
                                              v264 = 2;
                                              *(_WORD *)(v253 + 2) = v252;
                                            }
                                            else
                                            {
                                              v272 = v252 & 0xF;
                                              for ( i26 = 7; i26 == v272; --i26 )
                                                ;
                                              for ( i27 = 7; i27 == v272 || i27 == i26; --i27 )
                                                ;
                                              v275 = 1 << i27;
                                              *(_WORD *)(v247 + 2 * v248) = v275 | 0xB400;
                                              *(_WORD *)(v253 + 6) = i26 | 0xEB00;
                                              v276 = (_WORD)i26 << 8;
                                              *(_WORD *)(v253 + 2) = ((_WORD)i26 << 8) | 0x4805;
                                              v277 = i27;
                                              *(_WORD *)(v253 + 4) = i27 | (8 * v272) | 0x4600;
                                              v278 = (_WORD)i27 << 8;
                                              v279 = 8 * i27;
                                              if ( v256 == 15 )
                                              {
                                                *(_WORD *)(v253 + 8) = v278 | v277;
                                                v280 = v277 | 0x7800;
                                              }
                                              else
                                              {
                                                *(_WORD *)(v253 + 8) = v277 | 0x40 | v278;
                                                v280 = v277 | 0x8800;
                                              }
                                              *(_WORD *)(v253 + 10) = v279 | v280;
                                              *(_WORD *)(v253 + 14) = v277 | v276 | 0x40;
                                              *(_WORD *)(v253 + 18) = v275 | 0xBC00;
                                              *(_WORD *)(v253 + 12) = i26 | 0xEB00;
                                              *(_WORD *)(v253 + 22) = -16640;
                                              v264 = 14;
                                              *(_WORD *)(v253 + 16) = v276 | 0x3001;
                                              *(_WORD *)(v253 + 20) = (8 * i26) | 0x4700;
                                              *(_DWORD *)(v253 + 24) = v249;
                                            }
                                          }
                                          else
                                          {
                                            if ( v256 == 14 )
                                            {
                                              v265 = (int)v252 >> 12;
                                              v43 = (v251 & 0x80) == 0;
                                              v269 = v249 & 0xFFFFFFFC;
                                              v270 = v252 & 0xFFF;
                                              if ( v43 )
                                                v271 = (unsigned int *)(v269 - v270);
                                              else
                                                v271 = (unsigned int *)(v270 + v269);
                                              v268 = *v271;
                                            }
                                            else
                                            {
                                              v265 = (v252 >> 8) & 0xF;
                                              v266 = (v254 << 27)
                                                   | (v252 >> 12 << 30)
                                                   | ((unsigned int)v251 >> 10 << 31);
                                              v267 = v249 & 0xFFFFFFFC;
                                              if ( v256 == 12 )
                                                v268 = v266 + v267;
                                              else
                                                v268 = v267 - v266;
                                            }
                                            *(_WORD *)(v247 + 2 * v248) = ((_WORD)v265 << 8) | 0x4800;
                                            *(_WORD *)(v253 + 4) = v268;
                                            v264 = 4;
                                            *(_WORD *)(v253 + 2) = -8191;
                                            *(_WORD *)(v253 + 6) = HIWORD(v268);
                                          }
                                          goto LABEL_402;
                                        }
                                        v2000 = (v252 >> 11) & 1;
                                        v257 = ((unsigned int)v251 >> 10) & 1;
                                        v1994 = (v252 >> 13) & 1;
                                        v258 = v1994 == v257;
                                        v1981 = v2000 == v257;
                                        if ( v1996 <= 1 )
                                        {
                                          *(_WORD *)(v247 + 2 * v248) = -3569;
                                          *(_WORD *)(v253 + 2) = 3593;
                                          goto LABEL_363;
                                        }
                                        if ( v256 == 10 )
                                        {
                                          v1996 = 4 * (v251 & 0x3C0);
                                          *(_WORD *)(v247 + 2 * v248) = (4 * (v251 & 0x3C0)) | 0xD000;
                                          *(_WORD *)(v253 + 2) = -8189;
LABEL_363:
                                          v259 = 2;
                                        }
                                        else
                                        {
                                          v259 = 0;
                                        }
                                        v1980 = 2 * v259;
                                        *(_WORD *)(v253 + 2 * v259) = -1825;
                                        *(_WORD *)(2 * v259 + v253 + 2) = -4096;
                                        if ( v256 == 8 )
                                        {
                                          v260 = (2 * (v252 & 0x7FE))
                                               | (v257 << 24)
                                               | ((v251 & 0x3FF) << 12)
                                               | (v258 << 23)
                                               | (v1981 << 22);
                                          if ( v257 )
                                            v260 |= 0xFE000000;
                                          v261 = v260 + v249;
LABEL_378:
                                          v264 = v259 + 4;
                                          *(_DWORD *)(v253 + v1980 + 4) = v261;
LABEL_402:
                                          v249 += 4;
                                          v248 += v264;
                                          v250 = v1986;
                                          continue;
                                        }
                                        v262 = 2 * (v252 & 0x7FF);
                                        if ( v256 == 9 )
                                        {
                                          v263 = v262
                                               | (v257 << 24)
                                               | ((v251 & 0x3FF) << 12)
                                               | (v258 << 23)
                                               | (v1981 << 22);
LABEL_375:
                                          if ( v257 )
                                            v263 |= 0xFE000000;
                                        }
                                        else
                                        {
                                          if ( v256 != 10 )
                                          {
                                            v263 = v262
                                                 | (v257 << 24)
                                                 | ((v251 & 0x3FF) << 12)
                                                 | (v258 << 23)
                                                 | (v1981 << 22);
                                            goto LABEL_375;
                                          }
                                          v263 = v262
                                               | (v257 << 20)
                                               | ((v251 & 0x3F) << 12)
                                               | (v2000 << 19)
                                               | (v1994 << 18);
                                          if ( v257 )
                                            v263 = ~(~(v263 << 11) >> 11);
                                        }
                                        v261 = v263 + v249 + 1;
                                        goto LABEL_378;
                                      }
                                      v281 = (_WORD *)(v247 + 2 * v248);
                                      if ( (v251 & 0xF000) == 0xD000 )
                                      {
                                        v285 = 2 * (unsigned __int8)v251;
                                        if ( v285 >> 8 )
                                          v285 |= 0xFFFFFF00;
                                        v288 = v285 + v249;
                                        *(_WORD *)(v247 + 2 * v248) = v251 & 0xFF00;
                                        v281[1] = -8189;
                                        v290 = 2;
                                      }
                                      else
                                      {
                                        v282 = v251 & 0xF800;
                                        if ( v282 == 57344 )
                                        {
                                          v286 = v251 & 0x7FF;
                                          v287 = 2 * v286;
                                          if ( (unsigned int)(2 * v286) >> 11 )
                                            v287 = ~((unsigned int)~(v286 << 22) >> 21);
                                          v288 = v287 + v249;
                                        }
                                        else
                                        {
                                          if ( (v251 & 0xFFFFFFF8) != 0x4778 )
                                          {
                                            v283 = v251 & 0xFF78;
                                            if ( v283 == 17528 )
                                            {
                                              for ( i28 = 7;
                                                    i28 == (v251 & 7 | ((unsigned __int8)(v251 & 0x80) >> 4));
                                                    --i28 )
                                              {
                                                ;
                                              }
                                              v293 = 1 << i28;
                                              *(_WORD *)(v247 + 2 * v248) = v293 | 0xB400;
                                              v281[2] = v251 & 0xFF87 | (8 * i28);
                                              v281[6] = v249;
                                              v281[1] = ((_WORD)i28 << 8) | 0x4802;
                                              v281[3] = v293 | 0xBC00;
                                              v281[4] = -8190;
                                              v281[5] = -16640;
                                              v281[7] = HIWORD(v249);
                                              v292 = 8;
                                            }
                                            else
                                            {
                                              if ( v283 == 18040 )
                                              {
                                                v284 = 4;
                                              }
                                              else if ( v282 == 40960 )
                                              {
                                                v284 = 5;
                                              }
                                              else if ( v282 == 18432 )
                                              {
                                                v284 = 6;
                                              }
                                              else if ( (v251 & 0xF500) == 0xB100 )
                                              {
                                                v284 = 7;
                                              }
                                              else
                                              {
                                                v284 = 26;
                                              }
                                              if ( (unsigned int)(v284 - 4) > 2 )
                                              {
                                                if ( v284 == 7 )
                                                {
                                                  *(_WORD *)(v247 + 2 * v248) = v251 & 0xFD07;
                                                  v300 = (((unsigned __int16)(v251 & 0x200) >> 3)
                                                        | ((unsigned __int8)(v251 & 0xF8) >> 2))
                                                       + v249
                                                       + 1;
                                                  v281[2] = -1825;
                                                  v281[4] = v300;
                                                  v281[3] = -4096;
                                                  v292 = 6;
                                                  v281[1] = -8189;
                                                  v281[5] = HIWORD(v300);
                                                }
                                                else
                                                {
                                                  *(_WORD *)(v247 + 2 * v248) = v251;
                                                  v281[1] = -16640;
                                                  v292 = 2;
                                                }
                                              }
                                              else
                                              {
                                                if ( v284 == 4 )
                                                {
                                                  LOWORD(v294) = *(_WORD *)(v1984 + 2 * v250) & 7;
                                                  v295 = v249;
                                                }
                                                else
                                                {
                                                  v296 = v284 == 5;
                                                  v297 = v249 & 0xFFFFFFFC;
                                                  v298 = (unsigned __int8)v251;
                                                  v299 = v251 & 0x700;
                                                  if ( v296 )
                                                    v295 = v298 + v297;
                                                  else
                                                    v295 = *(_DWORD *)(v297 + 4 * v298);
                                                  v294 = v299 >> 8;
                                                  if ( v296 )
                                                    v295 *= 4;
                                                }
                                                *(_WORD *)(v247 + 2 * v248) = ((_WORD)v294 << 8) | 0x4800;
                                                v281[2] = v295;
                                                v292 = 4;
                                                v281[1] = -8191;
                                                v281[3] = HIWORD(v295);
                                              }
                                            }
                                            goto LABEL_441;
                                          }
                                          v288 = v249;
                                        }
                                        v290 = 0;
                                      }
                                      v281[v290] = -1825;
                                      v291 = &v281[v290];
                                      v292 = v290 + 4;
                                      v291[2] = v288;
                                      v291[1] = -4096;
                                      v291[3] = HIWORD(v288);
LABEL_441:
                                      v249 += 2;
                                      v248 += v292;
                                      ++v250;
                                    }
                                    while ( v250 < v1990 );
LABEL_443:
                                    v301 = v243 + 2 * v250;
                                    *(_WORD *)(v247 + 2 * v248) = -1825;
                                    v302 = (_WORD *)(v247 + 2 * v248);
                                    v302[2] = v301;
                                    v302[1] = -4096;
                                    v302[3] = HIWORD(v301);
LABEL_510:
                                    operator delete((void *)v89[3]);
                                    v89[3] = 0;
                                    v324 = v1982;
                                    (*(void (__fastcall **)(unsigned int, unsigned int))(*(_DWORD *)v1982 + 216))(
                                      v89[29],
                                      v89[29] + 256);
                                    if ( *v89 )
                                    {
                                      (*(void (__fastcall **)(unsigned int, int, int))(*(_DWORD *)v324 + 4))(
                                        *v89 & 0xFFFFF000,
                                        0x2000,
                                        7);
                                      v325 = *v89;
                                      if ( (*v89 & 1) != 0 )
                                      {
                                        v326 = *v89 & 2;
                                        if ( (v325 & 2) != 0 )
                                        {
                                          *(_WORD *)(v325 & 0xFFFFFFFE) = -16640;
                                          v326 = 1;
                                        }
                                        v327 = 2 * v326;
                                        *(_WORD *)((*v89 & 0xFFFFFFFE) + 2 * v326) = -1825;
                                        *(_WORD *)((*v89 & 0xFFFFFFFE) + 2 * v326 + 2) = -4096;
                                        *(_WORD *)(v327 + (*v89 & 0xFFFFFFFE) + 4) = v89[1];
                                        *(_WORD *)(v327 + (*v89 & 0xFFFFFFFE) + 6) = *((_WORD *)v89 + 3);
                                      }
                                      else
                                      {
                                        *(_DWORD *)v325 = -450891772;
                                        *(_DWORD *)(*v89 + 4) = v89[1];
                                      }
                                      v328 = (unsigned int *)v89[2];
                                      if ( v328 )
                                      {
                                        v329 = v89[29];
                                        if ( (*v89 & 1) != 0 )
                                          v329 |= 1u;
                                        *v328 = v329;
                                      }
                                      (*(void (__fastcall **)(unsigned int, unsigned int, _DWORD))(*(_DWORD *)v1982 + 216))(
                                        *v89 & 0xFFFFFFFE,
                                        v89[30] + (*v89 & 0xFFFFFFFE),
                                        0);
                                    }
LABEL_521:
                                    operator delete(v89);
LABEL_522:
                                    ++v1991;
                                  }
                                }
                                if ( v1995 == (_BYTE *)&jpt_9DA69C + 2 )
                                {
                                  v1991 = 0;
                                  v1983 = (char *)&v2015;
                                  while ( 1 )
                                  {
                                    if ( v1991 >= *((_DWORD *)v1993 + 8) )
                                      goto LABEL_2207;
                                    v330 = &v1993[12 * v1991];
                                    v331 = *((_DWORD *)v330 + 11);
                                    if ( !v331 )
                                    {
                                      v332 = *((_DWORD *)v330 + 10);
                                      if ( v332 )
                                        **((_DWORD **)v1988 - 28) = &v1998[v332];
                                      v333 = v1997 + *(_DWORD *)&v1993[12 * v1991 + 36];
                                      v334 = *((_DWORD *)v1988 - 27);
                                      if ( !v333 )
                                        goto LABEL_1087;
                                      v335 = (unsigned int *)operator new(0x7Cu);
                                      v336 = v335;
                                      if ( !v335 )
                                        goto LABEL_1087;
                                      (*(void (__fastcall **)(unsigned int *, _DWORD, int))(*v1989 + 20))(v335, 0, 124);
                                      v337 = v1988;
                                      *v336 = v333;
                                      v336[1] = v334;
                                      if ( (v333 & 1) != 0 )
                                        v338 = 12;
                                      else
                                        v338 = 8;
                                      v339 = *((_DWORD *)v337 - 26);
                                      v336[30] = v338;
                                      v336[2] = v339;
                                      v340 = operator new[](v338);
                                      v1984 = v340;
                                      v336[3] = v340;
                                      if ( !v340 )
                                        goto LABEL_1086;
                                      v341 = v336[30];
                                      v1982 = (char *)(*v336 & 0xFFFFFFFE);
                                      v1990 = v341;
                                      if ( (char *)v1984 == v1982 )
                                      {
                                        memset(v2016, 0, sizeof(v2016));
                                        for ( i29 = 0; i29 != 256; ++i29 )
                                        {
                                          v343 = i29;
                                          v344 = 8;
                                          do
                                          {
                                            v345 = (v343 & 1) == 0;
                                            v346 = v343 >> 1;
                                            if ( (v343 & 1) != 0 )
                                              v343 = -128629065;
                                            else
                                              v343 >>= 1;
                                            if ( !v345 )
                                              v343 ^= v346;
                                            --v344;
                                          }
                                          while ( v344 );
                                          v2016[i29] = v343;
                                        }
                                        v347 = 0;
                                        v348 = -1;
                                        do
                                        {
                                          v349 = *(unsigned __int8 *)(v1984 + v347++);
                                          v348 = (v2016[v349 ^ (unsigned __int8)v348] ^ (v348 >> 8)) + 16;
                                        }
                                        while ( v347 != 4 );
                                        v350 = ~v348;
                                        switch ( v341 )
                                        {
                                          case 0u:
                                          case 1u:
                                          case 2u:
                                            v351 = 0;
                                            break;
                                          case 3u:
                                            v351 = 3;
                                            break;
                                          case 4u:
                                            v351 = v350 + 517762882;
                                            break;
                                          case 5u:
                                            v351 = v350 + 517762880;
                                            break;
                                          case 6u:
                                            v351 = 7;
                                            break;
                                          case 7u:
                                            v351 = 6;
                                            break;
                                          default:
                                            v351 = v341 + 15;
                                            break;
                                        }
                                        v1990 = v351 % 16;
                                      }
                                      v2016[0] = -1523182318;
                                      LOBYTE(v2016[1]) = 0;
                                      v352 = strlen((const char *)v2016);
                                      v353 = *v1989;
                                      v354 = (_BYTE *)*((_DWORD *)v1988 - 49);
                                      v355 = v352;
                                      if ( v352
                                        && (v356 = v352 + 1, v356 > v355)
                                        && (v357 = malloc(v356), (v1986 = (unsigned int)v357) != 0) )
                                      {
                                        (*(void (__fastcall **)(void *, _DWORD *, size_t))(v353 + 24))(
                                          v357,
                                          v2016,
                                          v355);
                                        *(_BYTE *)(v1986 + v355) = 0;
                                      }
                                      else
                                      {
                                        v355 = 0;
                                        v1986 = (unsigned int)v354;
                                      }
                                      v2015 = (_BYTE *)&loc_A65562;
                                      v358 = strlen((const char *)&v2015);
                                      v359 = *v1989;
                                      v360 = v358;
                                      if ( v358
                                        && (v361 = v358 + 1, v361 > v360)
                                        && (v362 = malloc(v361), (v363 = v362) != 0) )
                                      {
                                        (*(void (__fastcall **)(_BYTE *, char **, unsigned int))(v359 + 24))(
                                          v362,
                                          &v2015,
                                          v360);
                                        v363[v360] = 0;
                                      }
                                      else
                                      {
                                        v360 = 0;
                                        v363 = v354;
                                      }
                                      v364 = v360 + 2;
                                      v365 = v2016[0];
                                      if ( v360 + 2 < v360 )
                                        goto LABEL_574;
                                      v366 = v360 + 1;
                                      if ( v360 + 1 >= v360 )
                                      {
                                        if ( v364 < v366 )
                                          goto LABEL_574;
                                        if ( v363 == v354 )
                                        {
                                          if ( v364 > v366 )
                                          {
                                            v367 = malloc(v360 + 2);
                                            if ( v367 )
                                            {
                                              *v367 = 0;
                                              goto LABEL_572;
                                            }
                                          }
LABEL_574:
                                          v368 = *v1989;
                                          if ( v1982 )
                                          {
                                            v369 = strlen(v1982);
                                            v370 = v369;
                                            if ( v369 )
                                            {
                                              v371 = v369 + 1;
                                              if ( v371 > v370 )
                                              {
                                                v372 = malloc(v371);
                                                v373 = v372;
                                                if ( v372 )
                                                {
                                                  (*(void (__fastcall **)(_BYTE *, char *, unsigned int))(v368 + 24))(
                                                    v372,
                                                    v1982,
                                                    v370);
                                                  v373[v370] = 0;
                                                  goto LABEL_581;
                                                }
                                              }
                                            }
                                            v370 = 0;
                                          }
                                          else
                                          {
                                            v370 = 0;
                                          }
                                          v373 = v354;
LABEL_581:
                                          if ( v355 != 8 )
                                          {
                                            if ( v355 != 9 )
                                            {
                                              if ( v355 != 7 )
                                              {
                                                v378 = v360 - 4;
                                                goto LABEL_618;
                                              }
                                              v374 = v370 + 2;
                                              v375 = BYTE1(v2015);
                                              if ( v370 + 2 < v370 )
                                                goto LABEL_594;
                                              v376 = v370 + 1;
                                              if ( v370 + 1 >= v370 )
                                              {
                                                if ( v374 < v376 )
                                                  goto LABEL_594;
                                                if ( v373 == v354 )
                                                {
                                                  if ( v374 > v376 )
                                                  {
                                                    v377 = malloc(v370 + 2);
                                                    if ( v377 )
                                                    {
                                                      *v377 = 0;
                                                      goto LABEL_592;
                                                    }
                                                  }
LABEL_594:
                                                  v378 = v370 + 20;
LABEL_618:
                                                  if ( v373 != v354 )
                                                    free(v373);
                                                  if ( v363 != v354 )
                                                    free(v363);
                                                  if ( (_BYTE *)v1986 != v354 )
                                                    free((void *)v1986);
                                                  while ( v378 < v1990 )
                                                  {
                                                    *(_BYTE *)(v1984 + v378) = v1982[v378];
                                                    ++v378;
                                                  }
                                                  v1982 = (char *)*((_DWORD *)v1988 - 51);
                                                  v387 = *(_DWORD *)v1982;
                                                  v388 = *(_DWORD *)(*(_DWORD *)v1982 + 128);
                                                  if ( !v388 )
                                                    v388 = *((_DWORD *)v1988 - 30);
                                                  v389 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                                  v390 = v388 + 84 * (*v389)++;
                                                  v336[29] = v390;
                                                  (*(void (__fastcall **)(unsigned int, unsigned int, int))(v387 + 4))(
                                                    v390 & 0xFFFFF000,
                                                    ((v390 + 4351) & 0xFFFFF000) - (v390 & 0xFFFFF000),
                                                    7);
                                                  v391 = *v336;
                                                  v392 = v336[3];
                                                  v1990 = (unsigned int)(v336 + 8);
                                                  v393 = v391 & 1;
                                                  v394 = v336[30];
                                                  v1984 = v392;
                                                  v395 = v336[29];
                                                  v1986 = (unsigned int)(v336 + 4);
                                                  if ( (v391 & 1) == 0 )
                                                  {
                                                    v449 = v391 + 8;
                                                    v450 = v394 >> 2;
                                                    v451 = (char *)(v1984 - v391);
                                                    v1994 = v394 + v391;
                                                    v452 = 0;
                                                    for ( i30 = 0; ; ++i30 )
                                                    {
                                                      v454 = 4 * v393;
                                                      if ( i30 == v450 )
                                                        break;
                                                      *(_DWORD *)(v1986 + 4 * v336[28]) = 4 * i30;
                                                      *(_DWORD *)(v1990 + 4 * v336[28]++) = v454;
                                                      v455 = *(_DWORD *)&v451[v449 - 8];
                                                      if ( (v455 & 0xFE000000) == 0xFA000000 )
                                                      {
                                                        v456 = (_DWORD *)(&word_10 + 1);
                                                      }
                                                      else if ( (v455 & 0xF000000) == 0xB000000 )
                                                      {
                                                        v456 = (_DWORD *)&word_12;
                                                      }
                                                      else if ( (v455 & 0xF000000) == 0xA000000 )
                                                      {
                                                        v456 = (_DWORD *)(&word_12 + 1);
                                                      }
                                                      else if ( (v455 & 0xFF000FF) == 0x120001F )
                                                      {
                                                        v456 = &dword_14;
                                                      }
                                                      else if ( (v455 & 0xFEF0010) == 0x8F0000 )
                                                      {
                                                        v456 = &dword_14 + 1;
                                                      }
                                                      else if ( (v455 & 0xFFF0000) == 0x28F0000 )
                                                      {
                                                        v456 = &dword_14 + 2;
                                                      }
                                                      else if ( (v455 & 0xFFF0000) == 0x24F0000 )
                                                      {
                                                        v456 = &dword_14 + 3;
                                                      }
                                                      else if ( (v455 & 0xE5F0000) == 0x41F0000 )
                                                      {
                                                        v456 = &dword_18 + 1;
                                                      }
                                                      else if ( (v455 & 0xFE00FFF) == 0x1A0000F )
                                                      {
                                                        v456 = &dword_18;
                                                      }
                                                      else
                                                      {
                                                        v456 = &dword_18 + 2;
                                                      }
                                                      if ( (unsigned int)v456 - 17 > 3 )
                                                      {
                                                        if ( v456 == (int *)((char *)&dword_14 + 1) )
                                                        {
                                                          for ( i31 = 12;
                                                                i31 == (unsigned __int16)v455 >> 12
                                                             || i31 == (*(_DWORD *)&v451[v449 - 8] & 0xF);
                                                                --i31 )
                                                          {
                                                            ;
                                                          }
                                                          v393 += 6;
                                                          *(_DWORD *)(v395 + v454) = (i31 << 12) | 0xE52D0004;
                                                          v462 = (_DWORD *)(v454 + v395);
                                                          v462[2] = v455 & 0xFFF0FFFF | (i31 << 16);
                                                          v462[5] = v449;
                                                          v462[3] = (i31 << 12) | 0xE49D0004;
                                                          v462[1] = (i31 << 12) | 0xE59F0008;
                                                          v462[4] = -493883392;
                                                        }
                                                        else if ( (unsigned int)v456 - 22 > 3 )
                                                        {
                                                          ++v393;
                                                          *(_DWORD *)(v395 + v454) = v455;
                                                        }
                                                        else
                                                        {
                                                          if ( (unsigned int)v456 - 22 <= 1
                                                            || v456 == (int *)((char *)&dword_18 + 1) )
                                                          {
                                                            v463 = *(_DWORD *)&v451[v449 - 8] & 0xFFF;
                                                            if ( v456 == (int *)((char *)&dword_14 + 2) )
                                                            {
                                                              v452 = v463 + v449;
                                                            }
                                                            else if ( v456 == (int *)((char *)&dword_14 + 3) )
                                                            {
                                                              v452 = v449 - v463;
                                                            }
                                                            else if ( v456 == (int *)((char *)&dword_18 + 1) )
                                                            {
                                                              if ( (v455 & 0x800000) != 0 )
                                                                v452 = *(_DWORD *)(v463 + v449);
                                                              else
                                                                v456 = (int *)(v449 - v463);
                                                              if ( (v455 & 0x800000) == 0 )
                                                                v452 = *v456;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            v452 = v449;
                                                          }
                                                          v393 += 3;
                                                          *(_DWORD *)(v395 + v454) = ((unsigned __int16)v455 >> 12 << 12)
                                                                                   | 0xE51F0000;
                                                          v464 = v454 + v395;
                                                          *(_DWORD *)(v464 + 4) = -493883392;
                                                          *(_DWORD *)(v464 + 8) = v452;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        if ( (unsigned int)v456 - 17 <= 1 )
                                                        {
                                                          ++v393;
                                                          *(_DWORD *)(v395 + v454) = -493887484;
                                                        }
                                                        *(_DWORD *)(v395 + 4 * v393) = -450891772;
                                                        if ( v456 == (int *)((char *)&word_10 + 1) )
                                                        {
                                                          v457 = v455 & 0x1000000;
                                                          v458 = (4 * (v455 & 0xFFFFFF)) | ((v455 & 0x1000000u) >> 23);
                                                        }
                                                        else
                                                        {
                                                          v457 = (int)v456 - 18;
                                                          if ( (unsigned int)v456 - 18 > 1 )
                                                            v458 = 0;
                                                          else
                                                            v458 = v455 & 0xFFFFFF;
                                                          if ( (unsigned int)v456 - 18 <= 1 )
                                                            v458 *= 4;
                                                        }
                                                        v459 = 4 * v393 + v395;
                                                        if ( v458 >> 25 )
                                                          v458 |= 0xFC000000;
                                                        v460 = v456 == (int *)((char *)&word_10 + 1);
                                                        if ( v456 == (int *)((char *)&word_10 + 1) )
                                                          v457 = v449 + 1;
                                                        else
                                                          v456 = (int *)(v458 + v449);
                                                        if ( v460 )
                                                          v456 = (int *)(v458 + v457);
                                                        v393 += 2;
                                                        *(_DWORD *)(v459 + 4) = v456;
                                                      }
                                                      v449 += 4;
                                                    }
LABEL_1074:
                                                    *(_DWORD *)(v395 + v454) = -450891772;
                                                    *(_DWORD *)(v454 + v395 + 4) = v1994;
                                                    goto LABEL_1075;
                                                  }
                                                  v396 = 0;
                                                  v397 = v391 + 3;
                                                  v398 = 0;
                                                  v1990 = v394 >> 1;
                                                  while ( 2 )
                                                  {
                                                    v399 = *(unsigned __int16 *)(v1984 + 2 * v398);
                                                    if ( (unsigned int)((v399 >> 11) - 29) <= 2 )
                                                    {
                                                      v1986 = v398 + 2;
                                                      if ( v398 + 2 > v1990 )
                                                        goto LABEL_1010;
                                                      v400 = *(unsigned __int16 *)(2 * v398 + v1984 + 2);
                                                      v401 = v395 + 2 * v396;
                                                      v402 = v400 | (v399 << 16);
                                                      v403 = v402 & 0xF800D000;
                                                      if ( (v402 & 0xF800D000) == 0xF000C000 )
                                                      {
                                                        v404 = 8;
                                                      }
                                                      else
                                                      {
                                                        switch ( v403 )
                                                        {
                                                          case 0xF000D000:
                                                            v404 = 9;
                                                            break;
                                                          case 0xF0008000:
                                                            v404 = 10;
                                                            break;
                                                          case 0xF0009000:
                                                            v404 = 11;
                                                            break;
                                                          default:
                                                            if ( (v402 & 0xFBFF8000) == 0xF2AF0000 )
                                                            {
                                                              v404 = 12;
                                                            }
                                                            else if ( (v402 & 0xFBFF8000) == 0xF20F0000 )
                                                            {
                                                              v404 = 13;
                                                            }
                                                            else if ( (v402 & 0xFF7F0000) == 0xF85F0000 )
                                                            {
                                                              v404 = 14;
                                                            }
                                                            else if ( (v400 & 0xFFFF00F0 | (v399 << 16)) == 0xE8DF0000 )
                                                            {
                                                              v404 = 15;
                                                            }
                                                            else if ( (v400 & 0xFFFF00F0 | (v399 << 16)) == 0xE8DF0010 )
                                                            {
                                                              v404 = 16;
                                                            }
                                                            else
                                                            {
                                                              v404 = 26;
                                                            }
                                                            break;
                                                        }
                                                      }
                                                      v1996 = v404 - 8;
                                                      if ( (unsigned int)(v404 - 8) > 3 )
                                                      {
                                                        if ( (unsigned int)(v404 - 12) > 2 )
                                                        {
                                                          if ( (unsigned int)(v404 - 15) > 1 )
                                                          {
                                                            *(_WORD *)(v395 + 2 * v396) = v399;
                                                            v412 = 2;
                                                            *(_WORD *)(v401 + 2) = v400;
                                                          }
                                                          else
                                                          {
                                                            v420 = v400 & 0xF;
                                                            for ( i32 = 7; i32 == v420; --i32 )
                                                              ;
                                                            for ( i33 = 7; i33 == v420 || i33 == i32; --i33 )
                                                              ;
                                                            v423 = 1 << i33;
                                                            *(_WORD *)(v395 + 2 * v396) = v423 | 0xB400;
                                                            *(_WORD *)(v401 + 6) = i32 | 0xEB00;
                                                            v424 = (_WORD)i32 << 8;
                                                            *(_WORD *)(v401 + 2) = ((_WORD)i32 << 8) | 0x4805;
                                                            v425 = i33;
                                                            *(_WORD *)(v401 + 4) = i33 | (8 * v420) | 0x4600;
                                                            v426 = (_WORD)i33 << 8;
                                                            v427 = 8 * i33;
                                                            if ( v404 == 15 )
                                                            {
                                                              *(_WORD *)(v401 + 8) = v426 | v425;
                                                              v428 = v425 | 0x7800;
                                                            }
                                                            else
                                                            {
                                                              *(_WORD *)(v401 + 8) = v425 | 0x40 | v426;
                                                              v428 = v425 | 0x8800;
                                                            }
                                                            *(_WORD *)(v401 + 10) = v427 | v428;
                                                            *(_WORD *)(v401 + 14) = v425 | v424 | 0x40;
                                                            *(_WORD *)(v401 + 18) = v423 | 0xBC00;
                                                            *(_WORD *)(v401 + 12) = i32 | 0xEB00;
                                                            *(_WORD *)(v401 + 22) = -16640;
                                                            v412 = 14;
                                                            *(_WORD *)(v401 + 16) = v424 | 0x3001;
                                                            *(_WORD *)(v401 + 20) = (8 * i32) | 0x4700;
                                                            *(_DWORD *)(v401 + 24) = v397;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if ( v404 == 14 )
                                                          {
                                                            v413 = (int)v400 >> 12;
                                                            v43 = (v399 & 0x80) == 0;
                                                            v417 = v397 & 0xFFFFFFFC;
                                                            v418 = v400 & 0xFFF;
                                                            if ( v43 )
                                                              v419 = (unsigned int *)(v417 - v418);
                                                            else
                                                              v419 = (unsigned int *)(v418 + v417);
                                                            v416 = *v419;
                                                          }
                                                          else
                                                          {
                                                            v413 = (v400 >> 8) & 0xF;
                                                            v414 = (v402 << 27)
                                                                 | (v400 >> 12 << 30)
                                                                 | ((unsigned int)v399 >> 10 << 31);
                                                            v415 = v397 & 0xFFFFFFFC;
                                                            if ( v404 == 12 )
                                                              v416 = v414 + v415;
                                                            else
                                                              v416 = v415 - v414;
                                                          }
                                                          *(_WORD *)(v395 + 2 * v396) = ((_WORD)v413 << 8) | 0x4800;
                                                          *(_WORD *)(v401 + 4) = v416;
                                                          v412 = 4;
                                                          *(_WORD *)(v401 + 2) = -8191;
                                                          *(_WORD *)(v401 + 6) = HIWORD(v416);
                                                        }
                                                        goto LABEL_695;
                                                      }
                                                      v2000 = (v400 >> 11) & 1;
                                                      v405 = ((unsigned int)v399 >> 10) & 1;
                                                      v1994 = (v400 >> 13) & 1;
                                                      v406 = v1994 == v405;
                                                      v1981 = v2000 == v405;
                                                      if ( v1996 <= 1 )
                                                      {
                                                        *(_WORD *)(v395 + 2 * v396) = -3569;
                                                        *(_WORD *)(v401 + 2) = 3593;
                                                        goto LABEL_656;
                                                      }
                                                      if ( v404 == 10 )
                                                      {
                                                        v1996 = 4 * (v399 & 0x3C0);
                                                        *(_WORD *)(v395 + 2 * v396) = (4 * (v399 & 0x3C0)) | 0xD000;
                                                        *(_WORD *)(v401 + 2) = -8189;
LABEL_656:
                                                        v407 = 2;
                                                      }
                                                      else
                                                      {
                                                        v407 = 0;
                                                      }
                                                      v1980 = 2 * v407;
                                                      *(_WORD *)(v401 + 2 * v407) = -1825;
                                                      *(_WORD *)(2 * v407 + v401 + 2) = -4096;
                                                      if ( v404 == 8 )
                                                      {
                                                        v408 = (2 * (v400 & 0x7FE))
                                                             | (v405 << 24)
                                                             | ((v399 & 0x3FF) << 12)
                                                             | (v406 << 23)
                                                             | (v1981 << 22);
                                                        if ( v405 )
                                                          v408 |= 0xFE000000;
                                                        v409 = v408 + v397;
LABEL_671:
                                                        v412 = v407 + 4;
                                                        *(_DWORD *)(v401 + v1980 + 4) = v409;
LABEL_695:
                                                        v397 += 4;
                                                        v396 += v412;
                                                        v398 = v1986;
LABEL_735:
                                                        if ( v398 >= v1990 )
                                                          goto LABEL_1010;
                                                        continue;
                                                      }
                                                      v410 = 2 * (v400 & 0x7FF);
                                                      if ( v404 == 9 )
                                                      {
                                                        v411 = v410
                                                             | (v405 << 24)
                                                             | ((v399 & 0x3FF) << 12)
                                                             | (v406 << 23)
                                                             | (v1981 << 22);
LABEL_668:
                                                        if ( v405 )
                                                          v411 |= 0xFE000000;
                                                      }
                                                      else
                                                      {
                                                        if ( v404 != 10 )
                                                        {
                                                          v411 = v410
                                                               | (v405 << 24)
                                                               | ((v399 & 0x3FF) << 12)
                                                               | (v406 << 23)
                                                               | (v1981 << 22);
                                                          goto LABEL_668;
                                                        }
                                                        v411 = v410
                                                             | (v405 << 20)
                                                             | ((v399 & 0x3F) << 12)
                                                             | (v2000 << 19)
                                                             | (v1994 << 18);
                                                        if ( v405 )
                                                          v411 = ~(~(v411 << 11) >> 11);
                                                      }
                                                      v409 = v411 + v397 + 1;
                                                      goto LABEL_671;
                                                    }
                                                    break;
                                                  }
                                                  v429 = (_WORD *)(v395 + 2 * v396);
                                                  if ( (v399 & 0xF000) == 0xD000 )
                                                  {
                                                    v433 = 2 * (unsigned __int8)v399;
                                                    if ( v433 >> 8 )
                                                      v433 |= 0xFFFFFF00;
                                                    v436 = v433 + v397;
                                                    *(_WORD *)(v395 + 2 * v396) = v399 & 0xFF00;
                                                    v429[1] = -8189;
                                                    v438 = 2;
                                                  }
                                                  else
                                                  {
                                                    v430 = v399 & 0xF800;
                                                    if ( v430 == 57344 )
                                                    {
                                                      v434 = v399 & 0x7FF;
                                                      v435 = 2 * v434;
                                                      if ( (unsigned int)(2 * v434) >> 11 )
                                                        v435 = ~((unsigned int)~(v434 << 22) >> 21);
                                                      v436 = v435 + v397;
                                                    }
                                                    else
                                                    {
                                                      if ( (v399 & 0xFFFFFFF8) != 0x4778 )
                                                      {
                                                        v431 = v399 & 0xFF78;
                                                        if ( v431 == 17528 )
                                                        {
                                                          for ( i34 = 7;
                                                                i34 == (v399 & 7 | ((unsigned __int8)(v399 & 0x80) >> 4));
                                                                --i34 )
                                                          {
                                                            ;
                                                          }
                                                          v441 = 1 << i34;
                                                          *(_WORD *)(v395 + 2 * v396) = v441 | 0xB400;
                                                          v429[2] = v399 & 0xFF87 | (8 * i34);
                                                          v429[6] = v397;
                                                          v429[1] = ((_WORD)i34 << 8) | 0x4802;
                                                          v429[3] = v441 | 0xBC00;
                                                          v429[4] = -8190;
                                                          v429[5] = -16640;
                                                          v429[7] = HIWORD(v397);
                                                          v440 = 8;
                                                        }
                                                        else
                                                        {
                                                          if ( v431 == 18040 )
                                                          {
                                                            v432 = 4;
                                                          }
                                                          else if ( v430 == 40960 )
                                                          {
                                                            v432 = 5;
                                                          }
                                                          else if ( v430 == 18432 )
                                                          {
                                                            v432 = 6;
                                                          }
                                                          else if ( (v399 & 0xF500) == 0xB100 )
                                                          {
                                                            v432 = 7;
                                                          }
                                                          else
                                                          {
                                                            v432 = 26;
                                                          }
                                                          if ( (unsigned int)(v432 - 4) > 2 )
                                                          {
                                                            if ( v432 == 7 )
                                                            {
                                                              *(_WORD *)(v395 + 2 * v396) = v399 & 0xFD07;
                                                              v448 = (((unsigned __int16)(v399 & 0x200) >> 3)
                                                                    | ((unsigned __int8)(v399 & 0xF8) >> 2))
                                                                   + v397
                                                                   + 1;
                                                              v429[2] = -1825;
                                                              v429[4] = v448;
                                                              v429[3] = -4096;
                                                              v440 = 6;
                                                              v429[1] = -8189;
                                                              v429[5] = HIWORD(v448);
                                                            }
                                                            else
                                                            {
                                                              *(_WORD *)(v395 + 2 * v396) = v399;
                                                              v429[1] = -16640;
                                                              v440 = 2;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if ( v432 == 4 )
                                                            {
                                                              LOWORD(v442) = *(_WORD *)(v1984 + 2 * v398) & 7;
                                                              v443 = v397;
                                                            }
                                                            else
                                                            {
                                                              v444 = v432 == 5;
                                                              v445 = v397 & 0xFFFFFFFC;
                                                              v446 = (unsigned __int8)v399;
                                                              v447 = v399 & 0x700;
                                                              if ( v444 )
                                                                v443 = v446 + v445;
                                                              else
                                                                v443 = *(_DWORD *)(v445 + 4 * v446);
                                                              v442 = v447 >> 8;
                                                              if ( v444 )
                                                                v443 *= 4;
                                                            }
                                                            *(_WORD *)(v395 + 2 * v396) = ((_WORD)v442 << 8) | 0x4800;
                                                            v429[2] = v443;
                                                            v440 = 4;
                                                            v429[1] = -8191;
                                                            v429[3] = HIWORD(v443);
                                                          }
                                                        }
                                                        goto LABEL_734;
                                                      }
                                                      v436 = v397;
                                                    }
                                                    v438 = 0;
                                                  }
                                                  v429[v438] = -1825;
                                                  v439 = &v429[v438];
                                                  v440 = v438 + 4;
                                                  v439[2] = v436;
                                                  v439[1] = -4096;
                                                  v439[3] = HIWORD(v436);
LABEL_734:
                                                  v397 += 2;
                                                  v396 += v440;
                                                  ++v398;
                                                  goto LABEL_735;
                                                }
                                                v377 = realloc(v373, v374);
                                                if ( !v377 )
                                                  goto LABEL_594;
LABEL_592:
                                                v373 = v377;
                                              }
                                              v373[v370++] = v375;
                                              v373[v376] = 0;
                                              goto LABEL_594;
                                            }
                                            v383 = v370 + 2;
                                            v384 = HIBYTE(v2016[0]);
                                            if ( v370 + 2 < v370 )
                                              goto LABEL_616;
                                            v385 = v370 + 1;
                                            if ( v370 + 1 >= v370 )
                                            {
                                              if ( v383 < v385 )
                                                goto LABEL_616;
                                              if ( v373 == v354 )
                                              {
                                                if ( v383 > v385 )
                                                {
                                                  v386 = malloc(v370 + 2);
                                                  if ( v386 )
                                                  {
                                                    *v386 = 0;
                                                    goto LABEL_614;
                                                  }
                                                }
LABEL_616:
                                                v378 = v370 + 6;
                                                goto LABEL_618;
                                              }
                                              v386 = realloc(v373, v383);
                                              if ( !v386 )
                                                goto LABEL_616;
LABEL_614:
                                              v373 = v386;
                                            }
                                            v373[v370++] = v384;
                                            v373[v385] = 0;
                                            goto LABEL_616;
                                          }
                                          v379 = v370 + 2;
                                          v380 = BYTE1(v2016[0]);
                                          if ( v370 + 2 < v370 )
                                            goto LABEL_605;
                                          v381 = v370 + 1;
                                          if ( v370 + 1 >= v370 )
                                          {
                                            if ( v379 < v381 )
                                              goto LABEL_605;
                                            if ( v373 == v354 )
                                            {
                                              if ( v379 > v381 )
                                              {
                                                v382 = malloc(v370 + 2);
                                                if ( v382 )
                                                {
                                                  *v382 = 0;
                                                  goto LABEL_603;
                                                }
                                              }
LABEL_605:
                                              v378 = v370 + 8;
                                              goto LABEL_618;
                                            }
                                            v382 = realloc(v373, v379);
                                            if ( !v382 )
                                              goto LABEL_605;
LABEL_603:
                                            v373 = v382;
                                          }
                                          v373[v370++] = v380;
                                          v373[v381] = 0;
                                          goto LABEL_605;
                                        }
                                        v367 = realloc(v363, v364);
                                        if ( !v367 )
                                          goto LABEL_574;
LABEL_572:
                                        v363 = v367;
                                      }
                                      v363[v360++] = v365;
                                      v363[v366] = 0;
                                      goto LABEL_574;
                                    }
                                    if ( v331 != 1 )
                                      goto LABEL_1087;
                                    v465 = *((_DWORD *)v330 + 10);
                                    if ( v465 )
                                      **((_DWORD **)v1988 - 25) = &v1998[v465];
                                    v466 = v1997 + *(_DWORD *)&v1993[12 * v1991 + 36];
                                    v467 = *((_DWORD *)v1988 - 24);
                                    if ( !v466 )
                                      goto LABEL_1087;
                                    v468 = (unsigned int *)operator new(0x7Cu);
                                    v336 = v468;
                                    if ( !v468 )
                                      goto LABEL_1087;
                                    (*(void (__fastcall **)(unsigned int *, _DWORD, int))(*v1989 + 20))(v468, 0, 124);
                                    v469 = v1988;
                                    *v336 = v466;
                                    v336[1] = v467;
                                    if ( (v466 & 1) != 0 )
                                      v470 = 12;
                                    else
                                      v470 = 8;
                                    v471 = *((_DWORD *)v469 - 23);
                                    v336[30] = v470;
                                    v336[2] = v471;
                                    v472 = operator new[](v470);
                                    v1984 = v472;
                                    v336[3] = v472;
                                    if ( !v472 )
                                      goto LABEL_1086;
                                    v473 = v336[30];
                                    v1982 = (char *)(*v336 & 0xFFFFFFFE);
                                    v1990 = v473;
                                    if ( (char *)v1984 == v1982 )
                                    {
                                      memset(v2016, 0, sizeof(v2016));
                                      for ( i35 = 0; i35 != 256; ++i35 )
                                      {
                                        v475 = i35;
                                        v476 = 8;
                                        do
                                        {
                                          v477 = (v475 & 1) == 0;
                                          v478 = v475 >> 1;
                                          if ( (v475 & 1) != 0 )
                                            v475 = -128629065;
                                          else
                                            v475 >>= 1;
                                          if ( !v477 )
                                            v475 ^= v478;
                                          --v476;
                                        }
                                        while ( v476 );
                                        v2016[i35] = v475;
                                      }
                                      v479 = 0;
                                      v480 = -1;
                                      do
                                      {
                                        v481 = *(unsigned __int8 *)(v1984 + v479++);
                                        v480 = (v2016[v481 ^ (unsigned __int8)v480] ^ (v480 >> 8)) + 16;
                                      }
                                      while ( v479 != 4 );
                                      v482 = ~v480;
                                      switch ( v473 )
                                      {
                                        case 0u:
                                        case 1u:
                                        case 2u:
                                          v483 = 0;
                                          break;
                                        case 3u:
                                          v483 = 3;
                                          break;
                                        case 4u:
                                          v483 = v482 + 517762882;
                                          break;
                                        case 5u:
                                          v483 = v482 + 517762880;
                                          break;
                                        case 6u:
                                          v483 = 7;
                                          break;
                                        case 7u:
                                          v483 = 6;
                                          break;
                                        default:
                                          v483 = v473 + 15;
                                          break;
                                      }
                                      v1990 = v483 % 16;
                                    }
                                    v2016[0] = -1523182318;
                                    LOBYTE(v2016[1]) = 0;
                                    v484 = strlen((const char *)v2016);
                                    v485 = *v1989;
                                    v486 = (_BYTE *)*((_DWORD *)v1988 - 49);
                                    v487 = v484;
                                    if ( v484
                                      && (v488 = v484 + 1, v488 > v487)
                                      && (v489 = malloc(v488), (v1986 = (unsigned int)v489) != 0) )
                                    {
                                      (*(void (__fastcall **)(void *, _DWORD *, size_t))(v485 + 24))(v489, v2016, v487);
                                      *(_BYTE *)(v1986 + v487) = 0;
                                    }
                                    else
                                    {
                                      v487 = 0;
                                      v1986 = (unsigned int)v486;
                                    }
                                    v2015 = (_BYTE *)&loc_A65562;
                                    v490 = strlen((const char *)&v2015);
                                    v491 = *v1989;
                                    v492 = v490;
                                    if ( v490
                                      && (v493 = v490 + 1, v493 > v492)
                                      && (v494 = malloc(v493), (v495 = v494) != 0) )
                                    {
                                      (*(void (__fastcall **)(_BYTE *, char **, unsigned int))(v491 + 24))(
                                        v494,
                                        &v2015,
                                        v492);
                                      v495[v492] = 0;
                                    }
                                    else
                                    {
                                      v492 = 0;
                                      v495 = v486;
                                    }
                                    v496 = v492 + 2;
                                    v497 = v2016[0];
                                    if ( v492 + 2 >= v492 )
                                    {
                                      v498 = v492 + 1;
                                      if ( v492 + 1 < v492 )
                                        goto LABEL_847;
                                      if ( v496 < v498 )
                                        goto LABEL_848;
                                      if ( v495 != v486 )
                                      {
                                        v499 = realloc(v495, v496);
                                        if ( !v499 )
                                          goto LABEL_848;
                                        goto LABEL_846;
                                      }
                                      if ( v496 > v498 )
                                      {
                                        v499 = malloc(v492 + 2);
                                        if ( v499 )
                                        {
                                          *v499 = 0;
LABEL_846:
                                          v495 = v499;
LABEL_847:
                                          v495[v492++] = v497;
                                          v495[v498] = 0;
                                        }
                                      }
                                    }
LABEL_848:
                                    v500 = *v1989;
                                    if ( !v1982 )
                                    {
                                      v502 = 0;
LABEL_854:
                                      v505 = v486;
                                      goto LABEL_855;
                                    }
                                    v501 = strlen(v1982);
                                    v502 = v501;
                                    if ( !v501
                                      || (v503 = v501 + 1, v503 <= v502)
                                      || (v504 = malloc(v503), (v505 = v504) == 0) )
                                    {
                                      v502 = 0;
                                      goto LABEL_854;
                                    }
                                    (*(void (__fastcall **)(_BYTE *, char *, unsigned int))(v500 + 24))(
                                      v504,
                                      v1982,
                                      v502);
                                    v505[v502] = 0;
LABEL_855:
                                    if ( v487 == 8 )
                                    {
                                      v511 = v502 + 2;
                                      v512 = BYTE1(v2016[0]);
                                      if ( v502 + 2 < v502 )
                                        goto LABEL_879;
                                      v513 = v502 + 1;
                                      if ( v502 + 1 >= v502 )
                                      {
                                        if ( v511 < v513 )
                                          goto LABEL_879;
                                        if ( v505 == v486 )
                                        {
                                          if ( v511 > v513 )
                                          {
                                            v514 = malloc(v502 + 2);
                                            if ( v514 )
                                            {
                                              *v514 = 0;
                                              goto LABEL_877;
                                            }
                                          }
LABEL_879:
                                          v510 = v502 + 8;
                                          goto LABEL_892;
                                        }
                                        v514 = realloc(v505, v511);
                                        if ( !v514 )
                                          goto LABEL_879;
LABEL_877:
                                        v505 = v514;
                                      }
                                      v505[v502++] = v512;
                                      v505[v513] = 0;
                                      goto LABEL_879;
                                    }
                                    if ( v487 == 9 )
                                    {
                                      v515 = v502 + 2;
                                      v516 = HIBYTE(v2016[0]);
                                      if ( v502 + 2 < v502 )
                                        goto LABEL_890;
                                      v517 = v502 + 1;
                                      if ( v502 + 1 >= v502 )
                                      {
                                        if ( v515 < v517 )
                                          goto LABEL_890;
                                        if ( v505 == v486 )
                                        {
                                          if ( v515 > v517 )
                                          {
                                            v518 = malloc(v502 + 2);
                                            if ( v518 )
                                            {
                                              *v518 = 0;
                                              goto LABEL_888;
                                            }
                                          }
LABEL_890:
                                          v510 = v502 + 6;
                                          goto LABEL_892;
                                        }
                                        v518 = realloc(v505, v515);
                                        if ( !v518 )
                                          goto LABEL_890;
LABEL_888:
                                        v505 = v518;
                                      }
                                      v505[v502++] = v516;
                                      v505[v517] = 0;
                                      goto LABEL_890;
                                    }
                                    if ( v487 != 7 )
                                    {
                                      v510 = v492 - 4;
                                      goto LABEL_892;
                                    }
                                    v506 = v502 + 2;
                                    v507 = BYTE1(v2015);
                                    if ( v502 + 2 >= v502 )
                                    {
                                      v508 = v502 + 1;
                                      if ( v502 + 1 < v502 )
                                        goto LABEL_867;
                                      if ( v506 >= v508 )
                                      {
                                        if ( v505 == v486 )
                                        {
                                          if ( v506 <= v508 )
                                            goto LABEL_868;
                                          v509 = malloc(v502 + 2);
                                          if ( !v509 )
                                            goto LABEL_868;
                                          *v509 = 0;
LABEL_866:
                                          v505 = v509;
LABEL_867:
                                          v505[v502++] = v507;
                                          v505[v508] = 0;
                                          goto LABEL_868;
                                        }
                                        v509 = realloc(v505, v506);
                                        if ( v509 )
                                          goto LABEL_866;
                                      }
                                    }
LABEL_868:
                                    v510 = v502 + 20;
LABEL_892:
                                    if ( v505 != v486 )
                                      free(v505);
                                    if ( v495 != v486 )
                                      free(v495);
                                    if ( (_BYTE *)v1986 != v486 )
                                      free((void *)v1986);
                                    while ( v510 < v1990 )
                                    {
                                      *(_BYTE *)(v1984 + v510) = v1982[v510];
                                      ++v510;
                                    }
                                    v1982 = (char *)*((_DWORD *)v1988 - 51);
                                    v519 = *(_DWORD *)v1982;
                                    v520 = *(_DWORD *)(*(_DWORD *)v1982 + 128);
                                    if ( !v520 )
                                      v520 = *((_DWORD *)v1988 - 30);
                                    v521 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                    v522 = v520 + 84 * (*v521)++;
                                    v336[29] = v522;
                                    (*(void (__fastcall **)(unsigned int, unsigned int, int))(v519 + 4))(
                                      v522 & 0xFFFFF000,
                                      ((v522 + 4351) & 0xFFFFF000) - (v522 & 0xFFFFF000),
                                      7);
                                    v391 = *v336;
                                    v523 = v336[3];
                                    v1990 = (unsigned int)(v336 + 8);
                                    v524 = v391 & 1;
                                    v525 = v336[30];
                                    v1984 = v523;
                                    v395 = v336[29];
                                    v1986 = (unsigned int)(v336 + 4);
                                    if ( (v391 & 1) == 0 )
                                    {
                                      v579 = v391 + 8;
                                      v580 = v525 >> 2;
                                      v581 = (char *)(v1984 - v391);
                                      v1994 = v525 + v391;
                                      v582 = 0;
                                      for ( i36 = 0; ; ++i36 )
                                      {
                                        v454 = 4 * v524;
                                        if ( i36 == v580 )
                                          break;
                                        *(_DWORD *)(v1986 + 4 * v336[28]) = 4 * i36;
                                        *(_DWORD *)(v1990 + 4 * v336[28]++) = v454;
                                        v584 = *(_DWORD *)&v581[v579 - 8];
                                        if ( (v584 & 0xFE000000) == 0xFA000000 )
                                        {
                                          v585 = (_DWORD *)(&word_10 + 1);
                                        }
                                        else if ( (v584 & 0xF000000) == 0xB000000 )
                                        {
                                          v585 = (_DWORD *)&word_12;
                                        }
                                        else if ( (v584 & 0xF000000) == 0xA000000 )
                                        {
                                          v585 = (_DWORD *)(&word_12 + 1);
                                        }
                                        else if ( (v584 & 0xFF000FF) == 0x120001F )
                                        {
                                          v585 = &dword_14;
                                        }
                                        else if ( (v584 & 0xFEF0010) == 0x8F0000 )
                                        {
                                          v585 = &dword_14 + 1;
                                        }
                                        else if ( (v584 & 0xFFF0000) == 0x28F0000 )
                                        {
                                          v585 = &dword_14 + 2;
                                        }
                                        else if ( (v584 & 0xFFF0000) == 0x24F0000 )
                                        {
                                          v585 = &dword_14 + 3;
                                        }
                                        else if ( (v584 & 0xE5F0000) == 0x41F0000 )
                                        {
                                          v585 = &dword_18 + 1;
                                        }
                                        else if ( (v584 & 0xFE00FFF) == 0x1A0000F )
                                        {
                                          v585 = &dword_18;
                                        }
                                        else
                                        {
                                          v585 = &dword_18 + 2;
                                        }
                                        if ( (unsigned int)v585 - 17 > 3 )
                                        {
                                          if ( v585 == (int *)((char *)&dword_14 + 1) )
                                          {
                                            for ( i37 = 12;
                                                  i37 == (unsigned __int16)v584 >> 12
                                               || i37 == (*(_DWORD *)&v581[v579 - 8] & 0xF);
                                                  --i37 )
                                            {
                                              ;
                                            }
                                            v524 += 6;
                                            *(_DWORD *)(v395 + v454) = (i37 << 12) | 0xE52D0004;
                                            v591 = (_DWORD *)(v454 + v395);
                                            v591[2] = v584 & 0xFFF0FFFF | (i37 << 16);
                                            v591[5] = v579;
                                            v591[3] = (i37 << 12) | 0xE49D0004;
                                            v591[1] = (i37 << 12) | 0xE59F0008;
                                            v591[4] = -493883392;
                                          }
                                          else if ( (unsigned int)v585 - 22 > 3 )
                                          {
                                            ++v524;
                                            *(_DWORD *)(v395 + v454) = v584;
                                          }
                                          else
                                          {
                                            if ( (unsigned int)v585 - 22 <= 1 || v585 == (int *)((char *)&dword_18 + 1) )
                                            {
                                              v592 = *(_DWORD *)&v581[v579 - 8] & 0xFFF;
                                              if ( v585 == (int *)((char *)&dword_14 + 2) )
                                              {
                                                v582 = v592 + v579;
                                              }
                                              else if ( v585 == (int *)((char *)&dword_14 + 3) )
                                              {
                                                v582 = v579 - v592;
                                              }
                                              else if ( v585 == (int *)((char *)&dword_18 + 1) )
                                              {
                                                if ( (v584 & 0x800000) != 0 )
                                                  v582 = *(_DWORD *)(v592 + v579);
                                                else
                                                  v585 = (int *)(v579 - v592);
                                                if ( (v584 & 0x800000) == 0 )
                                                  v582 = *v585;
                                              }
                                            }
                                            else
                                            {
                                              v582 = v579;
                                            }
                                            v524 += 3;
                                            *(_DWORD *)(v395 + v454) = ((unsigned __int16)v584 >> 12 << 12) | 0xE51F0000;
                                            v593 = v454 + v395;
                                            *(_DWORD *)(v593 + 4) = -493883392;
                                            *(_DWORD *)(v593 + 8) = v582;
                                          }
                                        }
                                        else
                                        {
                                          if ( (unsigned int)v585 - 17 <= 1 )
                                          {
                                            ++v524;
                                            *(_DWORD *)(v395 + v454) = -493887484;
                                          }
                                          *(_DWORD *)(v395 + 4 * v524) = -450891772;
                                          if ( v585 == (int *)((char *)&word_10 + 1) )
                                          {
                                            v586 = v584 & 0x1000000;
                                            v587 = (4 * (v584 & 0xFFFFFF)) | ((v584 & 0x1000000u) >> 23);
                                          }
                                          else
                                          {
                                            v586 = (int)v585 - 18;
                                            if ( (unsigned int)v585 - 18 > 1 )
                                              v587 = 0;
                                            else
                                              v587 = v584 & 0xFFFFFF;
                                            if ( (unsigned int)v585 - 18 <= 1 )
                                              v587 *= 4;
                                          }
                                          v588 = 4 * v524 + v395;
                                          if ( v587 >> 25 )
                                            v587 |= 0xFC000000;
                                          v589 = v585 == (int *)((char *)&word_10 + 1);
                                          if ( v585 == (int *)((char *)&word_10 + 1) )
                                            v586 = v579 + 1;
                                          else
                                            v585 = (int *)(v587 + v579);
                                          if ( v589 )
                                            v585 = (int *)(v587 + v586);
                                          v524 += 2;
                                          *(_DWORD *)(v588 + 4) = v585;
                                        }
                                        v579 += 4;
                                      }
                                      goto LABEL_1074;
                                    }
                                    v396 = 0;
                                    v526 = v391 + 3;
                                    v398 = 0;
                                    v1990 = v525 >> 1;
                                    do
                                    {
                                      v527 = *(unsigned __int16 *)(v1984 + 2 * v398);
                                      if ( (unsigned int)((v527 >> 11) - 29) <= 2 )
                                      {
                                        v1986 = v398 + 2;
                                        if ( v398 + 2 > v1990 )
                                          break;
                                        v528 = *(unsigned __int16 *)(2 * v398 + v1984 + 2);
                                        v529 = v395 + 2 * v396;
                                        v530 = v528 | (v527 << 16);
                                        v531 = v530 & 0xF800D000;
                                        if ( (v530 & 0xF800D000) == 0xF000C000 )
                                        {
                                          v532 = 8;
                                        }
                                        else
                                        {
                                          switch ( v531 )
                                          {
                                            case 0xF000D000:
                                              v532 = 9;
                                              break;
                                            case 0xF0008000:
                                              v532 = 10;
                                              break;
                                            case 0xF0009000:
                                              v532 = 11;
                                              break;
                                            default:
                                              if ( (v530 & 0xFBFF8000) == 0xF2AF0000 )
                                              {
                                                v532 = 12;
                                              }
                                              else if ( (v530 & 0xFBFF8000) == 0xF20F0000 )
                                              {
                                                v532 = 13;
                                              }
                                              else if ( (v530 & 0xFF7F0000) == 0xF85F0000 )
                                              {
                                                v532 = 14;
                                              }
                                              else if ( (v528 & 0xFFFF00F0 | (v527 << 16)) == 0xE8DF0000 )
                                              {
                                                v532 = 15;
                                              }
                                              else if ( (v528 & 0xFFFF00F0 | (v527 << 16)) == 0xE8DF0010 )
                                              {
                                                v532 = 16;
                                              }
                                              else
                                              {
                                                v532 = 26;
                                              }
                                              break;
                                          }
                                        }
                                        v1996 = v532 - 8;
                                        if ( (unsigned int)(v532 - 8) > 3 )
                                        {
                                          if ( (unsigned int)(v532 - 12) > 2 )
                                          {
                                            if ( (unsigned int)(v532 - 15) > 1 )
                                            {
                                              *(_WORD *)(v395 + 2 * v396) = v527;
                                              v540 = 2;
                                              *(_WORD *)(v529 + 2) = v528;
                                            }
                                            else
                                            {
                                              v548 = v528 & 0xF;
                                              for ( i38 = 7; i38 == v548; --i38 )
                                                ;
                                              for ( i39 = 7; i39 == v548 || i39 == i38; --i39 )
                                                ;
                                              v551 = 1 << i39;
                                              *(_WORD *)(v395 + 2 * v396) = v551 | 0xB400;
                                              *(_WORD *)(v529 + 6) = i38 | 0xEB00;
                                              v552 = (_WORD)i38 << 8;
                                              *(_WORD *)(v529 + 2) = ((_WORD)i38 << 8) | 0x4805;
                                              v553 = i39;
                                              *(_WORD *)(v529 + 4) = i39 | (8 * v548) | 0x4600;
                                              v554 = (_WORD)i39 << 8;
                                              v555 = 8 * i39;
                                              if ( v532 == 15 )
                                              {
                                                *(_WORD *)(v529 + 8) = v554 | v553;
                                                v556 = v553 | 0x7800;
                                              }
                                              else
                                              {
                                                *(_WORD *)(v529 + 8) = v553 | 0x40 | v554;
                                                v556 = v553 | 0x8800;
                                              }
                                              *(_WORD *)(v529 + 10) = v555 | v556;
                                              *(_WORD *)(v529 + 14) = v553 | v552 | 0x40;
                                              *(_WORD *)(v529 + 18) = v551 | 0xBC00;
                                              *(_WORD *)(v529 + 12) = i38 | 0xEB00;
                                              *(_WORD *)(v529 + 22) = -16640;
                                              v540 = 14;
                                              *(_WORD *)(v529 + 16) = v552 | 0x3001;
                                              *(_WORD *)(v529 + 20) = (8 * i38) | 0x4700;
                                              *(_DWORD *)(v529 + 24) = v526;
                                            }
                                          }
                                          else
                                          {
                                            if ( v532 == 14 )
                                            {
                                              v541 = (int)v528 >> 12;
                                              v43 = (v527 & 0x80) == 0;
                                              v545 = v526 & 0xFFFFFFFC;
                                              v546 = v528 & 0xFFF;
                                              if ( v43 )
                                                v547 = (unsigned int *)(v545 - v546);
                                              else
                                                v547 = (unsigned int *)(v546 + v545);
                                              v544 = *v547;
                                            }
                                            else
                                            {
                                              v541 = (v528 >> 8) & 0xF;
                                              v542 = (v530 << 27)
                                                   | (v528 >> 12 << 30)
                                                   | ((unsigned int)v527 >> 10 << 31);
                                              v543 = v526 & 0xFFFFFFFC;
                                              if ( v532 == 12 )
                                                v544 = v542 + v543;
                                              else
                                                v544 = v543 - v542;
                                            }
                                            *(_WORD *)(v395 + 2 * v396) = ((_WORD)v541 << 8) | 0x4800;
                                            *(_WORD *)(v529 + 4) = v544;
                                            v540 = 4;
                                            *(_WORD *)(v529 + 2) = -8191;
                                            *(_WORD *)(v529 + 6) = HIWORD(v544);
                                          }
                                          goto LABEL_969;
                                        }
                                        v2000 = (v528 >> 11) & 1;
                                        v533 = ((unsigned int)v527 >> 10) & 1;
                                        v1994 = (v528 >> 13) & 1;
                                        v534 = v1994 == v533;
                                        v1981 = v2000 == v533;
                                        if ( v1996 <= 1 )
                                        {
                                          *(_WORD *)(v395 + 2 * v396) = -3569;
                                          *(_WORD *)(v529 + 2) = 3593;
                                          goto LABEL_930;
                                        }
                                        if ( v532 == 10 )
                                        {
                                          v1996 = 4 * (v527 & 0x3C0);
                                          *(_WORD *)(v395 + 2 * v396) = (4 * (v527 & 0x3C0)) | 0xD000;
                                          *(_WORD *)(v529 + 2) = -8189;
LABEL_930:
                                          v535 = 2;
                                        }
                                        else
                                        {
                                          v535 = 0;
                                        }
                                        v1980 = 2 * v535;
                                        *(_WORD *)(v529 + 2 * v535) = -1825;
                                        *(_WORD *)(2 * v535 + v529 + 2) = -4096;
                                        if ( v532 == 8 )
                                        {
                                          v536 = (2 * (v528 & 0x7FE))
                                               | (v533 << 24)
                                               | ((v527 & 0x3FF) << 12)
                                               | (v534 << 23)
                                               | (v1981 << 22);
                                          if ( v533 )
                                            v536 |= 0xFE000000;
                                          v537 = v536 + v526;
LABEL_945:
                                          v540 = v535 + 4;
                                          *(_DWORD *)(v529 + v1980 + 4) = v537;
LABEL_969:
                                          v526 += 4;
                                          v396 += v540;
                                          v398 = v1986;
                                          continue;
                                        }
                                        v538 = 2 * (v528 & 0x7FF);
                                        if ( v532 == 9 )
                                        {
                                          v539 = v538
                                               | (v533 << 24)
                                               | ((v527 & 0x3FF) << 12)
                                               | (v534 << 23)
                                               | (v1981 << 22);
LABEL_942:
                                          if ( v533 )
                                            v539 |= 0xFE000000;
                                        }
                                        else
                                        {
                                          if ( v532 != 10 )
                                          {
                                            v539 = v538
                                                 | (v533 << 24)
                                                 | ((v527 & 0x3FF) << 12)
                                                 | (v534 << 23)
                                                 | (v1981 << 22);
                                            goto LABEL_942;
                                          }
                                          v539 = v538
                                               | (v533 << 20)
                                               | ((v527 & 0x3F) << 12)
                                               | (v2000 << 19)
                                               | (v1994 << 18);
                                          if ( v533 )
                                            v539 = ~(~(v539 << 11) >> 11);
                                        }
                                        v537 = v539 + v526 + 1;
                                        goto LABEL_945;
                                      }
                                      v557 = (_WORD *)(v395 + 2 * v396);
                                      if ( (v527 & 0xF000) == 0xD000 )
                                      {
                                        v561 = 2 * (unsigned __int8)v527;
                                        if ( v561 >> 8 )
                                          v561 |= 0xFFFFFF00;
                                        v564 = v561 + v526;
                                        *(_WORD *)(v395 + 2 * v396) = v527 & 0xFF00;
                                        v557[1] = -8189;
                                        v566 = 2;
                                      }
                                      else
                                      {
                                        v558 = v527 & 0xF800;
                                        if ( v558 == 57344 )
                                        {
                                          v562 = v527 & 0x7FF;
                                          v563 = 2 * v562;
                                          if ( (unsigned int)(2 * v562) >> 11 )
                                            v563 = ~((unsigned int)~(v562 << 22) >> 21);
                                          v564 = v563 + v526;
                                        }
                                        else
                                        {
                                          if ( (v527 & 0xFFFFFFF8) != 0x4778 )
                                          {
                                            v559 = v527 & 0xFF78;
                                            if ( v559 == 17528 )
                                            {
                                              for ( i40 = 7;
                                                    i40 == (v527 & 7 | ((unsigned __int8)(v527 & 0x80) >> 4));
                                                    --i40 )
                                              {
                                                ;
                                              }
                                              v569 = 1 << i40;
                                              *(_WORD *)(v395 + 2 * v396) = v569 | 0xB400;
                                              v557[2] = v527 & 0xFF87 | (8 * i40);
                                              v557[6] = v526;
                                              v557[1] = ((_WORD)i40 << 8) | 0x4802;
                                              v557[3] = v569 | 0xBC00;
                                              v557[4] = -8190;
                                              v557[5] = -16640;
                                              v557[7] = HIWORD(v526);
                                              v568 = 8;
                                            }
                                            else
                                            {
                                              if ( v559 == 18040 )
                                              {
                                                v560 = 4;
                                              }
                                              else if ( v558 == 40960 )
                                              {
                                                v560 = 5;
                                              }
                                              else if ( v558 == 18432 )
                                              {
                                                v560 = 6;
                                              }
                                              else if ( (v527 & 0xF500) == 0xB100 )
                                              {
                                                v560 = 7;
                                              }
                                              else
                                              {
                                                v560 = 26;
                                              }
                                              if ( (unsigned int)(v560 - 4) > 2 )
                                              {
                                                if ( v560 == 7 )
                                                {
                                                  *(_WORD *)(v395 + 2 * v396) = v527 & 0xFD07;
                                                  v576 = (((unsigned __int16)(v527 & 0x200) >> 3)
                                                        | ((unsigned __int8)(v527 & 0xF8) >> 2))
                                                       + v526
                                                       + 1;
                                                  v557[2] = -1825;
                                                  v557[4] = v576;
                                                  v557[3] = -4096;
                                                  v568 = 6;
                                                  v557[1] = -8189;
                                                  v557[5] = HIWORD(v576);
                                                }
                                                else
                                                {
                                                  *(_WORD *)(v395 + 2 * v396) = v527;
                                                  v557[1] = -16640;
                                                  v568 = 2;
                                                }
                                              }
                                              else
                                              {
                                                if ( v560 == 4 )
                                                {
                                                  LOWORD(v570) = *(_WORD *)(v1984 + 2 * v398) & 7;
                                                  v571 = v526;
                                                }
                                                else
                                                {
                                                  v572 = v560 == 5;
                                                  v573 = v526 & 0xFFFFFFFC;
                                                  v574 = (unsigned __int8)v527;
                                                  v575 = v527 & 0x700;
                                                  if ( v572 )
                                                    v571 = v574 + v573;
                                                  else
                                                    v571 = *(_DWORD *)(v573 + 4 * v574);
                                                  v570 = v575 >> 8;
                                                  if ( v572 )
                                                    v571 *= 4;
                                                }
                                                *(_WORD *)(v395 + 2 * v396) = ((_WORD)v570 << 8) | 0x4800;
                                                v557[2] = v571;
                                                v568 = 4;
                                                v557[1] = -8191;
                                                v557[3] = HIWORD(v571);
                                              }
                                            }
                                            goto LABEL_1008;
                                          }
                                          v564 = v526;
                                        }
                                        v566 = 0;
                                      }
                                      v557[v566] = -1825;
                                      v567 = &v557[v566];
                                      v568 = v566 + 4;
                                      v567[2] = v564;
                                      v567[1] = -4096;
                                      v567[3] = HIWORD(v564);
LABEL_1008:
                                      v526 += 2;
                                      v396 += v568;
                                      ++v398;
                                    }
                                    while ( v398 < v1990 );
LABEL_1010:
                                    v577 = v391 + 2 * v398;
                                    *(_WORD *)(v395 + 2 * v396) = -1825;
                                    v578 = (_WORD *)(v395 + 2 * v396);
                                    v578[2] = v577;
                                    v578[1] = -4096;
                                    v578[3] = HIWORD(v577);
LABEL_1075:
                                    operator delete((void *)v336[3]);
                                    v336[3] = 0;
                                    v594 = v1982;
                                    (*(void (__fastcall **)(unsigned int, unsigned int))(*(_DWORD *)v1982 + 216))(
                                      v336[29],
                                      v336[29] + 256);
                                    if ( *v336 )
                                    {
                                      (*(void (__fastcall **)(unsigned int, int, int))(*(_DWORD *)v594 + 4))(
                                        *v336 & 0xFFFFF000,
                                        0x2000,
                                        7);
                                      v595 = *v336;
                                      if ( (*v336 & 1) != 0 )
                                      {
                                        v596 = *v336 & 2;
                                        if ( (v595 & 2) != 0 )
                                        {
                                          *(_WORD *)(v595 & 0xFFFFFFFE) = -16640;
                                          v596 = 1;
                                        }
                                        v597 = 2 * v596;
                                        *(_WORD *)((*v336 & 0xFFFFFFFE) + 2 * v596) = -1825;
                                        *(_WORD *)((*v336 & 0xFFFFFFFE) + 2 * v596 + 2) = -4096;
                                        *(_WORD *)(v597 + (*v336 & 0xFFFFFFFE) + 4) = v336[1];
                                        *(_WORD *)(v597 + (*v336 & 0xFFFFFFFE) + 6) = *((_WORD *)v336 + 3);
                                      }
                                      else
                                      {
                                        *(_DWORD *)v595 = -450891772;
                                        *(_DWORD *)(*v336 + 4) = v336[1];
                                      }
                                      v598 = (unsigned int *)v336[2];
                                      if ( v598 )
                                      {
                                        v599 = v336[29];
                                        if ( (*v336 & 1) != 0 )
                                          v599 |= 1u;
                                        *v598 = v599;
                                      }
                                      (*(void (__fastcall **)(unsigned int, unsigned int, _DWORD))(*(_DWORD *)v1982 + 216))(
                                        *v336 & 0xFFFFFFFE,
                                        v336[30] + (*v336 & 0xFFFFFFFE),
                                        0);
                                    }
LABEL_1086:
                                    operator delete(v336);
LABEL_1087:
                                    ++v1991;
                                  }
                                }
                                if ( v1995 == &byte_9[2] )
                                {
                                  v600 = *((_DWORD *)v1993 + 10);
                                  if ( v600 )
                                    **((_DWORD **)v1988 - 22) = &v1998[v600];
                                  v601 = v1997 + *((_DWORD *)v1993 + 9);
                                  v602 = *((_DWORD *)v1988 - 21);
                                  if ( !v601 )
                                    goto LABEL_2207;
                                  v603 = (_DWORD *)operator new(0x7Cu);
                                  v604 = v603;
                                  if ( !v603 )
                                    goto LABEL_2207;
                                  (*(void (__fastcall **)(_DWORD *, _DWORD, int))(*v1989 + 20))(v603, 0, 124);
                                  v605 = v1988;
                                  *v604 = v601;
                                  v604[1] = v602;
                                  if ( (v601 & 1) != 0 )
                                    v606 = 12;
                                  else
                                    v606 = 8;
                                  v607 = *((_DWORD *)v605 - 20);
                                  v604[30] = v606;
                                  v604[2] = v607;
                                  v608 = operator new[](v606);
                                  v1991 = v608;
                                  v604[3] = v608;
                                  if ( !v608 )
                                    goto LABEL_2206;
                                  v609 = v604[30];
                                  v1983 = (char *)(*v604 & 0xFFFFFFFE);
                                  v1986 = v609;
                                  if ( (char *)v1991 == v1983 )
                                  {
                                    memset(v2016, 0, sizeof(v2016));
                                    for ( i41 = 0; i41 != 256; ++i41 )
                                    {
                                      v611 = i41;
                                      v612 = 8;
                                      do
                                      {
                                        v613 = (v611 & 1) == 0;
                                        v614 = v611 >> 1;
                                        if ( (v611 & 1) != 0 )
                                          v611 = -128629065;
                                        else
                                          v611 >>= 1;
                                        if ( !v613 )
                                          v611 ^= v614;
                                        --v612;
                                      }
                                      while ( v612 );
                                      v2016[i41] = v611;
                                    }
                                    v615 = 0;
                                    v616 = -1;
                                    do
                                    {
                                      v617 = *(unsigned __int8 *)(v1991 + v615++);
                                      v616 = (v2016[v617 ^ (unsigned __int8)v616] ^ (v616 >> 8)) + 16;
                                    }
                                    while ( v615 != 4 );
                                    v618 = ~v616;
                                    switch ( v609 )
                                    {
                                      case 0:
                                      case 1:
                                      case 2:
                                        v619 = 0;
                                        break;
                                      case 3:
                                        v619 = 3;
                                        break;
                                      case 4:
                                        v619 = v618 + 517762882;
                                        break;
                                      case 5:
                                        v619 = v618 + 517762880;
                                        break;
                                      case 6:
                                        v619 = 7;
                                        break;
                                      case 7:
                                        v619 = 6;
                                        break;
                                      default:
                                        v619 = v609 + 15;
                                        break;
                                    }
                                    v1986 = v619 % 16;
                                  }
                                  v2016[0] = -1523182318;
                                  LOBYTE(v2016[1]) = 0;
                                  v620 = strlen((const char *)v2016);
                                  v621 = *v1989;
                                  v622 = (_BYTE *)*((_DWORD *)v1988 - 49);
                                  v623 = v620;
                                  if ( v620
                                    && (v624 = v620 + 1, v624 > v623)
                                    && (v625 = malloc(v624), (v1984 = (unsigned int)v625) != 0) )
                                  {
                                    (*(void (__fastcall **)(void *, _DWORD *, size_t))(v621 + 24))(v625, v2016, v623);
                                    *(_BYTE *)(v1984 + v623) = 0;
                                  }
                                  else
                                  {
                                    v623 = 0;
                                    v1984 = (unsigned int)v622;
                                  }
                                  v2015 = (_BYTE *)&loc_A65562;
                                  v626 = strlen((const char *)&v2015);
                                  v627 = *v1989;
                                  v628 = v626;
                                  if ( v626
                                    && (v629 = v626 + 1, v629 > v628)
                                    && (v630 = malloc(v629), (v631 = v630) != 0) )
                                  {
                                    (*(void (__fastcall **)(_BYTE *, char **, unsigned int))(v627 + 24))(
                                      v630,
                                      &v2015,
                                      v628);
                                    v631[v628] = 0;
                                  }
                                  else
                                  {
                                    v628 = 0;
                                    v631 = v622;
                                  }
                                  v632 = v628 + 2;
                                  v633 = v2016[0];
                                  if ( v628 + 2 >= v628 )
                                  {
                                    v634 = v628 + 1;
                                    if ( v628 + 1 < v628 )
                                    {
LABEL_1135:
                                      v631[v628++] = v633;
                                      v631[v634] = 0;
                                      goto LABEL_1136;
                                    }
                                    if ( v632 < v634 )
                                      goto LABEL_1136;
                                    if ( v631 != v622 )
                                    {
                                      v635 = realloc(v631, v632);
                                      if ( !v635 )
                                        goto LABEL_1136;
                                      goto LABEL_1134;
                                    }
                                    if ( v632 > v634 )
                                    {
                                      v635 = malloc(v628 + 2);
                                      if ( v635 )
                                      {
                                        *v635 = 0;
LABEL_1134:
                                        v631 = v635;
                                        goto LABEL_1135;
                                      }
                                    }
                                  }
LABEL_1136:
                                  v1990 = *v1989;
                                  if ( v1983 )
                                  {
                                    v636 = strlen(v1983);
                                    v637 = v636;
                                    if ( v636 )
                                    {
                                      v638 = v636 + 1;
                                      if ( v638 > v637 )
                                      {
                                        v639 = malloc(v638);
                                        v640 = v639;
                                        if ( v639 )
                                        {
                                          (*(void (__fastcall **)(_BYTE *, char *, unsigned int))(v1990 + 24))(
                                            v639,
                                            v1983,
                                            v637);
                                          v640[v637] = 0;
LABEL_1143:
                                          if ( v623 != 8 )
                                          {
                                            if ( v623 != 9 )
                                            {
                                              if ( v623 != 7 )
                                              {
                                                v645 = v628 - 4;
                                                goto LABEL_1180;
                                              }
                                              v641 = v637 + 2;
                                              v642 = BYTE1(v2015);
                                              if ( v637 + 2 < v637 )
                                                goto LABEL_1156;
                                              v643 = v637 + 1;
                                              if ( v637 + 1 < v637 )
                                                goto LABEL_1155;
                                              if ( v641 >= v643 )
                                              {
                                                if ( v640 == v622 )
                                                {
                                                  if ( v641 <= v643 )
                                                    goto LABEL_1156;
                                                  v644 = malloc(v637 + 2);
                                                  if ( !v644 )
                                                    goto LABEL_1156;
                                                  *v644 = 0;
                                                  goto LABEL_1154;
                                                }
                                                v644 = realloc(v640, v641);
                                                if ( v644 )
                                                {
LABEL_1154:
                                                  v640 = v644;
LABEL_1155:
                                                  v640[v637++] = v642;
                                                  v640[v643] = 0;
                                                }
                                              }
LABEL_1156:
                                              v645 = v637 + 20;
LABEL_1180:
                                              if ( v640 != v622 )
                                                free(v640);
                                              if ( v631 != v622 )
                                                free(v631);
                                              if ( (_BYTE *)v1984 != v622 )
                                                free((void *)v1984);
                                              while ( v645 < v1986 )
                                              {
                                                *(_BYTE *)(v1991 + v645) = v1983[v645];
                                                ++v645;
                                              }
                                              v654 = *v1989;
                                              v655 = *(_DWORD *)(*v1989 + 128);
                                              if ( !v655 )
                                                v655 = *((_DWORD *)v1988 - 30);
                                              v656 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                              v657 = v655 + 84 * (*v656)++;
                                              v604[29] = v657;
                                              (*(void (__fastcall **)(unsigned int, unsigned int, int))(v654 + 4))(
                                                v657 & 0xFFFFF000,
                                                ((v657 + 4351) & 0xFFFFF000) - (v657 & 0xFFFFF000),
                                                7);
                                              v658 = *v604;
                                              v659 = (char *)v604[3];
                                              v1984 = (unsigned int)(v604 + 8);
                                              v660 = v658 & 1;
                                              v661 = v604[30];
                                              v1983 = v659;
                                              v662 = v604[29];
                                              v1991 = (unsigned int)(v604 + 4);
                                              if ( (v658 & 1) != 0 )
                                              {
                                                v663 = 0;
                                                v664 = v658 + 3;
                                                v665 = 0;
                                                v1982 = (char *)(v661 >> 1);
                                                while ( 1 )
                                                {
                                                  v666 = *(unsigned __int16 *)&v1983[2 * v665];
                                                  if ( (unsigned int)((v666 >> 11) - 29) > 2 )
                                                  {
                                                    v696 = (_WORD *)(v662 + 2 * v663);
                                                    if ( (v666 & 0xF000) == 0xD000 )
                                                    {
                                                      v700 = 2 * (unsigned __int8)v666;
                                                      if ( v700 >> 8 )
                                                        v700 |= 0xFFFFFF00;
                                                      v703 = v700 + v664;
                                                      *(_WORD *)(v662 + 2 * v663) = v666 & 0xFF00;
                                                      v696[1] = -8189;
                                                      v705 = 2;
                                                    }
                                                    else
                                                    {
                                                      v697 = v666 & 0xF800;
                                                      if ( v697 == 57344 )
                                                      {
                                                        v701 = v666 & 0x7FF;
                                                        v702 = 2 * v701;
                                                        if ( (unsigned int)(2 * v701) >> 11 )
                                                          v702 = ~((unsigned int)~(v701 << 22) >> 21);
                                                        v703 = v702 + v664;
                                                      }
                                                      else
                                                      {
                                                        if ( (v666 & 0xFFFFFFF8) != 0x4778 )
                                                        {
                                                          v698 = v666 & 0xFF78;
                                                          if ( v698 == 17528 )
                                                          {
                                                            for ( i42 = 7;
                                                                  i42 == (v666 & 7
                                                                        | ((unsigned __int8)(v666 & 0x80) >> 4));
                                                                  --i42 )
                                                            {
                                                              ;
                                                            }
                                                            v708 = 1 << i42;
                                                            *(_WORD *)(v662 + 2 * v663) = v708 | 0xB400;
                                                            v696[2] = v666 & 0xFF87 | (8 * i42);
                                                            v696[6] = v664;
                                                            v696[1] = ((_WORD)i42 << 8) | 0x4802;
                                                            v696[3] = v708 | 0xBC00;
                                                            v696[4] = -8190;
                                                            v696[5] = -16640;
                                                            v696[7] = HIWORD(v664);
                                                            v707 = 8;
                                                          }
                                                          else
                                                          {
                                                            if ( v698 == 18040 )
                                                            {
                                                              v699 = 4;
                                                            }
                                                            else if ( v697 == 40960 )
                                                            {
                                                              v699 = 5;
                                                            }
                                                            else if ( v697 == 18432 )
                                                            {
                                                              v699 = 6;
                                                            }
                                                            else if ( (v666 & 0xF500) == 0xB100 )
                                                            {
                                                              v699 = 7;
                                                            }
                                                            else
                                                            {
                                                              v699 = 26;
                                                            }
                                                            if ( (unsigned int)(v699 - 4) > 2 )
                                                            {
                                                              if ( v699 == 7 )
                                                              {
                                                                *(_WORD *)(v662 + 2 * v663) = v666 & 0xFD07;
                                                                v715 = (((unsigned __int16)(v666 & 0x200) >> 3)
                                                                      | ((unsigned __int8)(v666 & 0xF8) >> 2))
                                                                     + v664
                                                                     + 1;
                                                                v696[2] = -1825;
                                                                v696[4] = v715;
                                                                v696[3] = -4096;
                                                                v707 = 6;
                                                                v696[1] = -8189;
                                                                v696[5] = HIWORD(v715);
                                                              }
                                                              else
                                                              {
                                                                *(_WORD *)(v662 + 2 * v663) = v666;
                                                                v696[1] = -16640;
                                                                v707 = 2;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              if ( v699 == 4 )
                                                              {
                                                                LOWORD(v709) = *(_WORD *)&v1983[2 * v665] & 7;
                                                                v710 = v664;
                                                              }
                                                              else
                                                              {
                                                                v711 = v699 == 5;
                                                                v712 = v664 & 0xFFFFFFFC;
                                                                v713 = (unsigned __int8)v666;
                                                                v714 = v666 & 0x700;
                                                                if ( v711 )
                                                                  v710 = v713 + v712;
                                                                else
                                                                  v710 = *(_DWORD *)(v712 + 4 * v713);
                                                                v709 = v714 >> 8;
                                                                if ( v711 )
                                                                  v710 *= 4;
                                                              }
                                                              *(_WORD *)(v662 + 2 * v663) = ((_WORD)v709 << 8) | 0x4800;
                                                              v696[2] = v710;
                                                              v707 = 4;
                                                              v696[1] = -8191;
                                                              v696[3] = HIWORD(v710);
                                                            }
                                                          }
                                                          goto LABEL_1296;
                                                        }
                                                        v703 = v664;
                                                      }
                                                      v705 = 0;
                                                    }
                                                    v696[v705] = -1825;
                                                    v706 = &v696[v705];
                                                    v707 = v705 + 4;
                                                    v706[2] = v703;
                                                    v706[1] = -4096;
                                                    v706[3] = HIWORD(v703);
LABEL_1296:
                                                    v664 += 2;
                                                    v663 += v707;
                                                    ++v665;
                                                    goto LABEL_1297;
                                                  }
                                                  v1991 = v665 + 2;
                                                  if ( v665 + 2 > (unsigned int)v1982 )
                                                    goto LABEL_1298;
                                                  v667 = *(unsigned __int16 *)&v1983[2 * v665 + 2];
                                                  v668 = v662 + 2 * v663;
                                                  v669 = v667 | (v666 << 16);
                                                  v670 = v669 & 0xF800D000;
                                                  if ( (v669 & 0xF800D000) == 0xF000C000 )
                                                  {
                                                    v671 = 8;
                                                  }
                                                  else
                                                  {
                                                    switch ( v670 )
                                                    {
                                                      case 0xF000D000:
                                                        v671 = 9;
                                                        break;
                                                      case 0xF0008000:
                                                        v671 = 10;
                                                        break;
                                                      case 0xF0009000:
                                                        v671 = 11;
                                                        break;
                                                      default:
                                                        if ( (v669 & 0xFBFF8000) == 0xF2AF0000 )
                                                        {
                                                          v671 = 12;
                                                        }
                                                        else if ( (v669 & 0xFBFF8000) == 0xF20F0000 )
                                                        {
                                                          v671 = 13;
                                                        }
                                                        else if ( (v669 & 0xFF7F0000) == 0xF85F0000 )
                                                        {
                                                          v671 = 14;
                                                        }
                                                        else if ( (v667 & 0xFFFF00F0 | (v666 << 16)) == 0xE8DF0000 )
                                                        {
                                                          v671 = 15;
                                                        }
                                                        else if ( (v667 & 0xFFFF00F0 | (v666 << 16)) == 0xE8DF0010 )
                                                        {
                                                          v671 = 16;
                                                        }
                                                        else
                                                        {
                                                          v671 = 26;
                                                        }
                                                        break;
                                                    }
                                                  }
                                                  v1990 = v671 - 8;
                                                  if ( (unsigned int)(v671 - 8) > 3 )
                                                  {
                                                    if ( (unsigned int)(v671 - 12) > 2 )
                                                    {
                                                      if ( (unsigned int)(v671 - 15) > 1 )
                                                      {
                                                        *(_WORD *)(v662 + 2 * v663) = v666;
                                                        v679 = 2;
                                                        *(_WORD *)(v668 + 2) = v667;
                                                      }
                                                      else
                                                      {
                                                        v687 = v667 & 0xF;
                                                        for ( i43 = 7; i43 == v687; --i43 )
                                                          ;
                                                        for ( i44 = 7; i44 == v687 || i44 == i43; --i44 )
                                                          ;
                                                        v690 = 1 << i44;
                                                        *(_WORD *)(v662 + 2 * v663) = v690 | 0xB400;
                                                        *(_WORD *)(v668 + 6) = i43 | 0xEB00;
                                                        v691 = (_WORD)i43 << 8;
                                                        *(_WORD *)(v668 + 2) = ((_WORD)i43 << 8) | 0x4805;
                                                        v692 = i44;
                                                        *(_WORD *)(v668 + 4) = i44 | (8 * v687) | 0x4600;
                                                        v693 = (_WORD)i44 << 8;
                                                        v694 = 8 * i44;
                                                        if ( v671 == 15 )
                                                        {
                                                          *(_WORD *)(v668 + 8) = v693 | v692;
                                                          v695 = v692 | 0x7800;
                                                        }
                                                        else
                                                        {
                                                          *(_WORD *)(v668 + 8) = v692 | 0x40 | v693;
                                                          v695 = v692 | 0x8800;
                                                        }
                                                        *(_WORD *)(v668 + 10) = v694 | v695;
                                                        *(_WORD *)(v668 + 14) = v692 | v691 | 0x40;
                                                        *(_WORD *)(v668 + 18) = v690 | 0xBC00;
                                                        *(_WORD *)(v668 + 12) = i43 | 0xEB00;
                                                        *(_WORD *)(v668 + 22) = -16640;
                                                        v679 = 14;
                                                        *(_WORD *)(v668 + 16) = v691 | 0x3001;
                                                        *(_WORD *)(v668 + 20) = (8 * i43) | 0x4700;
                                                        *(_DWORD *)(v668 + 24) = v664;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      if ( v671 == 14 )
                                                      {
                                                        v680 = (int)v667 >> 12;
                                                        v43 = (v666 & 0x80) == 0;
                                                        v684 = v664 & 0xFFFFFFFC;
                                                        v685 = v667 & 0xFFF;
                                                        if ( v43 )
                                                          v686 = (unsigned int *)(v684 - v685);
                                                        else
                                                          v686 = (unsigned int *)(v685 + v684);
                                                        v683 = *v686;
                                                      }
                                                      else
                                                      {
                                                        v680 = (v667 >> 8) & 0xF;
                                                        v681 = (v669 << 27)
                                                             | (v667 >> 12 << 30)
                                                             | ((unsigned int)v666 >> 10 << 31);
                                                        v682 = v664 & 0xFFFFFFFC;
                                                        if ( v671 == 12 )
                                                          v683 = v681 + v682;
                                                        else
                                                          v683 = v682 - v681;
                                                      }
                                                      *(_WORD *)(v662 + 2 * v663) = ((_WORD)v680 << 8) | 0x4800;
                                                      *(_WORD *)(v668 + 4) = v683;
                                                      v679 = 4;
                                                      *(_WORD *)(v668 + 2) = -8191;
                                                      *(_WORD *)(v668 + 6) = HIWORD(v683);
                                                    }
                                                    goto LABEL_1257;
                                                  }
                                                  v1986 = (v667 >> 11) & 1;
                                                  v672 = ((unsigned int)v666 >> 10) & 1;
                                                  v1984 = (v667 >> 13) & 1;
                                                  v673 = v1984 == v672;
                                                  v1994 = v1986 == v672;
                                                  if ( v1990 <= 1 )
                                                    break;
                                                  if ( v671 == 10 )
                                                  {
                                                    v1990 = 4 * (v666 & 0x3C0);
                                                    *(_WORD *)(v662 + 2 * v663) = (4 * (v666 & 0x3C0)) | 0xD000;
                                                    *(_WORD *)(v668 + 2) = -8189;
                                                    goto LABEL_1218;
                                                  }
                                                  v674 = 0;
LABEL_1220:
                                                  v1996 = 2 * v674;
                                                  *(_WORD *)(v668 + 2 * v674) = -1825;
                                                  *(_WORD *)(2 * v674 + v668 + 2) = -4096;
                                                  if ( v671 == 8 )
                                                  {
                                                    v675 = (2 * (v667 & 0x7FE))
                                                         | (v672 << 24)
                                                         | ((v666 & 0x3FF) << 12)
                                                         | (v673 << 23)
                                                         | (v1994 << 22);
                                                    if ( v672 )
                                                      v675 |= 0xFE000000;
                                                    v676 = v675 + v664;
                                                    goto LABEL_1233;
                                                  }
                                                  v677 = 2 * (v667 & 0x7FF);
                                                  if ( v671 == 9 )
                                                  {
                                                    v678 = v677
                                                         | (v672 << 24)
                                                         | ((v666 & 0x3FF) << 12)
                                                         | (v673 << 23)
                                                         | (v1994 << 22);
                                                  }
                                                  else
                                                  {
                                                    if ( v671 == 10 )
                                                    {
                                                      v678 = v677
                                                           | (v672 << 20)
                                                           | ((v666 & 0x3F) << 12)
                                                           | (v1986 << 19)
                                                           | (v1984 << 18);
                                                      if ( v672 )
                                                        v678 = ~(~(v678 << 11) >> 11);
                                                      goto LABEL_1232;
                                                    }
                                                    v678 = v677
                                                         | (v672 << 24)
                                                         | ((v666 & 0x3FF) << 12)
                                                         | (v673 << 23)
                                                         | (v1994 << 22);
                                                  }
                                                  if ( v672 )
                                                    v678 |= 0xFE000000;
LABEL_1232:
                                                  v676 = v678 + v664 + 1;
LABEL_1233:
                                                  v679 = v674 + 4;
                                                  *(_DWORD *)(v668 + v1996 + 4) = v676;
LABEL_1257:
                                                  v664 += 4;
                                                  v663 += v679;
                                                  v665 = v1991;
LABEL_1297:
                                                  if ( v665 >= (unsigned int)v1982 )
                                                  {
LABEL_1298:
                                                    v716 = v658 + 2 * v665;
                                                    *(_WORD *)(v662 + 2 * v663) = -1825;
                                                    v717 = (_WORD *)(v662 + 2 * v663);
                                                    v717[2] = v716;
                                                    v717[1] = -4096;
                                                    v717[3] = HIWORD(v716);
                                                    goto LABEL_1361;
                                                  }
                                                }
                                                *(_WORD *)(v662 + 2 * v663) = -3569;
                                                *(_WORD *)(v668 + 2) = 3593;
LABEL_1218:
                                                v674 = 2;
                                                goto LABEL_1220;
                                              }
                                              v1986 = v661 + v658;
                                              v718 = (char *)(v658 + 8);
                                              v719 = v661 >> 2;
                                              v720 = &v1983[-v658];
                                              for ( i45 = 0; ; ++i45 )
                                              {
                                                v722 = 4 * v660;
                                                if ( i45 == v719 )
                                                {
                                                  v735 = v1986;
                                                  *(_DWORD *)(v662 + 4 * v660) = -450891772;
                                                  *(_DWORD *)(v722 + v662 + 4) = v735;
LABEL_1361:
                                                  operator delete((void *)v604[3]);
                                                  v736 = v1988;
                                                  v604[3] = 0;
                                                  v737 = *((_DWORD *)v736 - 51);
                                                  (*(void (__fastcall **)(_DWORD, int))(*(_DWORD *)v737 + 216))(
                                                    v604[29],
                                                    v604[29] + 256);
                                                  if ( *v604 )
                                                  {
                                                    (*(void (__fastcall **)(unsigned int, int, int))(*(_DWORD *)v737 + 4))(
                                                      *v604 & 0xFFFFF000,
                                                      0x2000,
                                                      7);
                                                    v738 = *v604;
                                                    if ( (*v604 & 1) != 0 )
                                                    {
                                                      v739 = *v604 & 2;
                                                      if ( (v738 & 2) != 0 )
                                                      {
                                                        *(_WORD *)(v738 & 0xFFFFFFFE) = -16640;
                                                        v739 = 1;
                                                      }
                                                      v740 = 2 * v739;
                                                      *(_WORD *)((*v604 & 0xFFFFFFFE) + 2 * v739) = -1825;
                                                      *(_WORD *)((*v604 & 0xFFFFFFFE) + 2 * v739 + 2) = -4096;
                                                      *(_WORD *)(v740 + (*v604 & 0xFFFFFFFE) + 4) = v604[1];
                                                      *(_WORD *)(v740 + (*v604 & 0xFFFFFFFE) + 6) = *((_WORD *)v604 + 3);
                                                    }
                                                    else
                                                    {
                                                      *(_DWORD *)v738 = -450891772;
                                                      *(_DWORD *)(*v604 + 4) = v604[1];
                                                    }
                                                    v741 = (_DWORD *)v604[2];
                                                    if ( v741 )
                                                    {
                                                      v742 = v604[29];
                                                      if ( (*v604 & 1) != 0 )
                                                        v742 |= 1u;
                                                      *v741 = v742;
                                                    }
                                                    v743 = *v604;
                                                    v744 = *(void (__fastcall ***)(unsigned int, unsigned int, _DWORD))v737;
                                                    goto LABEL_2205;
                                                  }
                                                  goto LABEL_2206;
                                                }
                                                *(_DWORD *)(v1991 + 4 * v604[28]) = 4 * i45;
                                                *(_DWORD *)(v1984 + 4 * v604[28]++) = v722;
                                                v723 = *(_DWORD *)&v718[(_DWORD)v720 - 8];
                                                if ( (v723 & 0xFE000000) == 0xFA000000 )
                                                {
                                                  v724 = 17;
                                                }
                                                else if ( (v723 & 0xF000000) == 0xB000000 )
                                                {
                                                  v724 = 18;
                                                }
                                                else if ( (v723 & 0xF000000) == 0xA000000 )
                                                {
                                                  v724 = 19;
                                                }
                                                else if ( (v723 & 0xFF000FF) == 0x120001F )
                                                {
                                                  v724 = 20;
                                                }
                                                else if ( (v723 & 0xFEF0010) == 0x8F0000 )
                                                {
                                                  v724 = 21;
                                                }
                                                else if ( (v723 & 0xFFF0000) == 0x28F0000 )
                                                {
                                                  v724 = 22;
                                                }
                                                else if ( (v723 & 0xFFF0000) == 0x24F0000 )
                                                {
                                                  v724 = 23;
                                                }
                                                else if ( (v723 & 0xE5F0000) == 0x41F0000 )
                                                {
                                                  v724 = 25;
                                                }
                                                else if ( (v723 & 0xFE00FFF) == 0x1A0000F )
                                                {
                                                  v724 = 24;
                                                }
                                                else
                                                {
                                                  v724 = 26;
                                                }
                                                if ( (unsigned int)(v724 - 17) > 3 )
                                                {
                                                  if ( v724 == 21 )
                                                  {
                                                    for ( i46 = 12;
                                                          i46 == (unsigned __int16)v723 >> 12
                                                       || i46 == (*(_DWORD *)&v718[(_DWORD)v720 - 8] & 0xF);
                                                          --i46 )
                                                    {
                                                      ;
                                                    }
                                                    v660 += 6;
                                                    *(_DWORD *)(v662 + v722) = (i46 << 12) | 0xE52D0004;
                                                    v730 = (_DWORD *)(v722 + v662);
                                                    v730[2] = v723 & 0xFFF0FFFF | (i46 << 16);
                                                    v730[4] = -493883392;
                                                    v730[1] = (i46 << 12) | 0xE59F0008;
                                                    v730[3] = (i46 << 12) | 0xE49D0004;
                                                    v730[5] = v718;
                                                  }
                                                  else
                                                  {
                                                    if ( (unsigned int)(v724 - 22) <= 3 )
                                                    {
                                                      if ( (unsigned int)(v724 - 22) <= 1 || v724 == 25 )
                                                      {
                                                        v731 = *(_DWORD *)&v718[(_DWORD)v720 - 8] & 0xFFF;
                                                        switch ( v724 )
                                                        {
                                                          case 22:
                                                            v732 = &v718[v731];
                                                            goto LABEL_1354;
                                                          case 23:
                                                            v732 = &v718[-v731];
                                                            goto LABEL_1354;
                                                          case 25:
                                                            if ( (v723 & 0x800000) != 0 )
                                                            {
                                                              v732 = *(char **)&v718[v731];
LABEL_1354:
                                                              v1982 = v732;
                                                            }
                                                            else
                                                            {
                                                              v1982 = *(char **)&v718[-v731];
                                                            }
                                                            break;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        v1982 = v718;
                                                      }
                                                      v733 = v1982;
                                                      v660 += 3;
                                                      *(_DWORD *)(v662 + v722) = ((unsigned __int16)v723 >> 12 << 12)
                                                                               | 0xE51F0000;
                                                      v734 = v722 + v662;
                                                      *(_DWORD *)(v734 + 4) = -493883392;
                                                      *(_DWORD *)(v734 + 8) = v733;
                                                      goto LABEL_1359;
                                                    }
                                                    ++v660;
                                                    *(_DWORD *)(v662 + v722) = v723;
                                                  }
                                                }
                                                else
                                                {
                                                  if ( (unsigned int)(v724 - 17) <= 1 )
                                                  {
                                                    ++v660;
                                                    *(_DWORD *)(v662 + v722) = -493887484;
                                                  }
                                                  *(_DWORD *)(v662 + 4 * v660) = -450891772;
                                                  if ( v724 == 17 )
                                                  {
                                                    v725 = v723 & 0x1000000;
                                                    v726 = (4 * (v723 & 0xFFFFFF)) | ((v723 & 0x1000000u) >> 23);
                                                  }
                                                  else
                                                  {
                                                    v725 = v724 - 18;
                                                    if ( (unsigned int)(v724 - 18) > 1 )
                                                      v726 = 0;
                                                    else
                                                      v726 = v723 & 0xFFFFFF;
                                                    if ( (unsigned int)(v724 - 18) <= 1 )
                                                      v726 *= 4;
                                                  }
                                                  v727 = 4 * v660 + v662;
                                                  if ( v726 >> 25 )
                                                    v726 |= 0xFC000000;
                                                  v728 = v724 == 17;
                                                  if ( v724 == 17 )
                                                    v725 = (int)(v718 + 1);
                                                  else
                                                    v724 = (int)&v718[v726];
                                                  if ( v728 )
                                                    v724 = v726 + v725;
                                                  v660 += 2;
                                                  *(_DWORD *)(v727 + 4) = v724;
                                                }
LABEL_1359:
                                                v718 += 4;
                                              }
                                            }
                                            v650 = v637 + 2;
                                            v651 = HIBYTE(v2016[0]);
                                            if ( v637 + 2 >= v637 )
                                            {
                                              v652 = v637 + 1;
                                              if ( v637 + 1 < v637 )
                                              {
LABEL_1177:
                                                v640[v637++] = v651;
                                                v640[v652] = 0;
                                                goto LABEL_1178;
                                              }
                                              if ( v650 >= v652 )
                                              {
                                                if ( v640 == v622 )
                                                {
                                                  if ( v650 <= v652 )
                                                    goto LABEL_1178;
                                                  v653 = malloc(v637 + 2);
                                                  if ( !v653 )
                                                    goto LABEL_1178;
                                                  *v653 = 0;
                                                  goto LABEL_1176;
                                                }
                                                v653 = realloc(v640, v650);
                                                if ( v653 )
                                                {
LABEL_1176:
                                                  v640 = v653;
                                                  goto LABEL_1177;
                                                }
                                              }
                                            }
LABEL_1178:
                                            v645 = v637 + 6;
                                            goto LABEL_1180;
                                          }
                                          v646 = v637 + 2;
                                          v647 = BYTE1(v2016[0]);
                                          if ( v637 + 2 >= v637 )
                                          {
                                            v648 = v637 + 1;
                                            if ( v637 + 1 < v637 )
                                            {
LABEL_1166:
                                              v640[v637++] = v647;
                                              v640[v648] = 0;
                                              goto LABEL_1167;
                                            }
                                            if ( v646 >= v648 )
                                            {
                                              if ( v640 == v622 )
                                              {
                                                if ( v646 <= v648 )
                                                  goto LABEL_1167;
                                                v649 = malloc(v637 + 2);
                                                if ( !v649 )
                                                  goto LABEL_1167;
                                                *v649 = 0;
                                                goto LABEL_1165;
                                              }
                                              v649 = realloc(v640, v646);
                                              if ( v649 )
                                              {
LABEL_1165:
                                                v640 = v649;
                                                goto LABEL_1166;
                                              }
                                            }
                                          }
LABEL_1167:
                                          v645 = v637 + 8;
                                          goto LABEL_1180;
                                        }
                                      }
                                    }
                                    v637 = 0;
                                  }
                                  else
                                  {
                                    v637 = 0;
                                  }
                                  v640 = v622;
                                  goto LABEL_1143;
                                }
                                if ( v1995 == &byte_9[4] )
                                {
                                  v745 = *((_DWORD *)v1993 + 10);
                                  if ( v745 )
                                    **((_DWORD **)v1988 - 47) = &v1998[v745];
                                  goto LABEL_2207;
                                }
                                if ( v1995 == (_BYTE *)&dword_14 + 1 )
                                {
                                  v746 = *((_DWORD *)v1993 + 10);
                                  if ( v746 )
                                    **((_DWORD **)v1988 - 19) = &v1998[v746];
                                  v747 = v1988;
                                  v748 = v1997 + *((_DWORD *)v1993 + 9);
                                  v749 = *((_DWORD *)v1988 - 18);
                                  if ( !v748 )
                                    goto LABEL_2207;
                                  v750 = (_DWORD *)operator new(0x7Cu);
                                  v604 = v750;
                                  if ( !v750 )
                                    goto LABEL_2207;
                                  (*(void (__fastcall **)(_DWORD *, _DWORD, int))(*v1989 + 20))(v750, 0, 124);
                                  *v604 = v748;
                                  v604[1] = v749;
                                  if ( (v748 & 1) != 0 )
                                    v751 = 12;
                                  else
                                    v751 = 8;
                                  v752 = *((_DWORD *)v747 - 17);
                                  v604[30] = v751;
                                  v604[2] = v752;
                                  v753 = operator new[](v751);
                                  v1991 = v753;
                                  v604[3] = v753;
                                  if ( !v753 )
                                    goto LABEL_2206;
                                  v754 = v604[30];
                                  v1983 = (char *)(*v604 & 0xFFFFFFFE);
                                  v1986 = v754;
                                  if ( (char *)v1991 == v1983 )
                                  {
                                    memset(v2016, 0, sizeof(v2016));
                                    for ( i47 = 0; i47 != 256; ++i47 )
                                    {
                                      v756 = i47;
                                      v757 = 8;
                                      do
                                      {
                                        v758 = (v756 & 1) == 0;
                                        v759 = v756 >> 1;
                                        if ( (v756 & 1) != 0 )
                                          v756 = -128629065;
                                        else
                                          v756 >>= 1;
                                        if ( !v758 )
                                          v756 ^= v759;
                                        --v757;
                                      }
                                      while ( v757 );
                                      v2016[i47] = v756;
                                    }
                                    v760 = 0;
                                    v761 = -1;
                                    do
                                    {
                                      v762 = *(unsigned __int8 *)(v1991 + v760++);
                                      v761 = (v2016[v762 ^ (unsigned __int8)v761] ^ (v761 >> 8)) + 16;
                                    }
                                    while ( v760 != 4 );
                                    v763 = ~v761;
                                    switch ( v754 )
                                    {
                                      case 0:
                                      case 1:
                                      case 2:
                                        v764 = 0;
                                        break;
                                      case 3:
                                        v764 = 3;
                                        break;
                                      case 4:
                                        v764 = v763 + 517762882;
                                        break;
                                      case 5:
                                        v764 = v763 + 517762880;
                                        break;
                                      case 6:
                                        v764 = 7;
                                        break;
                                      case 7:
                                        v764 = 6;
                                        break;
                                      default:
                                        v764 = v754 + 15;
                                        break;
                                    }
                                    v1986 = v764 % 16;
                                  }
                                  v2016[0] = -1523182318;
                                  LOBYTE(v2016[1]) = 0;
                                  v765 = strlen((const char *)v2016);
                                  v766 = *v1989;
                                  v767 = (char *)*((_DWORD *)v1988 - 49);
                                  v768 = v765;
                                  if ( v765
                                    && (v769 = v765 + 1, v769 > v768)
                                    && (v770 = (char *)malloc(v769), (v1982 = v770) != 0) )
                                  {
                                    (*(void (__fastcall **)(char *, _DWORD *, size_t))(v766 + 24))(v770, v2016, v768);
                                    v1982[v768] = 0;
                                  }
                                  else
                                  {
                                    v768 = 0;
                                    v1982 = v767;
                                  }
                                  v2015 = (_BYTE *)&loc_A65562;
                                  v771 = strlen((const char *)&v2015);
                                  v772 = *v1989;
                                  v773 = v771;
                                  if ( v771
                                    && (v774 = v771 + 1, v774 > v773)
                                    && (v775 = (char *)malloc(v774), (v776 = v775) != 0) )
                                  {
                                    (*(void (__fastcall **)(char *, char **, unsigned int))(v772 + 24))(
                                      v775,
                                      &v2015,
                                      v773);
                                    v776[v773] = 0;
                                  }
                                  else
                                  {
                                    v773 = 0;
                                    v776 = v767;
                                  }
                                  v777 = v773 + 2;
                                  v778 = v2016[0];
                                  if ( v773 + 2 >= v773 )
                                  {
                                    v779 = v773 + 1;
                                    if ( v773 + 1 < v773 )
                                    {
LABEL_1422:
                                      v776[v773++] = v778;
                                      v776[v779] = 0;
                                      goto LABEL_1423;
                                    }
                                    if ( v777 < v779 )
                                      goto LABEL_1423;
                                    if ( v776 != v767 )
                                    {
                                      v780 = (char *)realloc(v776, v777);
                                      if ( !v780 )
                                        goto LABEL_1423;
                                      goto LABEL_1421;
                                    }
                                    if ( v777 > v779 )
                                    {
                                      v780 = (char *)malloc(v773 + 2);
                                      if ( v780 )
                                      {
                                        *v780 = 0;
LABEL_1421:
                                        v776 = v780;
                                        goto LABEL_1422;
                                      }
                                    }
                                  }
LABEL_1423:
                                  v1990 = *v1989;
                                  if ( v1983 )
                                  {
                                    v781 = strlen(v1983);
                                    v782 = v781;
                                    if ( v781 )
                                    {
                                      v783 = v781 + 1;
                                      if ( v783 > v782 )
                                      {
                                        v784 = (char *)malloc(v783);
                                        v785 = v784;
                                        if ( v784 )
                                        {
                                          (*(void (__fastcall **)(char *, char *, unsigned int))(v1990 + 24))(
                                            v784,
                                            v1983,
                                            v782);
                                          v785[v782] = 0;
LABEL_1430:
                                          if ( v768 != 8 )
                                          {
                                            if ( v768 != 9 )
                                            {
                                              if ( v768 != 7 )
                                              {
                                                v790 = v773 - 4;
                                                goto LABEL_1467;
                                              }
                                              v786 = v782 + 2;
                                              v787 = BYTE1(v2015);
                                              if ( v782 + 2 < v782 )
                                                goto LABEL_1443;
                                              v788 = v782 + 1;
                                              if ( v782 + 1 < v782 )
                                                goto LABEL_1442;
                                              if ( v786 >= v788 )
                                              {
                                                if ( v785 == v767 )
                                                {
                                                  if ( v786 <= v788 )
                                                    goto LABEL_1443;
                                                  v789 = (char *)malloc(v782 + 2);
                                                  if ( !v789 )
                                                    goto LABEL_1443;
                                                  *v789 = 0;
                                                  goto LABEL_1441;
                                                }
                                                v789 = (char *)realloc(v785, v786);
                                                if ( v789 )
                                                {
LABEL_1441:
                                                  v785 = v789;
LABEL_1442:
                                                  v785[v782++] = v787;
                                                  v785[v788] = 0;
                                                }
                                              }
LABEL_1443:
                                              v790 = v782 + 20;
LABEL_1467:
                                              if ( v785 != v767 )
                                                free(v785);
                                              if ( v776 != v767 )
                                                free(v776);
                                              if ( v1982 != v767 )
                                                free(v1982);
                                              while ( v790 < v1986 )
                                              {
                                                *(_BYTE *)(v1991 + v790) = v1983[v790];
                                                ++v790;
                                              }
                                              v799 = **((_DWORD **)v1988 - 51);
                                              v1991 = *((_DWORD *)v1988 - 51);
                                              v800 = *(_DWORD *)(v799 + 128);
                                              if ( !v800 )
                                                v800 = *((_DWORD *)v1988 - 30);
                                              v801 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                              v802 = v800 + 84 * (*v801)++;
                                              v604[29] = v802;
                                              (*(void (__fastcall **)(unsigned int, unsigned int, int))(v799 + 4))(
                                                v802 & 0xFFFFF000,
                                                ((v802 + 4351) & 0xFFFFF000) - (v802 & 0xFFFFF000),
                                                7);
                                              v803 = *v604;
                                              v804 = *v604 & 1;
                                              v805 = v604[30];
                                              v806 = v604[29];
                                              v1983 = (char *)v604[3];
                                              v1982 = (char *)(v604 + 4);
                                              v1986 = (unsigned int)(v604 + 8);
                                              if ( v804 )
                                              {
                                                v807 = 0;
                                                v808 = v803 + 3;
                                                v809 = 0;
                                                v1984 = v805 >> 1;
                                                while ( 1 )
                                                {
                                                  v810 = *(unsigned __int16 *)&v1983[2 * v809];
                                                  if ( (unsigned int)((v810 >> 11) - 29) > 2 )
                                                  {
                                                    v840 = (_WORD *)(v806 + 2 * v807);
                                                    if ( (v810 & 0xF000) == 0xD000 )
                                                    {
                                                      v844 = 2 * (unsigned __int8)v810;
                                                      if ( v844 >> 8 )
                                                        v844 |= 0xFFFFFF00;
                                                      v847 = v844 + v808;
                                                      *(_WORD *)(v806 + 2 * v807) = v810 & 0xFF00;
                                                      v840[1] = -8189;
                                                      v849 = 2;
                                                    }
                                                    else
                                                    {
                                                      v841 = v810 & 0xF800;
                                                      if ( v841 == 57344 )
                                                      {
                                                        v845 = v810 & 0x7FF;
                                                        v846 = 2 * v845;
                                                        if ( (unsigned int)(2 * v845) >> 11 )
                                                          v846 = ~((unsigned int)~(v845 << 22) >> 21);
                                                        v847 = v846 + v808;
                                                      }
                                                      else
                                                      {
                                                        if ( (v810 & 0xFFFFFFF8) != 0x4778 )
                                                        {
                                                          v842 = v810 & 0xFF78;
                                                          if ( v842 == 17528 )
                                                          {
                                                            for ( i48 = 7;
                                                                  i48 == (v810 & 7
                                                                        | ((unsigned __int8)(v810 & 0x80) >> 4));
                                                                  --i48 )
                                                            {
                                                              ;
                                                            }
                                                            v852 = 1 << i48;
                                                            *(_WORD *)(v806 + 2 * v807) = v852 | 0xB400;
                                                            v840[2] = v810 & 0xFF87 | (8 * i48);
                                                            v840[6] = v808;
                                                            v840[1] = ((_WORD)i48 << 8) | 0x4802;
                                                            v840[3] = v852 | 0xBC00;
                                                            v840[4] = -8190;
                                                            v840[5] = -16640;
                                                            v840[7] = HIWORD(v808);
                                                            v851 = 8;
                                                          }
                                                          else
                                                          {
                                                            if ( v842 == 18040 )
                                                            {
                                                              v843 = 4;
                                                            }
                                                            else if ( v841 == 40960 )
                                                            {
                                                              v843 = 5;
                                                            }
                                                            else if ( v841 == 18432 )
                                                            {
                                                              v843 = 6;
                                                            }
                                                            else if ( (v810 & 0xF500) == 0xB100 )
                                                            {
                                                              v843 = 7;
                                                            }
                                                            else
                                                            {
                                                              v843 = 26;
                                                            }
                                                            if ( (unsigned int)(v843 - 4) > 2 )
                                                            {
                                                              if ( v843 == 7 )
                                                              {
                                                                *(_WORD *)(v806 + 2 * v807) = v810 & 0xFD07;
                                                                v859 = (((unsigned __int16)(v810 & 0x200) >> 3)
                                                                      | ((unsigned __int8)(v810 & 0xF8) >> 2))
                                                                     + v808
                                                                     + 1;
                                                                v840[2] = -1825;
                                                                v840[4] = v859;
                                                                v840[3] = -4096;
                                                                v851 = 6;
                                                                v840[1] = -8189;
                                                                v840[5] = HIWORD(v859);
                                                              }
                                                              else
                                                              {
                                                                *(_WORD *)(v806 + 2 * v807) = v810;
                                                                v840[1] = -16640;
                                                                v851 = 2;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              if ( v843 == 4 )
                                                              {
                                                                LOWORD(v853) = *(_WORD *)&v1983[2 * v809] & 7;
                                                                v854 = v808;
                                                              }
                                                              else
                                                              {
                                                                v855 = v843 == 5;
                                                                v856 = v808 & 0xFFFFFFFC;
                                                                v857 = (unsigned __int8)v810;
                                                                v858 = v810 & 0x700;
                                                                if ( v855 )
                                                                  v854 = v857 + v856;
                                                                else
                                                                  v854 = *(_DWORD *)(v856 + 4 * v857);
                                                                v853 = v858 >> 8;
                                                                if ( v855 )
                                                                  v854 *= 4;
                                                              }
                                                              *(_WORD *)(v806 + 2 * v807) = ((_WORD)v853 << 8) | 0x4800;
                                                              v840[2] = v854;
                                                              v851 = 4;
                                                              v840[1] = -8191;
                                                              v840[3] = HIWORD(v854);
                                                            }
                                                          }
                                                          goto LABEL_1583;
                                                        }
                                                        v847 = v808;
                                                      }
                                                      v849 = 0;
                                                    }
                                                    v840[v849] = -1825;
                                                    v850 = &v840[v849];
                                                    v851 = v849 + 4;
                                                    v850[2] = v847;
                                                    v850[1] = -4096;
                                                    v850[3] = HIWORD(v847);
LABEL_1583:
                                                    v808 += 2;
                                                    v807 += v851;
                                                    ++v809;
                                                    goto LABEL_1584;
                                                  }
                                                  v1982 = (char *)(v809 + 2);
                                                  if ( v809 + 2 > v1984 )
                                                    goto LABEL_2130;
                                                  v811 = *(unsigned __int16 *)&v1983[2 * v809 + 2];
                                                  v812 = v806 + 2 * v807;
                                                  v813 = v811 | (v810 << 16);
                                                  v814 = v813 & 0xF800D000;
                                                  if ( (v813 & 0xF800D000) == 0xF000C000 )
                                                  {
                                                    v815 = 8;
                                                  }
                                                  else
                                                  {
                                                    switch ( v814 )
                                                    {
                                                      case 0xF000D000:
                                                        v815 = 9;
                                                        break;
                                                      case 0xF0008000:
                                                        v815 = 10;
                                                        break;
                                                      case 0xF0009000:
                                                        v815 = 11;
                                                        break;
                                                      default:
                                                        if ( (v813 & 0xFBFF8000) == 0xF2AF0000 )
                                                        {
                                                          v815 = 12;
                                                        }
                                                        else if ( (v813 & 0xFBFF8000) == 0xF20F0000 )
                                                        {
                                                          v815 = 13;
                                                        }
                                                        else if ( (v813 & 0xFF7F0000) == 0xF85F0000 )
                                                        {
                                                          v815 = 14;
                                                        }
                                                        else if ( (v811 & 0xFFFF00F0 | (v810 << 16)) == 0xE8DF0000 )
                                                        {
                                                          v815 = 15;
                                                        }
                                                        else if ( (v811 & 0xFFFF00F0 | (v810 << 16)) == 0xE8DF0010 )
                                                        {
                                                          v815 = 16;
                                                        }
                                                        else
                                                        {
                                                          v815 = 26;
                                                        }
                                                        break;
                                                    }
                                                  }
                                                  v1994 = v815 - 8;
                                                  if ( (unsigned int)(v815 - 8) > 3 )
                                                  {
                                                    if ( (unsigned int)(v815 - 12) > 2 )
                                                    {
                                                      if ( (unsigned int)(v815 - 15) > 1 )
                                                      {
                                                        *(_WORD *)(v806 + 2 * v807) = v810;
                                                        v823 = 2;
                                                        *(_WORD *)(v812 + 2) = v811;
                                                      }
                                                      else
                                                      {
                                                        v831 = v811 & 0xF;
                                                        for ( i49 = 7; i49 == v831; --i49 )
                                                          ;
                                                        for ( i50 = 7; i50 == v831 || i50 == i49; --i50 )
                                                          ;
                                                        v834 = 1 << i50;
                                                        *(_WORD *)(v806 + 2 * v807) = v834 | 0xB400;
                                                        *(_WORD *)(v812 + 6) = i49 | 0xEB00;
                                                        v835 = (_WORD)i49 << 8;
                                                        *(_WORD *)(v812 + 2) = ((_WORD)i49 << 8) | 0x4805;
                                                        v836 = i50;
                                                        *(_WORD *)(v812 + 4) = i50 | (8 * v831) | 0x4600;
                                                        v837 = (_WORD)i50 << 8;
                                                        v838 = 8 * i50;
                                                        if ( v815 == 15 )
                                                        {
                                                          *(_WORD *)(v812 + 8) = v837 | v836;
                                                          v839 = v836 | 0x7800;
                                                        }
                                                        else
                                                        {
                                                          *(_WORD *)(v812 + 8) = v836 | 0x40 | v837;
                                                          v839 = v836 | 0x8800;
                                                        }
                                                        *(_WORD *)(v812 + 10) = v838 | v839;
                                                        *(_WORD *)(v812 + 14) = v836 | v835 | 0x40;
                                                        *(_WORD *)(v812 + 18) = v834 | 0xBC00;
                                                        *(_WORD *)(v812 + 12) = i49 | 0xEB00;
                                                        *(_WORD *)(v812 + 22) = -16640;
                                                        v823 = 14;
                                                        *(_WORD *)(v812 + 16) = v835 | 0x3001;
                                                        *(_WORD *)(v812 + 20) = (8 * i49) | 0x4700;
                                                        *(_DWORD *)(v812 + 24) = v808;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      if ( v815 == 14 )
                                                      {
                                                        v824 = (int)v811 >> 12;
                                                        v43 = (v810 & 0x80) == 0;
                                                        v828 = v808 & 0xFFFFFFFC;
                                                        v829 = v811 & 0xFFF;
                                                        if ( v43 )
                                                          v830 = (unsigned int *)(v828 - v829);
                                                        else
                                                          v830 = (unsigned int *)(v829 + v828);
                                                        v827 = *v830;
                                                      }
                                                      else
                                                      {
                                                        v824 = (v811 >> 8) & 0xF;
                                                        v825 = (v813 << 27)
                                                             | (v811 >> 12 << 30)
                                                             | ((unsigned int)v810 >> 10 << 31);
                                                        v826 = v808 & 0xFFFFFFFC;
                                                        if ( v815 == 12 )
                                                          v827 = v825 + v826;
                                                        else
                                                          v827 = v826 - v825;
                                                      }
                                                      *(_WORD *)(v806 + 2 * v807) = ((_WORD)v824 << 8) | 0x4800;
                                                      *(_WORD *)(v812 + 4) = v827;
                                                      v823 = 4;
                                                      *(_WORD *)(v812 + 2) = -8191;
                                                      *(_WORD *)(v812 + 6) = HIWORD(v827);
                                                    }
                                                    goto LABEL_1544;
                                                  }
                                                  v1990 = (v811 >> 11) & 1;
                                                  v816 = ((unsigned int)v810 >> 10) & 1;
                                                  v1986 = (v811 >> 13) & 1;
                                                  v817 = v1986 == v816;
                                                  v1996 = v1990 == v816;
                                                  if ( v1994 <= 1 )
                                                    break;
                                                  if ( v815 == 10 )
                                                  {
                                                    v1994 = 4 * (v810 & 0x3C0);
                                                    *(_WORD *)(v806 + 2 * v807) = (4 * (v810 & 0x3C0)) | 0xD000;
                                                    *(_WORD *)(v812 + 2) = -8189;
                                                    goto LABEL_1505;
                                                  }
                                                  v818 = 0;
LABEL_1507:
                                                  v2000 = 2 * v818;
                                                  *(_WORD *)(v812 + 2 * v818) = -1825;
                                                  *(_WORD *)(2 * v818 + v812 + 2) = -4096;
                                                  if ( v815 == 8 )
                                                  {
                                                    v819 = (2 * (v811 & 0x7FE))
                                                         | (v816 << 24)
                                                         | ((v810 & 0x3FF) << 12)
                                                         | (v817 << 23)
                                                         | (v1996 << 22);
                                                    if ( v816 )
                                                      v819 |= 0xFE000000;
                                                    v820 = v819 + v808;
                                                    goto LABEL_1520;
                                                  }
                                                  v821 = 2 * (v811 & 0x7FF);
                                                  if ( v815 == 9 )
                                                  {
                                                    v822 = v821
                                                         | (v816 << 24)
                                                         | ((v810 & 0x3FF) << 12)
                                                         | (v817 << 23)
                                                         | (v1996 << 22);
                                                  }
                                                  else
                                                  {
                                                    if ( v815 == 10 )
                                                    {
                                                      v822 = v821
                                                           | (v816 << 20)
                                                           | ((v810 & 0x3F) << 12)
                                                           | (v1990 << 19)
                                                           | (v1986 << 18);
                                                      if ( v816 )
                                                        v822 = ~(~(v822 << 11) >> 11);
                                                      goto LABEL_1519;
                                                    }
                                                    v822 = v821
                                                         | (v816 << 24)
                                                         | ((v810 & 0x3FF) << 12)
                                                         | (v817 << 23)
                                                         | (v1996 << 22);
                                                  }
                                                  if ( v816 )
                                                    v822 |= 0xFE000000;
LABEL_1519:
                                                  v820 = v822 + v808 + 1;
LABEL_1520:
                                                  v823 = v818 + 4;
                                                  *(_DWORD *)(v812 + v2000 + 4) = v820;
LABEL_1544:
                                                  v808 += 4;
                                                  v807 += v823;
                                                  v809 = (unsigned int)v1982;
LABEL_1584:
                                                  if ( v809 >= v1984 )
                                                    goto LABEL_2130;
                                                }
                                                *(_WORD *)(v806 + 2 * v807) = -3569;
                                                *(_WORD *)(v812 + 2) = 3593;
LABEL_1505:
                                                v818 = 2;
                                                goto LABEL_1507;
                                              }
                                              v1990 = v805 + v803;
                                              v860 = (char *)(v803 + 8);
                                              v861 = v805 >> 2;
                                              v862 = &v1983[-v803];
                                              for ( i51 = 0; ; ++i51 )
                                              {
                                                v864 = 4 * v804;
                                                if ( i51 == v861 )
                                                  goto LABEL_1919;
                                                *(_DWORD *)&v1982[4 * v604[28]] = 4 * i51;
                                                *(_DWORD *)(v1986 + 4 * v604[28]++) = v864;
                                                v865 = *(_DWORD *)&v860[(_DWORD)v862 - 8];
                                                if ( (v865 & 0xFE000000) == 0xFA000000 )
                                                {
                                                  v866 = 17;
                                                }
                                                else if ( (v865 & 0xF000000) == 0xB000000 )
                                                {
                                                  v866 = 18;
                                                }
                                                else if ( (v865 & 0xF000000) == 0xA000000 )
                                                {
                                                  v866 = 19;
                                                }
                                                else if ( (v865 & 0xFF000FF) == 0x120001F )
                                                {
                                                  v866 = 20;
                                                }
                                                else if ( (v865 & 0xFEF0010) == 0x8F0000 )
                                                {
                                                  v866 = 21;
                                                }
                                                else if ( (v865 & 0xFFF0000) == 0x28F0000 )
                                                {
                                                  v866 = 22;
                                                }
                                                else if ( (v865 & 0xFFF0000) == 0x24F0000 )
                                                {
                                                  v866 = 23;
                                                }
                                                else if ( (v865 & 0xE5F0000) == 0x41F0000 )
                                                {
                                                  v866 = 25;
                                                }
                                                else if ( (v865 & 0xFE00FFF) == 0x1A0000F )
                                                {
                                                  v866 = 24;
                                                }
                                                else
                                                {
                                                  v866 = 26;
                                                }
                                                if ( (unsigned int)(v866 - 17) > 3 )
                                                {
                                                  if ( v866 == 21 )
                                                  {
                                                    for ( i52 = 12;
                                                          i52 == (unsigned __int16)v865 >> 12
                                                       || i52 == (*(_DWORD *)&v860[(_DWORD)v862 - 8] & 0xF);
                                                          --i52 )
                                                    {
                                                      ;
                                                    }
                                                    v804 += 6;
                                                    *(_DWORD *)(v806 + v864) = (i52 << 12) | 0xE52D0004;
                                                    v872 = (_DWORD *)(v864 + v806);
                                                    v872[2] = v865 & 0xFFF0FFFF | (i52 << 16);
                                                    v872[4] = -493883392;
                                                    v872[1] = (i52 << 12) | 0xE59F0008;
                                                    v872[3] = (i52 << 12) | 0xE49D0004;
                                                    v872[5] = v860;
                                                  }
                                                  else
                                                  {
                                                    if ( (unsigned int)(v866 - 22) <= 3 )
                                                    {
                                                      if ( (unsigned int)(v866 - 22) <= 1 || v866 == 25 )
                                                      {
                                                        v873 = *(_DWORD *)&v860[(_DWORD)v862 - 8] & 0xFFF;
                                                        switch ( v866 )
                                                        {
                                                          case 22:
                                                            v874 = &v860[v873];
                                                            goto LABEL_1641;
                                                          case 23:
                                                            v874 = &v860[-v873];
                                                            goto LABEL_1641;
                                                          case 25:
                                                            if ( (v865 & 0x800000) != 0 )
                                                            {
                                                              v874 = *(char **)&v860[v873];
LABEL_1641:
                                                              v1984 = (unsigned int)v874;
                                                            }
                                                            else
                                                            {
                                                              v1984 = *(_DWORD *)&v860[-v873];
                                                            }
                                                            break;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        v1984 = (unsigned int)v860;
                                                      }
                                                      v875 = v1984;
                                                      v804 += 3;
                                                      *(_DWORD *)(v806 + v864) = ((unsigned __int16)v865 >> 12 << 12)
                                                                               | 0xE51F0000;
                                                      v876 = v864 + v806;
                                                      *(_DWORD *)(v876 + 4) = -493883392;
                                                      *(_DWORD *)(v876 + 8) = v875;
                                                      goto LABEL_1646;
                                                    }
                                                    ++v804;
                                                    *(_DWORD *)(v806 + v864) = v865;
                                                  }
                                                }
                                                else
                                                {
                                                  if ( (unsigned int)(v866 - 17) <= 1 )
                                                  {
                                                    ++v804;
                                                    *(_DWORD *)(v806 + v864) = -493887484;
                                                  }
                                                  *(_DWORD *)(v806 + 4 * v804) = -450891772;
                                                  if ( v866 == 17 )
                                                  {
                                                    v867 = v865 & 0x1000000;
                                                    v868 = (4 * (v865 & 0xFFFFFF)) | ((v865 & 0x1000000u) >> 23);
                                                  }
                                                  else
                                                  {
                                                    v867 = v866 - 18;
                                                    if ( (unsigned int)(v866 - 18) > 1 )
                                                      v868 = 0;
                                                    else
                                                      v868 = v865 & 0xFFFFFF;
                                                    if ( (unsigned int)(v866 - 18) <= 1 )
                                                      v868 *= 4;
                                                  }
                                                  v869 = 4 * v804 + v806;
                                                  if ( v868 >> 25 )
                                                    v868 |= 0xFC000000;
                                                  v870 = v866 == 17;
                                                  if ( v866 == 17 )
                                                    v867 = (int)(v860 + 1);
                                                  else
                                                    v866 = (int)&v860[v868];
                                                  if ( v870 )
                                                    v866 = v868 + v867;
                                                  v804 += 2;
                                                  *(_DWORD *)(v869 + 4) = v866;
                                                }
LABEL_1646:
                                                v860 += 4;
                                              }
                                            }
                                            v795 = v782 + 2;
                                            v796 = HIBYTE(v2016[0]);
                                            if ( v782 + 2 >= v782 )
                                            {
                                              v797 = v782 + 1;
                                              if ( v782 + 1 < v782 )
                                              {
LABEL_1464:
                                                v785[v782++] = v796;
                                                v785[v797] = 0;
                                                goto LABEL_1465;
                                              }
                                              if ( v795 >= v797 )
                                              {
                                                if ( v785 == v767 )
                                                {
                                                  if ( v795 <= v797 )
                                                    goto LABEL_1465;
                                                  v798 = (char *)malloc(v782 + 2);
                                                  if ( !v798 )
                                                    goto LABEL_1465;
                                                  *v798 = 0;
                                                  goto LABEL_1463;
                                                }
                                                v798 = (char *)realloc(v785, v795);
                                                if ( v798 )
                                                {
LABEL_1463:
                                                  v785 = v798;
                                                  goto LABEL_1464;
                                                }
                                              }
                                            }
LABEL_1465:
                                            v790 = v782 + 6;
                                            goto LABEL_1467;
                                          }
                                          v791 = v782 + 2;
                                          v792 = BYTE1(v2016[0]);
                                          if ( v782 + 2 >= v782 )
                                          {
                                            v793 = v782 + 1;
                                            if ( v782 + 1 < v782 )
                                            {
LABEL_1453:
                                              v785[v782++] = v792;
                                              v785[v793] = 0;
                                              goto LABEL_1454;
                                            }
                                            if ( v791 >= v793 )
                                            {
                                              if ( v785 == v767 )
                                              {
                                                if ( v791 <= v793 )
                                                  goto LABEL_1454;
                                                v794 = (char *)malloc(v782 + 2);
                                                if ( !v794 )
                                                  goto LABEL_1454;
                                                *v794 = 0;
                                                goto LABEL_1452;
                                              }
                                              v794 = (char *)realloc(v785, v791);
                                              if ( v794 )
                                              {
LABEL_1452:
                                                v785 = v794;
                                                goto LABEL_1453;
                                              }
                                            }
                                          }
LABEL_1454:
                                          v790 = v782 + 8;
                                          goto LABEL_1467;
                                        }
                                      }
                                    }
                                    v782 = 0;
                                  }
                                  else
                                  {
                                    v782 = 0;
                                  }
                                  v785 = v767;
                                  goto LABEL_1430;
                                }
                                if ( v1995 == &byte_4 )
                                {
                                  v877 = *((_DWORD *)v1993 + 10);
                                  if ( v877 )
                                    **((_DWORD **)v1988 - 19) = &v1998[v877];
                                  v878 = v1988;
                                  v879 = v1997 + *((_DWORD *)v1993 + 9);
                                  v880 = *((_DWORD *)v1988 - 16);
                                  if ( !v879 )
                                    goto LABEL_2207;
                                  v881 = (_DWORD *)operator new(0x7Cu);
                                  v604 = v881;
                                  if ( !v881 )
                                    goto LABEL_2207;
                                  (*(void (__fastcall **)(_DWORD *, _DWORD, int))(*v1989 + 20))(v881, 0, 124);
                                  *v604 = v879;
                                  v604[1] = v880;
                                  if ( (v879 & 1) != 0 )
                                    v882 = 12;
                                  else
                                    v882 = 8;
                                  v883 = *((_DWORD *)v878 - 15);
                                  v604[30] = v882;
                                  v604[2] = v883;
                                  v884 = operator new[](v882);
                                  v1991 = v884;
                                  v604[3] = v884;
                                  if ( !v884 )
                                    goto LABEL_2206;
                                  v885 = v604[30];
                                  v1983 = (char *)(*v604 & 0xFFFFFFFE);
                                  v1984 = v885;
                                  if ( (char *)v1991 == v1983 )
                                  {
                                    memset(v2016, 0, sizeof(v2016));
                                    for ( i53 = 0; i53 != 256; ++i53 )
                                    {
                                      v887 = i53;
                                      v888 = 8;
                                      do
                                      {
                                        v889 = (v887 & 1) == 0;
                                        v890 = v887 >> 1;
                                        if ( (v887 & 1) != 0 )
                                          v887 = -128629065;
                                        else
                                          v887 >>= 1;
                                        if ( !v889 )
                                          v887 ^= v890;
                                        --v888;
                                      }
                                      while ( v888 );
                                      v2016[i53] = v887;
                                    }
                                    v891 = 0;
                                    v892 = -1;
                                    do
                                    {
                                      v893 = *(unsigned __int8 *)(v1991 + v891++);
                                      v892 = (v2016[v893 ^ (unsigned __int8)v892] ^ (v892 >> 8)) + 16;
                                    }
                                    while ( v891 != 4 );
                                    v894 = ~v892;
                                    switch ( v885 )
                                    {
                                      case 0:
                                      case 1:
                                      case 2:
                                        v895 = 0;
                                        break;
                                      case 3:
                                        v895 = 3;
                                        break;
                                      case 4:
                                        v895 = v894 + 517762882;
                                        break;
                                      case 5:
                                        v895 = v894 + 517762880;
                                        break;
                                      case 6:
                                        v895 = 7;
                                        break;
                                      case 7:
                                        v895 = 6;
                                        break;
                                      default:
                                        v895 = v885 + 15;
                                        break;
                                    }
                                    v1984 = v895 % 16;
                                  }
                                  v2016[0] = -1523182318;
                                  LOBYTE(v2016[1]) = 0;
                                  v896 = strlen((const char *)v2016);
                                  v897 = *v1989;
                                  v898 = (char *)*((_DWORD *)v1988 - 49);
                                  v899 = v896;
                                  if ( v896
                                    && (v900 = v896 + 1, v900 > v899)
                                    && (v901 = (char *)malloc(v900), (v1982 = v901) != 0) )
                                  {
                                    (*(void (__fastcall **)(char *, _DWORD *, size_t))(v897 + 24))(v901, v2016, v899);
                                    v1982[v899] = 0;
                                  }
                                  else
                                  {
                                    v899 = 0;
                                    v1982 = v898;
                                  }
                                  v2015 = (_BYTE *)&loc_A65562;
                                  v902 = strlen((const char *)&v2015);
                                  v903 = *v1989;
                                  v904 = v902;
                                  if ( v902
                                    && (v905 = v902 + 1, v905 > v904)
                                    && (v906 = (char *)malloc(v905), (v907 = v906) != 0) )
                                  {
                                    (*(void (__fastcall **)(char *, char **, unsigned int))(v903 + 24))(
                                      v906,
                                      &v2015,
                                      v904);
                                    v907[v904] = 0;
                                  }
                                  else
                                  {
                                    v904 = 0;
                                    v907 = v898;
                                  }
                                  v908 = v904 + 2;
                                  v909 = v2016[0];
                                  if ( v904 + 2 >= v904 )
                                  {
                                    v910 = v904 + 1;
                                    if ( v904 + 1 < v904 )
                                    {
LABEL_1694:
                                      v907[v904++] = v909;
                                      v907[v910] = 0;
                                      goto LABEL_1695;
                                    }
                                    if ( v908 < v910 )
                                      goto LABEL_1695;
                                    if ( v907 != v898 )
                                    {
                                      v911 = (char *)realloc(v907, v908);
                                      if ( !v911 )
                                        goto LABEL_1695;
                                      goto LABEL_1693;
                                    }
                                    if ( v908 > v910 )
                                    {
                                      v911 = (char *)malloc(v904 + 2);
                                      if ( v911 )
                                      {
                                        *v911 = 0;
LABEL_1693:
                                        v907 = v911;
                                        goto LABEL_1694;
                                      }
                                    }
                                  }
LABEL_1695:
                                  v1990 = *v1989;
                                  if ( v1983 )
                                  {
                                    v912 = strlen(v1983);
                                    v913 = v912;
                                    if ( v912 )
                                    {
                                      v914 = v912 + 1;
                                      if ( v914 > v913 )
                                      {
                                        v915 = (char *)malloc(v914);
                                        v916 = v915;
                                        if ( v915 )
                                        {
                                          (*(void (__fastcall **)(char *, char *, unsigned int))(v1990 + 24))(
                                            v915,
                                            v1983,
                                            v913);
                                          v916[v913] = 0;
LABEL_1702:
                                          if ( v899 != 8 )
                                          {
                                            if ( v899 != 9 )
                                            {
                                              if ( v899 != 7 )
                                              {
                                                v921 = v904 - 4;
                                                goto LABEL_1739;
                                              }
                                              v917 = v913 + 2;
                                              v918 = BYTE1(v2015);
                                              if ( v913 + 2 < v913 )
                                                goto LABEL_1715;
                                              v919 = v913 + 1;
                                              if ( v913 + 1 < v913 )
                                                goto LABEL_1714;
                                              if ( v917 >= v919 )
                                              {
                                                if ( v916 == v898 )
                                                {
                                                  if ( v917 <= v919 )
                                                    goto LABEL_1715;
                                                  v920 = (char *)malloc(v913 + 2);
                                                  if ( !v920 )
                                                    goto LABEL_1715;
                                                  *v920 = 0;
                                                  goto LABEL_1713;
                                                }
                                                v920 = (char *)realloc(v916, v917);
                                                if ( v920 )
                                                {
LABEL_1713:
                                                  v916 = v920;
LABEL_1714:
                                                  v916[v913++] = v918;
                                                  v916[v919] = 0;
                                                }
                                              }
LABEL_1715:
                                              v921 = v913 + 20;
LABEL_1739:
                                              if ( v916 != v898 )
                                                free(v916);
                                              if ( v907 != v898 )
                                                free(v907);
                                              if ( v1982 != v898 )
                                                free(v1982);
                                              while ( v921 < v1984 )
                                              {
                                                *(_BYTE *)(v1991 + v921) = v1983[v921];
                                                ++v921;
                                              }
                                              v930 = **((_DWORD **)v1988 - 51);
                                              v1991 = *((_DWORD *)v1988 - 51);
                                              v931 = *(_DWORD *)(v930 + 128);
                                              if ( !v931 )
                                                v931 = *((_DWORD *)v1988 - 30);
                                              v932 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                              v933 = v931 + 84 * (*v932)++;
                                              v604[29] = v933;
                                              (*(void (__fastcall **)(unsigned int, unsigned int, int))(v930 + 4))(
                                                v933 & 0xFFFFF000,
                                                ((v933 + 4351) & 0xFFFFF000) - (v933 & 0xFFFFF000),
                                                7);
                                              v803 = *v604;
                                              v804 = *v604 & 1;
                                              v934 = v604[30];
                                              v806 = v604[29];
                                              v1983 = (char *)v604[3];
                                              v1982 = (char *)(v604 + 4);
                                              v1984 = (unsigned int)(v604 + 8);
                                              if ( v804 )
                                              {
                                                v807 = 0;
                                                v935 = v803 + 3;
                                                v809 = 0;
                                                v1984 = v934 >> 1;
                                                while ( 1 )
                                                {
                                                  v936 = *(unsigned __int16 *)&v1983[2 * v809];
                                                  if ( (unsigned int)((v936 >> 11) - 29) > 2 )
                                                  {
                                                    v966 = (_WORD *)(v806 + 2 * v807);
                                                    if ( (v936 & 0xF000) == 0xD000 )
                                                    {
                                                      v970 = 2 * (unsigned __int8)v936;
                                                      if ( v970 >> 8 )
                                                        v970 |= 0xFFFFFF00;
                                                      v973 = v970 + v935;
                                                      *(_WORD *)(v806 + 2 * v807) = v936 & 0xFF00;
                                                      v966[1] = -8189;
                                                      v975 = 2;
                                                    }
                                                    else
                                                    {
                                                      v967 = v936 & 0xF800;
                                                      if ( v967 == 57344 )
                                                      {
                                                        v971 = v936 & 0x7FF;
                                                        v972 = 2 * v971;
                                                        if ( (unsigned int)(2 * v971) >> 11 )
                                                          v972 = ~((unsigned int)~(v971 << 22) >> 21);
                                                        v973 = v972 + v935;
                                                      }
                                                      else
                                                      {
                                                        if ( (v936 & 0xFFFFFFF8) != 0x4778 )
                                                        {
                                                          v968 = v936 & 0xFF78;
                                                          if ( v968 == 17528 )
                                                          {
                                                            for ( i54 = 7;
                                                                  i54 == (v936 & 7
                                                                        | ((unsigned __int8)(v936 & 0x80) >> 4));
                                                                  --i54 )
                                                            {
                                                              ;
                                                            }
                                                            v978 = 1 << i54;
                                                            *(_WORD *)(v806 + 2 * v807) = v978 | 0xB400;
                                                            v966[2] = v936 & 0xFF87 | (8 * i54);
                                                            v966[6] = v935;
                                                            v966[1] = ((_WORD)i54 << 8) | 0x4802;
                                                            v966[3] = v978 | 0xBC00;
                                                            v966[4] = -8190;
                                                            v966[5] = -16640;
                                                            v966[7] = HIWORD(v935);
                                                            v977 = 8;
                                                          }
                                                          else
                                                          {
                                                            if ( v968 == 18040 )
                                                            {
                                                              v969 = 4;
                                                            }
                                                            else if ( v967 == 40960 )
                                                            {
                                                              v969 = 5;
                                                            }
                                                            else if ( v967 == 18432 )
                                                            {
                                                              v969 = 6;
                                                            }
                                                            else if ( (v936 & 0xF500) == 0xB100 )
                                                            {
                                                              v969 = 7;
                                                            }
                                                            else
                                                            {
                                                              v969 = 26;
                                                            }
                                                            if ( (unsigned int)(v969 - 4) > 2 )
                                                            {
                                                              if ( v969 == 7 )
                                                              {
                                                                *(_WORD *)(v806 + 2 * v807) = v936 & 0xFD07;
                                                                v985 = (((unsigned __int16)(v936 & 0x200) >> 3)
                                                                      | ((unsigned __int8)(v936 & 0xF8) >> 2))
                                                                     + v935
                                                                     + 1;
                                                                v966[2] = -1825;
                                                                v966[4] = v985;
                                                                v966[3] = -4096;
                                                                v977 = 6;
                                                                v966[1] = -8189;
                                                                v966[5] = HIWORD(v985);
                                                              }
                                                              else
                                                              {
                                                                *(_WORD *)(v806 + 2 * v807) = v936;
                                                                v966[1] = -16640;
                                                                v977 = 2;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              if ( v969 == 4 )
                                                              {
                                                                LOWORD(v979) = *(_WORD *)&v1983[2 * v809] & 7;
                                                                v980 = v935;
                                                              }
                                                              else
                                                              {
                                                                v981 = v969 == 5;
                                                                v982 = v935 & 0xFFFFFFFC;
                                                                v983 = (unsigned __int8)v936;
                                                                v984 = v936 & 0x700;
                                                                if ( v981 )
                                                                  v980 = v983 + v982;
                                                                else
                                                                  v980 = *(_DWORD *)(v982 + 4 * v983);
                                                                v979 = v984 >> 8;
                                                                if ( v981 )
                                                                  v980 *= 4;
                                                              }
                                                              *(_WORD *)(v806 + 2 * v807) = ((_WORD)v979 << 8) | 0x4800;
                                                              v966[2] = v980;
                                                              v977 = 4;
                                                              v966[1] = -8191;
                                                              v966[3] = HIWORD(v980);
                                                            }
                                                          }
                                                          goto LABEL_1855;
                                                        }
                                                        v973 = v935;
                                                      }
                                                      v975 = 0;
                                                    }
                                                    v966[v975] = -1825;
                                                    v976 = &v966[v975];
                                                    v977 = v975 + 4;
                                                    v976[2] = v973;
                                                    v976[1] = -4096;
                                                    v976[3] = HIWORD(v973);
LABEL_1855:
                                                    v935 += 2;
                                                    v807 += v977;
                                                    ++v809;
                                                    goto LABEL_1856;
                                                  }
                                                  v1982 = (char *)(v809 + 2);
                                                  if ( v809 + 2 > v1984 )
                                                    goto LABEL_2130;
                                                  v937 = *(unsigned __int16 *)&v1983[2 * v809 + 2];
                                                  v938 = v806 + 2 * v807;
                                                  v939 = v937 | (v936 << 16);
                                                  v940 = v939 & 0xF800D000;
                                                  if ( (v939 & 0xF800D000) == 0xF000C000 )
                                                  {
                                                    v941 = 8;
                                                  }
                                                  else
                                                  {
                                                    switch ( v940 )
                                                    {
                                                      case 0xF000D000:
                                                        v941 = 9;
                                                        break;
                                                      case 0xF0008000:
                                                        v941 = 10;
                                                        break;
                                                      case 0xF0009000:
                                                        v941 = 11;
                                                        break;
                                                      default:
                                                        if ( (v939 & 0xFBFF8000) == 0xF2AF0000 )
                                                        {
                                                          v941 = 12;
                                                        }
                                                        else if ( (v939 & 0xFBFF8000) == 0xF20F0000 )
                                                        {
                                                          v941 = 13;
                                                        }
                                                        else if ( (v939 & 0xFF7F0000) == 0xF85F0000 )
                                                        {
                                                          v941 = 14;
                                                        }
                                                        else if ( (v937 & 0xFFFF00F0 | (v936 << 16)) == 0xE8DF0000 )
                                                        {
                                                          v941 = 15;
                                                        }
                                                        else if ( (v937 & 0xFFFF00F0 | (v936 << 16)) == 0xE8DF0010 )
                                                        {
                                                          v941 = 16;
                                                        }
                                                        else
                                                        {
                                                          v941 = 26;
                                                        }
                                                        break;
                                                    }
                                                  }
                                                  v1994 = v941 - 8;
                                                  if ( (unsigned int)(v941 - 8) > 3 )
                                                  {
                                                    if ( (unsigned int)(v941 - 12) > 2 )
                                                    {
                                                      if ( (unsigned int)(v941 - 15) > 1 )
                                                      {
                                                        *(_WORD *)(v806 + 2 * v807) = v936;
                                                        v949 = 2;
                                                        *(_WORD *)(v938 + 2) = v937;
                                                      }
                                                      else
                                                      {
                                                        v957 = v937 & 0xF;
                                                        for ( i55 = 7; i55 == v957; --i55 )
                                                          ;
                                                        for ( i56 = 7; i56 == v957 || i56 == i55; --i56 )
                                                          ;
                                                        v960 = 1 << i56;
                                                        *(_WORD *)(v806 + 2 * v807) = v960 | 0xB400;
                                                        *(_WORD *)(v938 + 6) = i55 | 0xEB00;
                                                        v961 = (_WORD)i55 << 8;
                                                        *(_WORD *)(v938 + 2) = ((_WORD)i55 << 8) | 0x4805;
                                                        v962 = i56;
                                                        *(_WORD *)(v938 + 4) = i56 | (8 * v957) | 0x4600;
                                                        v963 = (_WORD)i56 << 8;
                                                        v964 = 8 * i56;
                                                        if ( v941 == 15 )
                                                        {
                                                          *(_WORD *)(v938 + 8) = v963 | v962;
                                                          v965 = v962 | 0x7800;
                                                        }
                                                        else
                                                        {
                                                          *(_WORD *)(v938 + 8) = v962 | 0x40 | v963;
                                                          v965 = v962 | 0x8800;
                                                        }
                                                        *(_WORD *)(v938 + 10) = v964 | v965;
                                                        *(_WORD *)(v938 + 14) = v962 | v961 | 0x40;
                                                        *(_WORD *)(v938 + 18) = v960 | 0xBC00;
                                                        *(_WORD *)(v938 + 12) = i55 | 0xEB00;
                                                        *(_WORD *)(v938 + 22) = -16640;
                                                        v949 = 14;
                                                        *(_WORD *)(v938 + 16) = v961 | 0x3001;
                                                        *(_WORD *)(v938 + 20) = (8 * i55) | 0x4700;
                                                        *(_DWORD *)(v938 + 24) = v935;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      if ( v941 == 14 )
                                                      {
                                                        v950 = (int)v937 >> 12;
                                                        v43 = (v936 & 0x80) == 0;
                                                        v954 = v935 & 0xFFFFFFFC;
                                                        v955 = v937 & 0xFFF;
                                                        if ( v43 )
                                                          v956 = (unsigned int *)(v954 - v955);
                                                        else
                                                          v956 = (unsigned int *)(v955 + v954);
                                                        v953 = *v956;
                                                      }
                                                      else
                                                      {
                                                        v950 = (v937 >> 8) & 0xF;
                                                        v951 = (v939 << 27)
                                                             | (v937 >> 12 << 30)
                                                             | ((unsigned int)v936 >> 10 << 31);
                                                        v952 = v935 & 0xFFFFFFFC;
                                                        if ( v941 == 12 )
                                                          v953 = v951 + v952;
                                                        else
                                                          v953 = v952 - v951;
                                                      }
                                                      *(_WORD *)(v806 + 2 * v807) = ((_WORD)v950 << 8) | 0x4800;
                                                      *(_WORD *)(v938 + 4) = v953;
                                                      v949 = 4;
                                                      *(_WORD *)(v938 + 2) = -8191;
                                                      *(_WORD *)(v938 + 6) = HIWORD(v953);
                                                    }
                                                    goto LABEL_1816;
                                                  }
                                                  v1990 = (v937 >> 11) & 1;
                                                  v942 = ((unsigned int)v936 >> 10) & 1;
                                                  v1986 = (v937 >> 13) & 1;
                                                  v943 = v1986 == v942;
                                                  v1996 = v1990 == v942;
                                                  if ( v1994 <= 1 )
                                                    break;
                                                  if ( v941 == 10 )
                                                  {
                                                    v1994 = 4 * (v936 & 0x3C0);
                                                    *(_WORD *)(v806 + 2 * v807) = (4 * (v936 & 0x3C0)) | 0xD000;
                                                    *(_WORD *)(v938 + 2) = -8189;
                                                    goto LABEL_1777;
                                                  }
                                                  v944 = 0;
LABEL_1779:
                                                  v2000 = 2 * v944;
                                                  *(_WORD *)(v938 + 2 * v944) = -1825;
                                                  *(_WORD *)(2 * v944 + v938 + 2) = -4096;
                                                  if ( v941 == 8 )
                                                  {
                                                    v945 = (2 * (v937 & 0x7FE))
                                                         | (v942 << 24)
                                                         | ((v936 & 0x3FF) << 12)
                                                         | (v943 << 23)
                                                         | (v1996 << 22);
                                                    if ( v942 )
                                                      v945 |= 0xFE000000;
                                                    v946 = v945 + v935;
                                                    goto LABEL_1792;
                                                  }
                                                  v947 = 2 * (v937 & 0x7FF);
                                                  if ( v941 == 9 )
                                                  {
                                                    v948 = v947
                                                         | (v942 << 24)
                                                         | ((v936 & 0x3FF) << 12)
                                                         | (v943 << 23)
                                                         | (v1996 << 22);
                                                  }
                                                  else
                                                  {
                                                    if ( v941 == 10 )
                                                    {
                                                      v948 = v947
                                                           | (v942 << 20)
                                                           | ((v936 & 0x3F) << 12)
                                                           | (v1990 << 19)
                                                           | (v1986 << 18);
                                                      if ( v942 )
                                                        v948 = ~(~(v948 << 11) >> 11);
                                                      goto LABEL_1791;
                                                    }
                                                    v948 = v947
                                                         | (v942 << 24)
                                                         | ((v936 & 0x3FF) << 12)
                                                         | (v943 << 23)
                                                         | (v1996 << 22);
                                                  }
                                                  if ( v942 )
                                                    v948 |= 0xFE000000;
LABEL_1791:
                                                  v946 = v948 + v935 + 1;
LABEL_1792:
                                                  v949 = v944 + 4;
                                                  *(_DWORD *)(v938 + v2000 + 4) = v946;
LABEL_1816:
                                                  v935 += 4;
                                                  v807 += v949;
                                                  v809 = (unsigned int)v1982;
LABEL_1856:
                                                  if ( v809 >= v1984 )
                                                    goto LABEL_2130;
                                                }
                                                *(_WORD *)(v806 + 2 * v807) = -3569;
                                                *(_WORD *)(v938 + 2) = 3593;
LABEL_1777:
                                                v944 = 2;
                                                goto LABEL_1779;
                                              }
                                              v1990 = v934 + v803;
                                              v986 = (char *)(v803 + 8);
                                              v987 = v934 >> 2;
                                              v988 = &v1983[-v803];
                                              for ( i57 = 0; ; ++i57 )
                                              {
                                                v864 = 4 * v804;
                                                if ( i57 == v987 )
                                                {
LABEL_1919:
                                                  v1002 = v864 + v806;
                                                  *(_DWORD *)(v806 + 4 * v804) = -450891772;
                                                  v1003 = v1990;
                                                  goto LABEL_2193;
                                                }
                                                *(_DWORD *)&v1982[4 * v604[28]] = 4 * i57;
                                                *(_DWORD *)(v1984 + 4 * v604[28]++) = v864;
                                                v990 = *(_DWORD *)&v986[(_DWORD)v988 - 8];
                                                if ( (v990 & 0xFE000000) == 0xFA000000 )
                                                {
                                                  v991 = 17;
                                                }
                                                else if ( (v990 & 0xF000000) == 0xB000000 )
                                                {
                                                  v991 = 18;
                                                }
                                                else if ( (v990 & 0xF000000) == 0xA000000 )
                                                {
                                                  v991 = 19;
                                                }
                                                else if ( (v990 & 0xFF000FF) == 0x120001F )
                                                {
                                                  v991 = 20;
                                                }
                                                else if ( (v990 & 0xFEF0010) == 0x8F0000 )
                                                {
                                                  v991 = 21;
                                                }
                                                else if ( (v990 & 0xFFF0000) == 0x28F0000 )
                                                {
                                                  v991 = 22;
                                                }
                                                else if ( (v990 & 0xFFF0000) == 0x24F0000 )
                                                {
                                                  v991 = 23;
                                                }
                                                else if ( (v990 & 0xE5F0000) == 0x41F0000 )
                                                {
                                                  v991 = 25;
                                                }
                                                else if ( (v990 & 0xFE00FFF) == 0x1A0000F )
                                                {
                                                  v991 = 24;
                                                }
                                                else
                                                {
                                                  v991 = 26;
                                                }
                                                if ( (unsigned int)(v991 - 17) > 3 )
                                                {
                                                  if ( v991 == 21 )
                                                  {
                                                    for ( i58 = 12;
                                                          i58 == (unsigned __int16)v990 >> 12
                                                       || i58 == (*(_DWORD *)&v986[(_DWORD)v988 - 8] & 0xF);
                                                          --i58 )
                                                    {
                                                      ;
                                                    }
                                                    v804 += 6;
                                                    *(_DWORD *)(v806 + v864) = (i58 << 12) | 0xE52D0004;
                                                    v997 = (_DWORD *)(v864 + v806);
                                                    v997[2] = v990 & 0xFFF0FFFF | (i58 << 16);
                                                    v997[4] = -493883392;
                                                    v997[1] = (i58 << 12) | 0xE59F0008;
                                                    v997[3] = (i58 << 12) | 0xE49D0004;
                                                    v997[5] = v986;
                                                  }
                                                  else
                                                  {
                                                    if ( (unsigned int)(v991 - 22) <= 3 )
                                                    {
                                                      if ( (unsigned int)(v991 - 22) <= 1 || v991 == 25 )
                                                      {
                                                        v998 = *(_DWORD *)&v986[(_DWORD)v988 - 8] & 0xFFF;
                                                        switch ( v991 )
                                                        {
                                                          case 22:
                                                            v999 = &v986[v998];
                                                            goto LABEL_1913;
                                                          case 23:
                                                            v999 = &v986[-v998];
                                                            goto LABEL_1913;
                                                          case 25:
                                                            if ( (v990 & 0x800000) != 0 )
                                                            {
                                                              v999 = *(char **)&v986[v998];
LABEL_1913:
                                                              v1986 = (unsigned int)v999;
                                                            }
                                                            else
                                                            {
                                                              v1986 = *(_DWORD *)&v986[-v998];
                                                            }
                                                            break;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        v1986 = (unsigned int)v986;
                                                      }
                                                      v1000 = v1986;
                                                      v804 += 3;
                                                      *(_DWORD *)(v806 + v864) = ((unsigned __int16)v990 >> 12 << 12)
                                                                               | 0xE51F0000;
                                                      v1001 = v864 + v806;
                                                      *(_DWORD *)(v1001 + 4) = -493883392;
                                                      *(_DWORD *)(v1001 + 8) = v1000;
                                                      goto LABEL_1918;
                                                    }
                                                    ++v804;
                                                    *(_DWORD *)(v806 + v864) = v990;
                                                  }
                                                }
                                                else
                                                {
                                                  if ( (unsigned int)(v991 - 17) <= 1 )
                                                  {
                                                    ++v804;
                                                    *(_DWORD *)(v806 + v864) = -493887484;
                                                  }
                                                  *(_DWORD *)(v806 + 4 * v804) = -450891772;
                                                  if ( v991 == 17 )
                                                  {
                                                    v992 = v990 & 0x1000000;
                                                    v993 = (4 * (v990 & 0xFFFFFF)) | ((v990 & 0x1000000u) >> 23);
                                                  }
                                                  else
                                                  {
                                                    v992 = v991 - 18;
                                                    if ( (unsigned int)(v991 - 18) > 1 )
                                                      v993 = 0;
                                                    else
                                                      v993 = v990 & 0xFFFFFF;
                                                    if ( (unsigned int)(v991 - 18) <= 1 )
                                                      v993 *= 4;
                                                  }
                                                  v994 = 4 * v804 + v806;
                                                  if ( v993 >> 25 )
                                                    v993 |= 0xFC000000;
                                                  v995 = v991 == 17;
                                                  if ( v991 == 17 )
                                                    v992 = (int)(v986 + 1);
                                                  else
                                                    v991 = (int)&v986[v993];
                                                  if ( v995 )
                                                    v991 = v993 + v992;
                                                  v804 += 2;
                                                  *(_DWORD *)(v994 + 4) = v991;
                                                }
LABEL_1918:
                                                v986 += 4;
                                              }
                                            }
                                            v926 = v913 + 2;
                                            v927 = HIBYTE(v2016[0]);
                                            if ( v913 + 2 >= v913 )
                                            {
                                              v928 = v913 + 1;
                                              if ( v913 + 1 < v913 )
                                              {
LABEL_1736:
                                                v916[v913++] = v927;
                                                v916[v928] = 0;
                                                goto LABEL_1737;
                                              }
                                              if ( v926 >= v928 )
                                              {
                                                if ( v916 == v898 )
                                                {
                                                  if ( v926 <= v928 )
                                                    goto LABEL_1737;
                                                  v929 = (char *)malloc(v913 + 2);
                                                  if ( !v929 )
                                                    goto LABEL_1737;
                                                  *v929 = 0;
                                                  goto LABEL_1735;
                                                }
                                                v929 = (char *)realloc(v916, v926);
                                                if ( v929 )
                                                {
LABEL_1735:
                                                  v916 = v929;
                                                  goto LABEL_1736;
                                                }
                                              }
                                            }
LABEL_1737:
                                            v921 = v913 + 6;
                                            goto LABEL_1739;
                                          }
                                          v922 = v913 + 2;
                                          v923 = BYTE1(v2016[0]);
                                          if ( v913 + 2 >= v913 )
                                          {
                                            v924 = v913 + 1;
                                            if ( v913 + 1 < v913 )
                                            {
LABEL_1725:
                                              v916[v913++] = v923;
                                              v916[v924] = 0;
                                              goto LABEL_1726;
                                            }
                                            if ( v922 >= v924 )
                                            {
                                              if ( v916 == v898 )
                                              {
                                                if ( v922 <= v924 )
                                                  goto LABEL_1726;
                                                v925 = (char *)malloc(v913 + 2);
                                                if ( !v925 )
                                                  goto LABEL_1726;
                                                *v925 = 0;
                                                goto LABEL_1724;
                                              }
                                              v925 = (char *)realloc(v916, v922);
                                              if ( v925 )
                                              {
LABEL_1724:
                                                v916 = v925;
                                                goto LABEL_1725;
                                              }
                                            }
                                          }
LABEL_1726:
                                          v921 = v913 + 8;
                                          goto LABEL_1739;
                                        }
                                      }
                                    }
                                    v913 = 0;
                                  }
                                  else
                                  {
                                    v913 = 0;
                                  }
                                  v916 = v898;
                                  goto LABEL_1702;
                                }
                                if ( v1995 != (_BYTE *)&jpt_9DA69C + 3 )
                                  goto LABEL_2207;
                                v1004 = *((_DWORD *)v1993 + 10);
                                if ( v1004 )
                                  **((_DWORD **)v1988 - 14) = &v1998[v1004];
                                v1005 = v1988;
                                v1006 = v1997 + *((_DWORD *)v1993 + 9);
                                v1007 = *((_DWORD *)v1988 - 13);
                                if ( !v1006 )
                                  goto LABEL_2207;
                                v1008 = (_DWORD *)operator new(0x7Cu);
                                v604 = v1008;
                                if ( !v1008 )
                                  goto LABEL_2207;
                                (*(void (__fastcall **)(_DWORD *, _DWORD, int))(*v1989 + 20))(v1008, 0, 124);
                                *v604 = v1006;
                                v604[1] = v1007;
                                if ( (v1006 & 1) != 0 )
                                  v1009 = 12;
                                else
                                  v1009 = 8;
                                v1010 = *((_DWORD *)v1005 - 12);
                                v604[30] = v1009;
                                v604[2] = v1010;
                                v1011 = operator new[](v1009);
                                v1991 = v1011;
                                v604[3] = v1011;
                                if ( !v1011 )
                                  goto LABEL_2206;
                                v1012 = v604[30];
                                v1983 = (char *)(*v604 & 0xFFFFFFFE);
                                v1984 = v1012;
                                if ( (char *)v1991 == v1983 )
                                {
                                  memset(v2016, 0, sizeof(v2016));
                                  for ( i59 = 0; i59 != 256; ++i59 )
                                  {
                                    v1014 = i59;
                                    v1015 = 8;
                                    do
                                    {
                                      v1016 = (v1014 & 1) == 0;
                                      v1017 = v1014 >> 1;
                                      if ( (v1014 & 1) != 0 )
                                        v1014 = -128629065;
                                      else
                                        v1014 >>= 1;
                                      if ( !v1016 )
                                        v1014 ^= v1017;
                                      --v1015;
                                    }
                                    while ( v1015 );
                                    v2016[i59] = v1014;
                                  }
                                  v1018 = 0;
                                  v1019 = -1;
                                  do
                                  {
                                    v1020 = *(unsigned __int8 *)(v1991 + v1018++);
                                    v1019 = (v2016[v1020 ^ (unsigned __int8)v1019] ^ (v1019 >> 8)) + 16;
                                  }
                                  while ( v1018 != 4 );
                                  v1021 = ~v1019;
                                  switch ( v1012 )
                                  {
                                    case 0:
                                    case 1:
                                    case 2:
                                      v1022 = 0;
                                      break;
                                    case 3:
                                      v1022 = 3;
                                      break;
                                    case 4:
                                      v1022 = v1021 + 517762882;
                                      break;
                                    case 5:
                                      v1022 = v1021 + 517762880;
                                      break;
                                    case 6:
                                      v1022 = 7;
                                      break;
                                    case 7:
                                      v1022 = 6;
                                      break;
                                    default:
                                      v1022 = v1012 + 15;
                                      break;
                                  }
                                  v1984 = v1022 % 16;
                                }
                                v2016[0] = -1523182318;
                                LOBYTE(v2016[1]) = 0;
                                v1023 = strlen((const char *)v2016);
                                v1024 = *v1989;
                                v1025 = (char *)*((_DWORD *)v1988 - 49);
                                v1026 = v1023;
                                if ( v1023
                                  && (v1027 = v1023 + 1, v1027 > v1026)
                                  && (v1028 = (char *)malloc(v1027), (v1982 = v1028) != 0) )
                                {
                                  (*(void (__fastcall **)(char *, _DWORD *, size_t))(v1024 + 24))(v1028, v2016, v1026);
                                  v1982[v1026] = 0;
                                }
                                else
                                {
                                  v1026 = 0;
                                  v1982 = v1025;
                                }
                                v2015 = (_BYTE *)&loc_A65562;
                                v1029 = strlen((const char *)&v2015);
                                v1030 = *v1989;
                                v1031 = v1029;
                                if ( v1029
                                  && (v1032 = v1029 + 1, v1032 > v1031)
                                  && (v1033 = (char *)malloc(v1032), (v1034 = v1033) != 0) )
                                {
                                  (*(void (__fastcall **)(char *, char **, unsigned int))(v1030 + 24))(
                                    v1033,
                                    &v2015,
                                    v1031);
                                  v1034[v1031] = 0;
                                }
                                else
                                {
                                  v1031 = 0;
                                  v1034 = v1025;
                                }
                                v1035 = v1031 + 2;
                                v1036 = v2016[0];
                                if ( v1031 + 2 >= v1031 )
                                {
                                  v1037 = v1031 + 1;
                                  if ( v1031 + 1 < v1031 )
                                  {
LABEL_1967:
                                    v1034[v1031++] = v1036;
                                    v1034[v1037] = 0;
                                    goto LABEL_1968;
                                  }
                                  if ( v1035 < v1037 )
                                    goto LABEL_1968;
                                  if ( v1034 != v1025 )
                                  {
                                    v1038 = (char *)realloc(v1034, v1035);
                                    if ( !v1038 )
                                      goto LABEL_1968;
                                    goto LABEL_1966;
                                  }
                                  if ( v1035 > v1037 )
                                  {
                                    v1038 = (char *)malloc(v1031 + 2);
                                    if ( v1038 )
                                    {
                                      *v1038 = 0;
LABEL_1966:
                                      v1034 = v1038;
                                      goto LABEL_1967;
                                    }
                                  }
                                }
LABEL_1968:
                                v1986 = *v1989;
                                if ( v1983 )
                                {
                                  v1039 = strlen(v1983);
                                  v1040 = v1039;
                                  if ( v1039 )
                                  {
                                    v1041 = v1039 + 1;
                                    if ( v1041 > v1040 )
                                    {
                                      v1042 = (char *)malloc(v1041);
                                      v1043 = v1042;
                                      if ( v1042 )
                                      {
                                        (*(void (__fastcall **)(char *, char *, unsigned int))(v1986 + 24))(
                                          v1042,
                                          v1983,
                                          v1040);
                                        v1043[v1040] = 0;
LABEL_1975:
                                        if ( v1026 != 8 )
                                        {
                                          if ( v1026 != 9 )
                                          {
                                            if ( v1026 != 7 )
                                            {
                                              v1048 = v1031 - 4;
                                              goto LABEL_2012;
                                            }
                                            v1044 = v1040 + 2;
                                            v1045 = BYTE1(v2015);
                                            if ( v1040 + 2 < v1040 )
                                              goto LABEL_1988;
                                            v1046 = v1040 + 1;
                                            if ( v1040 + 1 < v1040 )
                                              goto LABEL_1987;
                                            if ( v1044 >= v1046 )
                                            {
                                              if ( v1043 == v1025 )
                                              {
                                                if ( v1044 <= v1046 )
                                                  goto LABEL_1988;
                                                v1047 = (char *)malloc(v1040 + 2);
                                                if ( !v1047 )
                                                  goto LABEL_1988;
                                                *v1047 = 0;
                                                goto LABEL_1986;
                                              }
                                              v1047 = (char *)realloc(v1043, v1044);
                                              if ( v1047 )
                                              {
LABEL_1986:
                                                v1043 = v1047;
LABEL_1987:
                                                v1043[v1040++] = v1045;
                                                v1043[v1046] = 0;
                                              }
                                            }
LABEL_1988:
                                            v1048 = v1040 + 20;
LABEL_2012:
                                            if ( v1043 != v1025 )
                                              free(v1043);
                                            if ( v1034 != v1025 )
                                              free(v1034);
                                            if ( v1982 != v1025 )
                                              free(v1982);
                                            while ( v1048 < v1984 )
                                            {
                                              *(_BYTE *)(v1991 + v1048) = v1983[v1048];
                                              ++v1048;
                                            }
                                            v1057 = **((_DWORD **)v1988 - 51);
                                            v1991 = *((_DWORD *)v1988 - 51);
                                            v1058 = *(_DWORD *)(v1057 + 128);
                                            if ( !v1058 )
                                              v1058 = *((_DWORD *)v1988 - 30);
                                            v1059 = (_DWORD *)*((_DWORD *)v1988 - 29);
                                            v1060 = v1058 + 84 * (*v1059)++;
                                            v604[29] = v1060;
                                            (*(void (__fastcall **)(unsigned int, unsigned int, int))(v1057 + 4))(
                                              v1060 & 0xFFFFF000,
                                              ((v1060 + 4351) & 0xFFFFF000) - (v1060 & 0xFFFFF000),
                                              7);
                                            v803 = *v604;
                                            v1061 = *v604 & 1;
                                            v1062 = v604[30];
                                            v806 = v604[29];
                                            v1983 = (char *)v604[3];
                                            v1982 = (char *)(v604 + 4);
                                            v1984 = (unsigned int)(v604 + 8);
                                            if ( v1061 )
                                            {
                                              v807 = 0;
                                              v1063 = v803 + 3;
                                              v809 = 0;
                                              v1984 = v1062 >> 1;
                                              while ( 1 )
                                              {
                                                v1064 = *(unsigned __int16 *)&v1983[2 * v809];
                                                if ( (unsigned int)((v1064 >> 11) - 29) > 2 )
                                                {
                                                  v1094 = (_WORD *)(v806 + 2 * v807);
                                                  if ( (v1064 & 0xF000) == 0xD000 )
                                                  {
                                                    v1098 = 2 * (unsigned __int8)v1064;
                                                    if ( v1098 >> 8 )
                                                      v1098 |= 0xFFFFFF00;
                                                    v1101 = v1098 + v1063;
                                                    *(_WORD *)(v806 + 2 * v807) = v1064 & 0xFF00;
                                                    v1094[1] = -8189;
                                                    v1103 = 2;
                                                  }
                                                  else
                                                  {
                                                    v1095 = v1064 & 0xF800;
                                                    if ( v1095 == 57344 )
                                                    {
                                                      v1099 = v1064 & 0x7FF;
                                                      v1100 = 2 * v1099;
                                                      if ( (unsigned int)(2 * v1099) >> 11 )
                                                        v1100 = ~((unsigned int)~(v1099 << 22) >> 21);
                                                      v1101 = v1100 + v1063;
                                                    }
                                                    else
                                                    {
                                                      if ( (v1064 & 0xFFFFFFF8) != 0x4778 )
                                                      {
                                                        v1096 = v1064 & 0xFF78;
                                                        if ( v1096 == 17528 )
                                                        {
                                                          for ( i60 = 7;
                                                                i60 == (v1064 & 7
                                                                      | ((unsigned __int8)(v1064 & 0x80) >> 4));
                                                                --i60 )
                                                          {
                                                            ;
                                                          }
                                                          v1106 = 1 << i60;
                                                          *(_WORD *)(v806 + 2 * v807) = v1106 | 0xB400;
                                                          v1094[2] = v1064 & 0xFF87 | (8 * i60);
                                                          v1094[6] = v1063;
                                                          v1094[1] = ((_WORD)i60 << 8) | 0x4802;
                                                          v1094[3] = v1106 | 0xBC00;
                                                          v1094[4] = -8190;
                                                          v1094[5] = -16640;
                                                          v1094[7] = HIWORD(v1063);
                                                          v1105 = 8;
                                                        }
                                                        else
                                                        {
                                                          if ( v1096 == 18040 )
                                                          {
                                                            v1097 = 4;
                                                          }
                                                          else if ( v1095 == 40960 )
                                                          {
                                                            v1097 = 5;
                                                          }
                                                          else if ( v1095 == 18432 )
                                                          {
                                                            v1097 = 6;
                                                          }
                                                          else if ( (v1064 & 0xF500) == 0xB100 )
                                                          {
                                                            v1097 = 7;
                                                          }
                                                          else
                                                          {
                                                            v1097 = 26;
                                                          }
                                                          if ( (unsigned int)(v1097 - 4) > 2 )
                                                          {
                                                            if ( v1097 == 7 )
                                                            {
                                                              *(_WORD *)(v806 + 2 * v807) = v1064 & 0xFD07;
                                                              v1113 = (((unsigned __int16)(v1064 & 0x200) >> 3)
                                                                     | ((unsigned __int8)(v1064 & 0xF8) >> 2))
                                                                    + v1063
                                                                    + 1;
                                                              v1094[2] = -1825;
                                                              v1094[4] = v1113;
                                                              v1094[3] = -4096;
                                                              v1105 = 6;
                                                              v1094[1] = -8189;
                                                              v1094[5] = HIWORD(v1113);
                                                            }
                                                            else
                                                            {
                                                              *(_WORD *)(v806 + 2 * v807) = v1064;
                                                              v1094[1] = -16640;
                                                              v1105 = 2;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if ( v1097 == 4 )
                                                            {
                                                              LOWORD(v1107) = *(_WORD *)&v1983[2 * v809] & 7;
                                                              v1108 = v1063;
                                                            }
                                                            else
                                                            {
                                                              v1109 = v1097 == 5;
                                                              v1110 = v1063 & 0xFFFFFFFC;
                                                              v1111 = (unsigned __int8)v1064;
                                                              v1112 = v1064 & 0x700;
                                                              if ( v1109 )
                                                                v1108 = v1111 + v1110;
                                                              else
                                                                v1108 = *(_DWORD *)(v1110 + 4 * v1111);
                                                              v1107 = v1112 >> 8;
                                                              if ( v1109 )
                                                                v1108 *= 4;
                                                            }
                                                            *(_WORD *)(v806 + 2 * v807) = ((_WORD)v1107 << 8) | 0x4800;
                                                            v1094[2] = v1108;
                                                            v1105 = 4;
                                                            v1094[1] = -8191;
                                                            v1094[3] = HIWORD(v1108);
                                                          }
                                                        }
                                                        goto LABEL_2128;
                                                      }
                                                      v1101 = v1063;
                                                    }
                                                    v1103 = 0;
                                                  }
                                                  v1094[v1103] = -1825;
                                                  v1104 = &v1094[v1103];
                                                  v1105 = v1103 + 4;
                                                  v1104[2] = v1101;
                                                  v1104[1] = -4096;
                                                  v1104[3] = HIWORD(v1101);
LABEL_2128:
                                                  v1063 += 2;
                                                  v807 += v1105;
                                                  ++v809;
                                                  goto LABEL_2129;
                                                }
                                                v1982 = (char *)(v809 + 2);
                                                if ( v809 + 2 > v1984 )
                                                  goto LABEL_2130;
                                                v1065 = *(unsigned __int16 *)&v1983[2 * v809 + 2];
                                                v1066 = v806 + 2 * v807;
                                                v1067 = v1065 | (v1064 << 16);
                                                v1068 = v1067 & 0xF800D000;
                                                if ( (v1067 & 0xF800D000) == 0xF000C000 )
                                                {
                                                  v1069 = 8;
                                                }
                                                else
                                                {
                                                  switch ( v1068 )
                                                  {
                                                    case 0xF000D000:
                                                      v1069 = 9;
                                                      break;
                                                    case 0xF0008000:
                                                      v1069 = 10;
                                                      break;
                                                    case 0xF0009000:
                                                      v1069 = 11;
                                                      break;
                                                    default:
                                                      if ( (v1067 & 0xFBFF8000) == 0xF2AF0000 )
                                                      {
                                                        v1069 = 12;
                                                      }
                                                      else if ( (v1067 & 0xFBFF8000) == 0xF20F0000 )
                                                      {
                                                        v1069 = 13;
                                                      }
                                                      else if ( (v1067 & 0xFF7F0000) == 0xF85F0000 )
                                                      {
                                                        v1069 = 14;
                                                      }
                                                      else if ( (v1065 & 0xFFFF00F0 | (v1064 << 16)) == 0xE8DF0000 )
                                                      {
                                                        v1069 = 15;
                                                      }
                                                      else if ( (v1065 & 0xFFFF00F0 | (v1064 << 16)) == 0xE8DF0010 )
                                                      {
                                                        v1069 = 16;
                                                      }
                                                      else
                                                      {
                                                        v1069 = 26;
                                                      }
                                                      break;
                                                  }
                                                }
                                                v1994 = v1069 - 8;
                                                if ( (unsigned int)(v1069 - 8) > 3 )
                                                {
                                                  if ( (unsigned int)(v1069 - 12) > 2 )
                                                  {
                                                    if ( (unsigned int)(v1069 - 15) > 1 )
                                                    {
                                                      *(_WORD *)(v806 + 2 * v807) = v1064;
                                                      v1077 = 2;
                                                      *(_WORD *)(v1066 + 2) = v1065;
                                                    }
                                                    else
                                                    {
                                                      v1085 = v1065 & 0xF;
                                                      for ( i61 = 7; i61 == v1085; --i61 )
                                                        ;
                                                      for ( i62 = 7; i62 == v1085 || i62 == i61; --i62 )
                                                        ;
                                                      v1088 = 1 << i62;
                                                      *(_WORD *)(v806 + 2 * v807) = v1088 | 0xB400;
                                                      *(_WORD *)(v1066 + 6) = i61 | 0xEB00;
                                                      v1089 = (_WORD)i61 << 8;
                                                      *(_WORD *)(v1066 + 2) = ((_WORD)i61 << 8) | 0x4805;
                                                      v1090 = i62;
                                                      *(_WORD *)(v1066 + 4) = i62 | (8 * v1085) | 0x4600;
                                                      v1091 = (_WORD)i62 << 8;
                                                      v1092 = 8 * i62;
                                                      if ( v1069 == 15 )
                                                      {
                                                        *(_WORD *)(v1066 + 8) = v1091 | v1090;
                                                        v1093 = v1090 | 0x7800;
                                                      }
                                                      else
                                                      {
                                                        *(_WORD *)(v1066 + 8) = v1090 | 0x40 | v1091;
                                                        v1093 = v1090 | 0x8800;
                                                      }
                                                      *(_WORD *)(v1066 + 10) = v1092 | v1093;
                                                      *(_WORD *)(v1066 + 14) = v1090 | v1089 | 0x40;
                                                      *(_WORD *)(v1066 + 18) = v1088 | 0xBC00;
                                                      *(_WORD *)(v1066 + 12) = i61 | 0xEB00;
                                                      *(_WORD *)(v1066 + 22) = -16640;
                                                      v1077 = 14;
                                                      *(_WORD *)(v1066 + 16) = v1089 | 0x3001;
                                                      *(_WORD *)(v1066 + 20) = (8 * i61) | 0x4700;
                                                      *(_DWORD *)(v1066 + 24) = v1063;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    if ( v1069 == 14 )
                                                    {
                                                      v1078 = (int)v1065 >> 12;
                                                      v43 = (v1064 & 0x80) == 0;
                                                      v1082 = v1063 & 0xFFFFFFFC;
                                                      v1083 = v1065 & 0xFFF;
                                                      if ( v43 )
                                                        v1084 = (unsigned int *)(v1082 - v1083);
                                                      else
                                                        v1084 = (unsigned int *)(v1083 + v1082);
                                                      v1081 = *v1084;
                                                    }
                                                    else
                                                    {
                                                      v1078 = (v1065 >> 8) & 0xF;
                                                      v1079 = (v1067 << 27)
                                                            | (v1065 >> 12 << 30)
                                                            | ((unsigned int)v1064 >> 10 << 31);
                                                      v1080 = v1063 & 0xFFFFFFFC;
                                                      if ( v1069 == 12 )
                                                        v1081 = v1079 + v1080;
                                                      else
                                                        v1081 = v1080 - v1079;
                                                    }
                                                    *(_WORD *)(v806 + 2 * v807) = ((_WORD)v1078 << 8) | 0x4800;
                                                    *(_WORD *)(v1066 + 4) = v1081;
                                                    v1077 = 4;
                                                    *(_WORD *)(v1066 + 2) = -8191;
                                                    *(_WORD *)(v1066 + 6) = HIWORD(v1081);
                                                  }
                                                  goto LABEL_2089;
                                                }
                                                v1990 = (v1065 >> 11) & 1;
                                                v1070 = ((unsigned int)v1064 >> 10) & 1;
                                                v1986 = (v1065 >> 13) & 1;
                                                v1071 = v1986 == v1070;
                                                v1996 = v1990 == v1070;
                                                if ( v1994 <= 1 )
                                                  break;
                                                if ( v1069 == 10 )
                                                {
                                                  v1994 = 4 * (v1064 & 0x3C0);
                                                  *(_WORD *)(v806 + 2 * v807) = (4 * (v1064 & 0x3C0)) | 0xD000;
                                                  *(_WORD *)(v1066 + 2) = -8189;
                                                  goto LABEL_2050;
                                                }
                                                v1072 = 0;
LABEL_2052:
                                                v2000 = 2 * v1072;
                                                *(_WORD *)(v1066 + 2 * v1072) = -1825;
                                                *(_WORD *)(2 * v1072 + v1066 + 2) = -4096;
                                                if ( v1069 == 8 )
                                                {
                                                  v1073 = (2 * (v1065 & 0x7FE))
                                                        | (v1070 << 24)
                                                        | ((v1064 & 0x3FF) << 12)
                                                        | (v1071 << 23)
                                                        | (v1996 << 22);
                                                  if ( v1070 )
                                                    v1073 |= 0xFE000000;
                                                  v1074 = v1073 + v1063;
                                                  goto LABEL_2065;
                                                }
                                                v1075 = 2 * (v1065 & 0x7FF);
                                                if ( v1069 == 9 )
                                                {
                                                  v1076 = v1075
                                                        | (v1070 << 24)
                                                        | ((v1064 & 0x3FF) << 12)
                                                        | (v1071 << 23)
                                                        | (v1996 << 22);
                                                }
                                                else
                                                {
                                                  if ( v1069 == 10 )
                                                  {
                                                    v1076 = v1075
                                                          | (v1070 << 20)
                                                          | ((v1064 & 0x3F) << 12)
                                                          | (v1990 << 19)
                                                          | (v1986 << 18);
                                                    if ( v1070 )
                                                      v1076 = ~(~(v1076 << 11) >> 11);
                                                    goto LABEL_2064;
                                                  }
                                                  v1076 = v1075
                                                        | (v1070 << 24)
                                                        | ((v1064 & 0x3FF) << 12)
                                                        | (v1071 << 23)
                                                        | (v1996 << 22);
                                                }
                                                if ( v1070 )
                                                  v1076 |= 0xFE000000;
LABEL_2064:
                                                v1074 = v1076 + v1063 + 1;
LABEL_2065:
                                                v1077 = v1072 + 4;
                                                *(_DWORD *)(v1066 + v2000 + 4) = v1074;
LABEL_2089:
                                                v1063 += 4;
                                                v807 += v1077;
                                                v809 = (unsigned int)v1982;
LABEL_2129:
                                                if ( v809 >= v1984 )
                                                {
LABEL_2130:
                                                  v1114 = v803 + 2 * v809;
                                                  *(_WORD *)(v806 + 2 * v807) = -1825;
                                                  v1115 = (_WORD *)(v806 + 2 * v807);
                                                  v1115[2] = v1114;
                                                  v1115[1] = -4096;
                                                  v1115[3] = HIWORD(v1114);
                                                  goto LABEL_2194;
                                                }
                                              }
                                              *(_WORD *)(v806 + 2 * v807) = -3569;
                                              *(_WORD *)(v1066 + 2) = 3593;
LABEL_2050:
                                              v1072 = 2;
                                              goto LABEL_2052;
                                            }
                                            v1986 = v1062 + v803;
                                            v1116 = v803 + 8;
                                            v1117 = v1062 >> 2;
                                            v1118 = &v1983[-v803];
                                            for ( i63 = 0; ; ++i63 )
                                            {
                                              v1120 = 4 * v1061;
                                              if ( i63 == v1117 )
                                              {
                                                v1002 = v1120 + v806;
                                                v1003 = v1986;
                                                *(_DWORD *)(v806 + 4 * v1061) = -450891772;
LABEL_2193:
                                                *(_DWORD *)(v1002 + 4) = v1003;
LABEL_2194:
                                                operator delete((void *)v604[3]);
                                                v604[3] = 0;
                                                v1133 = v1991;
                                                (*(void (__fastcall **)(_DWORD, int))(*(_DWORD *)v1991 + 216))(
                                                  v604[29],
                                                  v604[29] + 256);
                                                if ( *v604 )
                                                {
                                                  (*(void (__fastcall **)(unsigned int, int, int))(*(_DWORD *)v1133 + 4))(
                                                    *v604 & 0xFFFFF000,
                                                    0x2000,
                                                    7);
                                                  v1134 = *v604;
                                                  if ( (*v604 & 1) != 0 )
                                                  {
                                                    v1135 = *v604 & 2;
                                                    if ( (v1134 & 2) != 0 )
                                                    {
                                                      *(_WORD *)(v1134 & 0xFFFFFFFE) = -16640;
                                                      v1135 = 1;
                                                    }
                                                    v1136 = 2 * v1135;
                                                    *(_WORD *)((*v604 & 0xFFFFFFFE) + 2 * v1135) = -1825;
                                                    *(_WORD *)((*v604 & 0xFFFFFFFE) + 2 * v1135 + 2) = -4096;
                                                    *(_WORD *)(v1136 + (*v604 & 0xFFFFFFFE) + 4) = v604[1];
                                                    *(_WORD *)(v1136 + (*v604 & 0xFFFFFFFE) + 6) = *((_WORD *)v604 + 3);
                                                  }
                                                  else
                                                  {
                                                    *(_DWORD *)v1134 = -450891772;
                                                    *(_DWORD *)(*v604 + 4) = v604[1];
                                                  }
                                                  v1137 = (_DWORD *)v604[2];
                                                  if ( v1137 )
                                                  {
                                                    v1138 = v604[29];
                                                    if ( (*v604 & 1) != 0 )
                                                      v1138 |= 1u;
                                                    *v1137 = v1138;
                                                  }
                                                  v743 = *v604;
                                                  v744 = *(void (__fastcall ***)(unsigned int, unsigned int, _DWORD))v1991;
LABEL_2205:
                                                  v744[54](v743 & 0xFFFFFFFE, v604[30] + (v743 & 0xFFFFFFFE), 0);
                                                }
LABEL_2206:
                                                operator delete(v604);
LABEL_2207:
                                                v1139 = 12 * *((_DWORD *)v1993 + 8);
                                                v2014 = *((_DWORD *)v1993 + 6);
                                                for ( i64 = 0; i64 != 256; ++i64 )
                                                  v2056[i64] = i64;
                                                LOBYTE(v1141) = 0;
                                                for ( i65 = 0; i65 != 256; ++i65 )
                                                {
                                                  v1143 = v2056[i65];
                                                  v1141 = (unsigned __int8)(v1141
                                                                          + v1143
                                                                          + *((_BYTE *)&v2014 + (i65 & 3)));
                                                  v75 = (int *)(unsigned __int8)v2056[v1141];
                                                  v2056[i65] = (_BYTE)v75;
                                                  v2056[v1141] = v1143;
                                                }
                                                LOBYTE(v1144) = 0;
                                                v1145 = &v2001[v1139];
                                                v1146 = v2001;
                                                LOBYTE(v1147) = 0;
                                                while ( v1146 != v1145 )
                                                {
                                                  v1147 = (unsigned __int8)(v1147 + 1);
                                                  v1148 = v2056[v1147];
                                                  v1144 = (unsigned __int8)(v1144 + v1148);
                                                  v2056[v1147] = v2056[v1144];
                                                  v2056[v1144] = v1148;
                                                  v1149 = (unsigned __int8)v2056[(unsigned __int8)(v1148 + v2056[v1147])];
                                                  v75 = (int *)(unsigned __int8)v1146[1];
                                                  *++v1146 = (((v1149 >> 4) | (16 * v1149)) - 92) ^ (unsigned __int8)v75;
                                                }
LABEL_2214:
                                                if ( v1995 != &byte_5 )
                                                {
                                                  if ( v1995 == (_BYTE *)&jpt_9DA69C + 1 )
                                                  {
                                                    v2056[0] = 127;
                                                    v2056[2] = -118;
                                                    v2056[5] = 121;
                                                    v2056[1] = -125;
                                                    v2056[7] = -118;
                                                    v2056[3] = 126;
                                                    v2056[8] = -124;
                                                    v2056[4] = 120;
                                                    v2056[6] = 120;
                                                    v2056[9] = 112;
                                                    v1182 = 0;
                                                    v2056[10] = -127;
                                                    v2056[15] = -72;
                                                    v2056[11] = -123;
                                                    v2056[12] = -65;
                                                    v2056[13] = -70;
                                                    v2056[14] = -66;
                                                    v2056[16] = -66;
                                                    strcpy(&v2056[17], "tx");
                                                    do
                                                    {
                                                      v1183 = (unsigned __int8)v2056[v1182] ^ 0x7D;
                                                      if ( v1183 + 106 > 255 )
                                                        v2056[v1182] = v1183 + 107;
                                                      else
                                                        v75 = (int *)v2056;
                                                      if ( v1183 + 106 <= 255 )
                                                        *((_BYTE *)v75 + v1182) = v1183 + 106;
                                                      ++v1182;
                                                    }
                                                    while ( v1182 != 19 );
                                                    v1184 = v1989;
                                                    if ( !(*(int (__fastcall **)(_BYTE *, void *))(*v1989 + 12))(
                                                            v2056,
                                                            &unk_280F484) )
                                                      *(_DWORD *)(*v1184 + 224) = 1;
                                                  }
                                                  goto LABEL_2283;
                                                }
                                                v1150 = 0;
                                                strcpy(v2019, "}`g|z{z;vz");
                                                do
                                                {
                                                  v1151 = (unsigned __int8)v2019[v1150] ^ 0x2F;
                                                  if ( v1151 + 26 > 255 )
                                                    v2019[v1150] = v1151 + 27;
                                                  else
                                                    v2019[v1150] = v1151 + 26;
                                                  ++v1150;
                                                }
                                                while ( v1150 != 10 );
                                                memset(v2055, 0, sizeof(v2055));
                                                v2035 = 95;
                                                v2039 = 76;
                                                v2036 = 2;
                                                v2040 = 92;
                                                v2037 = 29;
                                                v2041 = 22;
                                                v2038 = 12;
                                                v2042 = 9;
                                                v2046 = 12;
                                                v2044 = 73;
                                                v2047 = 17;
                                                v2045 = 66;
                                                v2048 = 3;
                                                v2050 = 0;
                                                v2049 = 115;
                                                v1152 = &v2048;
                                                v2043 = 10;
                                                do
                                                {
                                                  v1153 = *v1152--;
                                                  v1152[1] = v1153 ^ v1152[2];
                                                }
                                                while ( v1152 != &v2034 );
                                                v1995 = &v2007;
                                                v1154 = 0;
                                                v2007 = 114;
                                                v2008 = 0;
                                                v2022 = 79;
                                                v2023 = 72;
                                                v2024 = 66;
                                                v2025 = 76;
                                                v2026 = 4;
                                                strcpy(v2027, "E@K");
                                                do
                                                  *(&v2022 + v1154++) ^= 0x29u;
                                                while ( v1154 != 8 );
                                                v1991 = (*(int (__fastcall **)(char *, char *))(*v1989 + 76))(
                                                          &v2035,
                                                          &v2007);
                                                if ( !v1991 )
                                                  goto LABEL_2283;
                                                memset(v2056, 0, 0x400u);
                                                while ( 1 )
                                                {
                                                  v1155 = (*(int (__fastcall **)(_BYTE *, int, unsigned int))(*v1989 + 80))(
                                                            v2056,
                                                            1023,
                                                            v1991);
                                                  v1992 = (char *)*((_DWORD *)v1988 - 51);
                                                  if ( !v1155 )
                                                  {
                                                    v1158 = 0;
                                                    goto LABEL_2231;
                                                  }
                                                  v1156 = v1989;
                                                  if ( (*(int (__fastcall **)(_BYTE *, void *))(*v1989 + 28))(
                                                         v2056,
                                                         &unk_280F484) )
                                                  {
                                                    v1157 = (*(int (__fastcall **)(_BYTE *, char *))(*v1156 + 28))(
                                                              v2056,
                                                              &v2022);
                                                    if ( !v1157 )
                                                    {
                                                      v2010 = 0;
                                                      v2009 = 47;
                                                      v1712 = (char *)(*(int (__fastcall **)(_BYTE *, char *))(*v1989 + 28))(
                                                                        v2056,
                                                                        &v2009);
                                                      v1983 = v1712;
                                                      if ( v1712 )
                                                        break;
                                                    }
                                                  }
                                                }
                                                v1713 = (*(int (**)(void))(*v1989 + 32))();
                                                v1982 = v2055;
                                                v1985 = v1713;
                                                if ( v1983 == v1999 )
                                                {
                                                  memset(v2016, 0, sizeof(v2016));
                                                  do
                                                  {
                                                    v1714 = v1157;
                                                    v1715 = 8;
                                                    do
                                                    {
                                                      v1716 = (v1714 & 1) == 0;
                                                      v1717 = v1714 >> 1;
                                                      if ( (v1714 & 1) != 0 )
                                                        v1714 = -128629065;
                                                      else
                                                        v1714 >>= 1;
                                                      if ( !v1716 )
                                                        v1714 ^= v1717;
                                                      --v1715;
                                                    }
                                                    while ( v1715 );
                                                    v2016[v1157++] = v1714;
                                                  }
                                                  while ( v1157 != 256 );
                                                  v1718 = -1;
                                                  do
                                                  {
                                                    v1719 = (unsigned __int8)v2055[v1715++];
                                                    v1718 = (v2016[(unsigned __int8)v1718 ^ v1719] ^ (v1718 >> 8)) + 16;
                                                  }
                                                  while ( v1715 != 4 );
                                                  v1720 = ~v1718;
                                                  switch ( v1985 )
                                                  {
                                                    case 0u:
                                                    case 1u:
                                                    case 2u:
                                                      v1721 = 0;
                                                      break;
                                                    case 3u:
                                                      v1721 = 3;
                                                      break;
                                                    case 4u:
                                                      v1721 = v1720 + 517762882;
                                                      break;
                                                    case 5u:
                                                      v1721 = v1720 + 517762880;
                                                      break;
                                                    case 6u:
                                                      v1721 = 7;
                                                      break;
                                                    case 7u:
                                                      v1721 = 6;
                                                      break;
                                                    default:
                                                      v1721 = v1985 + 15;
                                                      break;
                                                  }
                                                  v1985 = v1721 % 16;
                                                }
                                                v2016[0] = -1523182318;
                                                LOBYTE(v2016[1]) = 0;
                                                v1722 = strlen((const char *)v2016);
                                                v1723 = *v1989;
                                                v1724 = (char *)*((_DWORD *)v1988 - 49);
                                                v1725 = v1722;
                                                if ( v1722
                                                  && (v1726 = v1722 + 1, v1726 > v1725)
                                                  && (v1727 = (char *)malloc(v1726), (v1993 = v1727) != 0) )
                                                {
                                                  (*(void (__fastcall **)(char *, _DWORD *, size_t))(v1723 + 24))(
                                                    v1727,
                                                    v2016,
                                                    v1725);
                                                  v1993[v1725] = 0;
                                                }
                                                else
                                                {
                                                  v1725 = 0;
                                                  v1993 = v1724;
                                                }
                                                v2015 = (_BYTE *)&loc_A65562;
                                                v1728 = strlen((const char *)&v2015);
                                                v1729 = *v1989;
                                                v1730 = v1728;
                                                if ( v1728
                                                  && (v1731 = v1728 + 1, v1731 > v1730)
                                                  && (v1732 = (char *)malloc(v1731), (v1733 = v1732) != 0) )
                                                {
                                                  (*(void (__fastcall **)(char *, char **, unsigned int))(v1729 + 24))(
                                                    v1732,
                                                    &v2015,
                                                    v1730);
                                                  v1733[v1730] = 0;
                                                }
                                                else
                                                {
                                                  v1730 = 0;
                                                  v1733 = v1724;
                                                }
                                                v1734 = v1730 + 2;
                                                v1735 = v2016[0];
                                                if ( v1730 + 2 < v1730 )
                                                  goto LABEL_3543;
                                                v1736 = v1730 + 1;
                                                if ( v1730 + 1 >= v1730 )
                                                {
                                                  if ( v1734 < v1736 )
                                                    goto LABEL_3543;
                                                  if ( v1733 == v1724 )
                                                  {
                                                    if ( v1734 > v1736 )
                                                    {
                                                      v1737 = (char *)malloc(v1730 + 2);
                                                      if ( v1737 )
                                                      {
                                                        *v1737 = 0;
                                                        goto LABEL_3541;
                                                      }
                                                    }
LABEL_3543:
                                                    v1984 = *v1989;
                                                    v1738 = strlen(v1983);
                                                    v1739 = v1738;
                                                    if ( v1738
                                                      && (v1740 = v1738 + 1, v1740 > v1739)
                                                      && (v1741 = (char *)malloc(v1740), (v1742 = v1741) != 0) )
                                                    {
                                                      (*(void (__fastcall **)(char *, char *, unsigned int))(v1984 + 24))(
                                                        v1741,
                                                        v1983,
                                                        v1739);
                                                      v1742[v1739] = 0;
                                                    }
                                                    else
                                                    {
                                                      v1739 = 0;
                                                      v1742 = v1724;
                                                    }
                                                    if ( v1725 != 8 )
                                                    {
                                                      if ( v1725 != 9 )
                                                      {
                                                        if ( v1725 != 7 )
                                                        {
                                                          v1747 = v1730 - 4;
                                                          goto LABEL_3584;
                                                        }
                                                        v1743 = v1739 + 2;
                                                        v1744 = BYTE1(v2015);
                                                        if ( v1739 + 2 < v1739 )
                                                          goto LABEL_3560;
                                                        v1745 = v1739 + 1;
                                                        if ( v1739 + 1 >= v1739 )
                                                        {
                                                          if ( v1743 < v1745 )
                                                            goto LABEL_3560;
                                                          if ( v1742 == v1724 )
                                                          {
                                                            if ( v1743 > v1745 )
                                                            {
                                                              v1746 = (char *)malloc(v1739 + 2);
                                                              if ( v1746 )
                                                              {
                                                                *v1746 = 0;
                                                                goto LABEL_3558;
                                                              }
                                                            }
LABEL_3560:
                                                            v1747 = v1739 + 20;
LABEL_3584:
                                                            if ( v1742 != v1724 )
                                                              free(v1742);
                                                            if ( v1733 != v1724 )
                                                              free(v1733);
                                                            if ( v1993 != v1724 )
                                                              free(v1993);
                                                            while ( v1747 < v1985 )
                                                            {
                                                              v2055[v1747] = v1983[v1747];
                                                              ++v1747;
                                                            }
                                                            v1756 = v1992;
                                                            v1757 = (char *)(*(int (__fastcall **)(_BYTE *, void *))(*(_DWORD *)v1992 + 28))(
                                                                              v2055,
                                                                              &unk_280F484);
                                                            v1758 = *(int (__fastcall **)(char *))(*(_DWORD *)v1756 + 32);
                                                            v1993 = v1757;
                                                            v1985 = v1758(v2019);
                                                            if ( v1993 == v2019 )
                                                            {
                                                              memset(v2016, 0, sizeof(v2016));
                                                              for ( i66 = 0; i66 != 256; ++i66 )
                                                              {
                                                                v1760 = i66;
                                                                v1761 = 8;
                                                                do
                                                                {
                                                                  v1762 = (v1760 & 1) == 0;
                                                                  v1763 = v1760 >> 1;
                                                                  if ( (v1760 & 1) != 0 )
                                                                    v1760 = -128629065;
                                                                  else
                                                                    v1760 >>= 1;
                                                                  if ( !v1762 )
                                                                    v1760 ^= v1763;
                                                                  --v1761;
                                                                }
                                                                while ( v1761 );
                                                                v2016[i66] = v1760;
                                                              }
                                                              v1764 = 0;
                                                              v1765 = -1;
                                                              do
                                                              {
                                                                v1766 = (unsigned __int8)v2019[v1764++];
                                                                v1765 = (v2016[(unsigned __int8)v1765 ^ v1766]
                                                                       ^ (v1765 >> 8))
                                                                      + 16;
                                                              }
                                                              while ( v1764 != 4 );
                                                              switch ( v1985 )
                                                              {
                                                                case 0u:
                                                                case 1u:
                                                                case 2u:
                                                                  v1767 = 0;
                                                                  break;
                                                                case 3u:
                                                                  v1767 = 3;
                                                                  break;
                                                                case 4u:
                                                                  v1767 = 517762881 - v1765;
                                                                  break;
                                                                case 5u:
                                                                  v1767 = 517762879 - v1765;
                                                                  break;
                                                                case 6u:
                                                                  v1767 = 7;
                                                                  break;
                                                                case 7u:
                                                                  v1767 = 6;
                                                                  break;
                                                                default:
                                                                  v1767 = v1985 + 15;
                                                                  break;
                                                              }
                                                              v1985 = v1767 % 16;
                                                            }
                                                            v2016[0] = -1523182318;
                                                            LOBYTE(v2016[1]) = 0;
                                                            v1768 = *(_DWORD *)v1992;
                                                            v1769 = strlen((const char *)v2016);
                                                            v1770 = v1769;
                                                            if ( v1769
                                                              && (v1771 = v1769 + 1, v1771 > v1770)
                                                              && (v1772 = (char *)malloc(v1771), (v1983 = v1772) != 0) )
                                                            {
                                                              (*(void (__fastcall **)(char *, _DWORD *, size_t))(v1768 + 24))(
                                                                v1772,
                                                                v2016,
                                                                v1770);
                                                              v1983[v1770] = 0;
                                                            }
                                                            else
                                                            {
                                                              v1770 = 0;
                                                              v1983 = v1724;
                                                            }
                                                            v2015 = (_BYTE *)&loc_A65562;
                                                            v1773 = strlen((const char *)&v2015);
                                                            v1774 = *(_DWORD *)v1992;
                                                            v1775 = v1773;
                                                            if ( v1773
                                                              && (v1776 = v1773 + 1, v1776 > v1775)
                                                              && (v1777 = (char *)malloc(v1776), (v1778 = v1777) != 0) )
                                                            {
                                                              (*(void (__fastcall **)(char *, char **, unsigned int))(v1774 + 24))(
                                                                v1777,
                                                                &v2015,
                                                                v1775);
                                                              v1778[v1775] = 0;
                                                            }
                                                            else
                                                            {
                                                              v1775 = 0;
                                                              v1778 = v1724;
                                                            }
                                                            v1779 = v1775 + 2;
                                                            v1780 = v2016[0];
                                                            if ( v1775 + 2 < v1775 )
                                                              goto LABEL_3631;
                                                            v1781 = v1775 + 1;
                                                            if ( v1775 + 1 >= v1775 )
                                                            {
                                                              if ( v1779 < v1781 )
                                                                goto LABEL_3631;
                                                              if ( v1778 == v1724 )
                                                              {
                                                                if ( v1779 > v1781 )
                                                                {
                                                                  v1782 = (char *)malloc(v1775 + 2);
                                                                  if ( v1782 )
                                                                  {
                                                                    *v1782 = 0;
                                                                    goto LABEL_3629;
                                                                  }
                                                                }
LABEL_3631:
                                                                v1982 = *(char **)v1992;
                                                                v1783 = strlen(v2019);
                                                                v1784 = v1783;
                                                                if ( v1783
                                                                  && (v1785 = v1783 + 1, v1785 > v1784)
                                                                  && (v1786 = (char *)malloc(v1785), (v1787 = v1786) != 0) )
                                                                {
                                                                  (*((void (__fastcall **)(char *, char *, unsigned int))v1982
                                                                   + 6))(
                                                                    v1786,
                                                                    v2019,
                                                                    v1784);
                                                                  v1787[v1784] = 0;
                                                                }
                                                                else
                                                                {
                                                                  v1784 = 0;
                                                                  v1787 = v1724;
                                                                }
                                                                if ( v1770 != 8 )
                                                                {
                                                                  if ( v1770 != 9 )
                                                                  {
                                                                    if ( v1770 != 7 )
                                                                    {
                                                                      v1792 = v1775 - 4;
                                                                      goto LABEL_3672;
                                                                    }
                                                                    v1788 = v1784 + 2;
                                                                    v1789 = BYTE1(v2015);
                                                                    if ( v1784 + 2 < v1784 )
                                                                      goto LABEL_3648;
                                                                    v1790 = v1784 + 1;
                                                                    if ( v1784 + 1 >= v1784 )
                                                                    {
                                                                      if ( v1788 < v1790 )
                                                                        goto LABEL_3648;
                                                                      if ( v1787 == v1724 )
                                                                      {
                                                                        if ( v1788 > v1790 )
                                                                        {
                                                                          v1791 = (char *)malloc(v1784 + 2);
                                                                          if ( v1791 )
                                                                          {
                                                                            *v1791 = 0;
                                                                            goto LABEL_3646;
                                                                          }
                                                                        }
LABEL_3648:
                                                                        v1792 = v1784 + 20;
LABEL_3672:
                                                                        if ( v1787 != v1724 )
                                                                          free(v1787);
                                                                        if ( v1778 != v1724 )
                                                                          free(v1778);
                                                                        if ( v1983 != v1724 )
                                                                          free(v1983);
                                                                        while ( v1792 < v1985 )
                                                                        {
                                                                          v1993[v1792] = v2019[v1792];
                                                                          ++v1792;
                                                                        }
                                                                        v1158 = 1;
                                                                        v1801 = (*(int (__fastcall **)(char *))(*(_DWORD *)v1992 + 32))(v2019);
                                                                        v1993[v1801] = 0;
LABEL_2231:
                                                                        (*(void (__fastcall **)(unsigned int))(*v1989 + 84))(v1991);
                                                                        if ( !v1158 )
                                                                          goto LABEL_2283;
                                                                        v2020[0] = 20;
                                                                        v1983 = v2020;
                                                                        v2020[1] = 16;
                                                                        v2020[2] = 23;
                                                                        v2020[3] = 1;
                                                                        v2020[4] = 17;
                                                                        v2020[5] = 48;
                                                                        v2020[6] = 18;
                                                                        strcpy(&v2020[7], "1?:");
                                                                        for ( i67 = 0; i67 != 10; ++i67 )
                                                                          v2020[i67] ^= 0x5Eu;
                                                                        if ( (*(int (__fastcall **)(_BYTE *, _DWORD))(*v1989 + 36))(
                                                                               v2055,
                                                                               0) )
                                                                        {
                                                                          goto LABEL_2271;
                                                                        }
                                                                        v2054 = 0;
                                                                        v2035 = 5;
                                                                        v2049 = 30;
                                                                        v2036 = 11;
                                                                        v2050 = 30;
                                                                        v2037 = 15;
                                                                        v2051 = 93;
                                                                        v2038 = 2;
                                                                        v2039 = 1;
                                                                        v2040 = 1;
                                                                        v2041 = 13;
                                                                        v2042 = 6;
                                                                        v2043 = 19;
                                                                        v2044 = 16;
                                                                        v2045 = 4;
                                                                        v2046 = 78;
                                                                        v2047 = 31;
                                                                        v2048 = 28;
                                                                        v2052 = 28;
                                                                        v2053 = 111;
                                                                        v1160 = &v2052;
                                                                        do
                                                                        {
                                                                          v1161 = *v1160--;
                                                                          v1160[1] = v1161 ^ v1160[2];
                                                                        }
                                                                        while ( v1160 != &v2034 );
                                                                        v1162 = *v1989;
                                                                        v1993 = v2055;
                                                                        (*(void (__fastcall **)(_BYTE *, _DWORD, int))(v1162 + 20))(
                                                                          v2055,
                                                                          0,
                                                                          1024);
                                                                        v2022 = 95;
                                                                        v2026 = 76;
                                                                        v2023 = 2;
                                                                        v2027[0] = 92;
                                                                        v2024 = 29;
                                                                        v2027[1] = 22;
                                                                        v2025 = 12;
                                                                        v2027[2] = 9;
                                                                        v2028 = 12;
                                                                        v2027[3] = 10;
                                                                        v2029 = 17;
                                                                        v2027[4] = 73;
                                                                        v2030 = 3;
                                                                        v2027[5] = 66;
                                                                        v2032 = 0;
                                                                        v2031 = 115;
                                                                        v1163 = &v2030;
                                                                        do
                                                                        {
                                                                          v1164 = *v1163--;
                                                                          v1163[1] = v1164 ^ v1163[2];
                                                                        }
                                                                        while ( v1163 != &v2021[15] );
                                                                        v1165 = 0;
                                                                        v2007 = 114;
                                                                        v2008 = 0;
                                                                        v1985 = (unsigned int)v2021;
                                                                        qmemcpy(v2021, "OHBL", 4);
                                                                        v2021[4] = 4;
                                                                        strcpy(&v2021[5], "E@K");
                                                                        do
                                                                          v2021[v1165++] ^= 0x29u;
                                                                        while ( v1165 != 8 );
                                                                        v1166 = (*(int (__fastcall **)(char *, char *))(*(_DWORD *)v1992 + 76))(
                                                                                  &v2022,
                                                                                  &v2007);
                                                                        v1167 = v1988;
                                                                        v1986 = v1166;
                                                                        v1999 = (char *)*((_DWORD *)v1988 - 51);
                                                                        if ( !v1166 )
                                                                          goto LABEL_2249;
                                                                        memset(v2056, 0, 0x400u);
                                                                        while ( 1 )
                                                                        {
                                                                          if ( !(*(int (__fastcall **)(_BYTE *, int, unsigned int))(*(_DWORD *)v1992 + 80))(
                                                                                  v2056,
                                                                                  1023,
                                                                                  v1986) )
                                                                          {
                                                                            v1170 = 0;
                                                                            goto LABEL_2248;
                                                                          }
                                                                          v1168 = v1992;
                                                                          if ( (*(int (__fastcall **)(_BYTE *, void *))(*(_DWORD *)v1992 + 28))(
                                                                                 v2056,
                                                                                 &unk_280F484) )
                                                                          {
                                                                            v1169 = (*(int (__fastcall **)(_BYTE *, char *))(*(_DWORD *)v1168 + 28))(
                                                                                      v2056,
                                                                                      v2021);
                                                                            if ( !v1169 )
                                                                            {
                                                                              v2010 = 0;
                                                                              v2009 = 47;
                                                                              v1802 = (char *)(*(int (__fastcall **)(_BYTE *, char *))(*(_DWORD *)v1992 + 28))(
                                                                                                v2056,
                                                                                                &v2009);
                                                                              v1982 = v1802;
                                                                              if ( v1802 )
                                                                                break;
                                                                            }
                                                                          }
                                                                        }
                                                                        v1991 = (*(int (**)(void))(*(_DWORD *)v1992 + 32))();
                                                                        if ( v1982 == v1993 )
                                                                        {
                                                                          memset(v2016, 0, sizeof(v2016));
                                                                          do
                                                                          {
                                                                            v1803 = v1169;
                                                                            v1804 = 8;
                                                                            do
                                                                            {
                                                                              v1805 = (v1803 & 1) == 0;
                                                                              v1806 = v1803 >> 1;
                                                                              if ( (v1803 & 1) != 0 )
                                                                                v1803 = -128629065;
                                                                              else
                                                                                v1803 >>= 1;
                                                                              if ( !v1805 )
                                                                                v1803 ^= v1806;
                                                                              --v1804;
                                                                            }
                                                                            while ( v1804 );
                                                                            v2016[v1169++] = v1803;
                                                                          }
                                                                          while ( v1169 != 256 );
                                                                          v1807 = -1;
                                                                          do
                                                                          {
                                                                            v1808 = (unsigned __int8)v2055[v1804++];
                                                                            v1807 = (v2016[(unsigned __int8)v1807
                                                                                         ^ v1808]
                                                                                   ^ (v1807 >> 8))
                                                                                  + 16;
                                                                          }
                                                                          while ( v1804 != 4 );
                                                                          v1809 = ~v1807;
                                                                          switch ( v1991 )
                                                                          {
                                                                            case 0u:
                                                                            case 1u:
                                                                            case 2u:
                                                                              v1810 = 0;
                                                                              break;
                                                                            case 3u:
                                                                              v1810 = 3;
                                                                              break;
                                                                            case 4u:
                                                                              v1810 = v1809 + 517762882;
                                                                              break;
                                                                            case 5u:
                                                                              v1810 = v1809 + 517762880;
                                                                              break;
                                                                            case 6u:
                                                                              v1810 = 7;
                                                                              break;
                                                                            case 7u:
                                                                              v1810 = 6;
                                                                              break;
                                                                            default:
                                                                              v1810 = v1991 + 15;
                                                                              break;
                                                                          }
                                                                          v1991 = v1810 % 16;
                                                                        }
                                                                        v2016[0] = -1523182318;
                                                                        LOBYTE(v2016[1]) = 0;
                                                                        v1811 = *(char **)v1992;
                                                                        v1812 = strlen((const char *)v2016);
                                                                        v1813 = (char *)*((_DWORD *)v1988 - 49);
                                                                        v1814 = v1812;
                                                                        if ( v1812
                                                                          && (v1815 = v1812 + 1, v1815 > v1814)
                                                                          && (v1816 = malloc(v1815),
                                                                              (v1984 = (unsigned int)v1816) != 0) )
                                                                        {
                                                                          (*((void (__fastcall **)(void *, _DWORD *, size_t))v1811
                                                                           + 6))(
                                                                            v1816,
                                                                            v2016,
                                                                            v1814);
                                                                          *(_BYTE *)(v1984 + v1814) = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                          v1814 = 0;
                                                                          v1984 = (unsigned int)v1813;
                                                                        }
                                                                        v2015 = (_BYTE *)&loc_A65562;
                                                                        v1817 = *(char **)v1992;
                                                                        v1818 = strlen((const char *)&v2015);
                                                                        v1819 = v1818;
                                                                        if ( v1818
                                                                          && (v1820 = v1818 + 1, v1820 > v1819)
                                                                          && (v1821 = malloc(v1820),
                                                                              (v1987 = (unsigned int)v1821) != 0) )
                                                                        {
                                                                          (*((void (__fastcall **)(void *, char **, unsigned int))v1817
                                                                           + 6))(
                                                                            v1821,
                                                                            &v2015,
                                                                            v1819);
                                                                          *(_BYTE *)(v1987 + v1819) = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                          v1819 = 0;
                                                                          v1987 = (unsigned int)v1813;
                                                                        }
                                                                        v1822 = v1819 + 2;
                                                                        v1823 = v2016[0];
                                                                        if ( v1819 + 2 < v1819 )
                                                                          goto LABEL_3727;
                                                                        v1824 = v1819 + 1;
                                                                        if ( v1819 + 1 >= v1819 )
                                                                        {
                                                                          if ( v1822 < v1824 )
                                                                            goto LABEL_3727;
                                                                          if ( (char *)v1987 == v1813 )
                                                                          {
                                                                            if ( v1822 > v1824 )
                                                                            {
                                                                              v1825 = malloc(v1819 + 2);
                                                                              if ( v1825 )
                                                                              {
                                                                                *v1825 = 0;
                                                                                goto LABEL_3725;
                                                                              }
                                                                            }
LABEL_3727:
                                                                            v1990 = *(_DWORD *)v1992;
                                                                            v1827 = strlen(v1982);
                                                                            v1828 = v1827;
                                                                            if ( v1827
                                                                              && (v1829 = v1827 + 1, v1829 > v1828)
                                                                              && (v1830 = (char *)malloc(v1829),
                                                                                  (v1831 = v1830) != 0) )
                                                                            {
                                                                              (*(void (__fastcall **)(char *, char *, unsigned int))(v1990 + 24))(
                                                                                v1830,
                                                                                v1982,
                                                                                v1828);
                                                                              v1831[v1828] = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                              v1828 = 0;
                                                                              v1831 = v1813;
                                                                            }
                                                                            if ( v1814 != 8 )
                                                                            {
                                                                              if ( v1814 != 9 )
                                                                              {
                                                                                if ( v1814 != 7 )
                                                                                {
                                                                                  v1836 = v1819 - 4;
                                                                                  goto LABEL_3768;
                                                                                }
                                                                                v1832 = v1828 + 2;
                                                                                v1833 = BYTE1(v2015);
                                                                                if ( v1828 + 2 < v1828 )
                                                                                  goto LABEL_3744;
                                                                                v1834 = v1828 + 1;
                                                                                if ( v1828 + 1 >= v1828 )
                                                                                {
                                                                                  if ( v1832 < v1834 )
                                                                                    goto LABEL_3744;
                                                                                  if ( v1831 == v1813 )
                                                                                  {
                                                                                    if ( v1832 > v1834 )
                                                                                    {
                                                                                      v1835 = (char *)malloc(v1828 + 2);
                                                                                      if ( v1835 )
                                                                                      {
                                                                                        *v1835 = 0;
                                                                                        goto LABEL_3742;
                                                                                      }
                                                                                    }
LABEL_3744:
                                                                                    v1836 = v1828 + 20;
LABEL_3768:
                                                                                    if ( v1831 != v1813 )
                                                                                      free(v1831);
                                                                                    if ( (char *)v1987 != v1813 )
                                                                                      free((void *)v1987);
                                                                                    if ( (char *)v1984 != v1813 )
                                                                                      free((void *)v1984);
                                                                                    while ( v1836 < v1991 )
                                                                                    {
                                                                                      v2055[v1836] = v1982[v1836];
                                                                                      ++v1836;
                                                                                    }
                                                                                    v1845 = (*(int (__fastcall **)(_BYTE *, void *))(*(_DWORD *)v1992 + 28))(
                                                                                              v2055,
                                                                                              &unk_280F484);
                                                                                    v1846 = *(int (__fastcall **)(char *))(*(_DWORD *)v1992 + 32);
                                                                                    v1984 = v1845;
                                                                                    v1991 = v1846(&v2035);
                                                                                    if ( (char *)v1984 == &v2035 )
                                                                                    {
                                                                                      memset(v2016, 0, sizeof(v2016));
                                                                                      for ( i68 = 0; i68 != 256; ++i68 )
                                                                                      {
                                                                                        v1848 = i68;
                                                                                        v1849 = 8;
                                                                                        do
                                                                                        {
                                                                                          v1850 = (v1848 & 1) == 0;
                                                                                          v1851 = v1848 >> 1;
                                                                                          if ( (v1848 & 1) != 0 )
                                                                                            v1848 = -128629065;
                                                                                          else
                                                                                            v1848 >>= 1;
                                                                                          if ( !v1850 )
                                                                                            v1848 ^= v1851;
                                                                                          --v1849;
                                                                                        }
                                                                                        while ( v1849 );
                                                                                        v2016[i68] = v1848;
                                                                                      }
                                                                                      v1852 = 0;
                                                                                      v1853 = -1;
                                                                                      do
                                                                                      {
                                                                                        v1854 = (unsigned __int8)*(&v2035 + v1852++);
                                                                                        v1853 = (v2016[(unsigned __int8)v1853 ^ v1854]
                                                                                               ^ (v1853 >> 8))
                                                                                              + 16;
                                                                                      }
                                                                                      while ( v1852 != 4 );
                                                                                      v1855 = ~v1853;
                                                                                      switch ( v1991 )
                                                                                      {
                                                                                        case 0u:
                                                                                        case 1u:
                                                                                        case 2u:
                                                                                          v1856 = 0;
                                                                                          break;
                                                                                        case 3u:
                                                                                          v1856 = 3;
                                                                                          break;
                                                                                        case 4u:
                                                                                          v1856 = v1855 + 517762882;
                                                                                          break;
                                                                                        case 5u:
                                                                                          v1856 = v1855 + 517762880;
                                                                                          break;
                                                                                        case 6u:
                                                                                          v1856 = 7;
                                                                                          break;
                                                                                        case 7u:
                                                                                          v1856 = 6;
                                                                                          break;
                                                                                        default:
                                                                                          v1856 = v1991 + 15;
                                                                                          break;
                                                                                      }
                                                                                      v1991 = v1856 % 16;
                                                                                    }
                                                                                    v2016[0] = -1523182318;
                                                                                    LOBYTE(v2016[1]) = 0;
                                                                                    v1857 = *(char **)v1992;
                                                                                    v1858 = strlen((const char *)v2016);
                                                                                    v1987 = v1858;
                                                                                    if ( v1858
                                                                                      && (v1859 = v1858 + 1,
                                                                                          v1859 > v1987)
                                                                                      && (v1860 = (char *)malloc(v1859),
                                                                                          (v1982 = v1860) != 0) )
                                                                                    {
                                                                                      (*((void (__fastcall **)(char *, _DWORD *, unsigned int))v1857
                                                                                       + 6))(
                                                                                        v1860,
                                                                                        v2016,
                                                                                        v1987);
                                                                                      v1982[v1987] = 0;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      v1982 = v1813;
                                                                                      v1987 = 0;
                                                                                    }
                                                                                    v2015 = (_BYTE *)&loc_A65562;
                                                                                    v1861 = *(_DWORD *)v1999;
                                                                                    v1862 = strlen((const char *)&v2015);
                                                                                    v1863 = v1862;
                                                                                    if ( v1862
                                                                                      && (v1864 = v1862 + 1,
                                                                                          v1864 > v1863)
                                                                                      && (v1865 = (char *)malloc(v1864),
                                                                                          (v1866 = v1865) != 0) )
                                                                                    {
                                                                                      (*(void (__fastcall **)(char *, char **, unsigned int))(v1861 + 24))(
                                                                                        v1865,
                                                                                        &v2015,
                                                                                        v1863);
                                                                                      v1866[v1863] = 0;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      v1863 = 0;
                                                                                      v1866 = v1813;
                                                                                    }
                                                                                    v1867 = v1863 + 2;
                                                                                    v1868 = v2016[0];
                                                                                    if ( v1863 + 2 < v1863 )
                                                                                      goto LABEL_3815;
                                                                                    v1869 = v1863 + 1;
                                                                                    if ( v1863 + 1 >= v1863 )
                                                                                    {
                                                                                      if ( v1867 < v1869 )
                                                                                        goto LABEL_3815;
                                                                                      if ( v1866 == v1813 )
                                                                                      {
                                                                                        if ( v1867 > v1869 )
                                                                                        {
                                                                                          v1870 = (char *)malloc(v1863 + 2);
                                                                                          if ( v1870 )
                                                                                          {
                                                                                            *v1870 = 0;
                                                                                            goto LABEL_3813;
                                                                                          }
                                                                                        }
LABEL_3815:
                                                                                        v1990 = *(_DWORD *)v1999;
                                                                                        v1871 = strlen(&v2035);
                                                                                        v1872 = v1871;
                                                                                        if ( v1871
                                                                                          && (v1873 = v1871 + 1,
                                                                                              v1873 > v1872)
                                                                                          && (v1874 = (char *)malloc(v1873),
                                                                                              (v1875 = v1874) != 0) )
                                                                                        {
                                                                                          (*(void (__fastcall **)(char *, char *, unsigned int))(v1990 + 24))(
                                                                                            v1874,
                                                                                            &v2035,
                                                                                            v1872);
                                                                                          v1875[v1872] = 0;
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          v1872 = 0;
                                                                                          v1875 = v1813;
                                                                                        }
                                                                                        if ( v1987 != 8 )
                                                                                        {
                                                                                          if ( v1987 != 9 )
                                                                                          {
                                                                                            if ( v1987 != 7 )
                                                                                            {
                                                                                              v1880 = v1863 - 4;
                                                                                              goto LABEL_3856;
                                                                                            }
                                                                                            v1876 = v1872 + 2;
                                                                                            v1877 = BYTE1(v2015);
                                                                                            if ( v1872 + 2 < v1872 )
                                                                                              goto LABEL_3832;
                                                                                            v1878 = v1872 + 1;
                                                                                            if ( v1872 + 1 >= v1872 )
                                                                                            {
                                                                                              if ( v1876 < v1878 )
                                                                                                goto LABEL_3832;
                                                                                              if ( v1875 == v1813 )
                                                                                              {
                                                                                                if ( v1876 > v1878 )
                                                                                                {
                                                                                                  v1879 = (char *)malloc(v1872 + 2);
                                                                                                  if ( v1879 )
                                                                                                  {
                                                                                                    *v1879 = 0;
                                                                                                    goto LABEL_3830;
                                                                                                  }
                                                                                                }
LABEL_3832:
                                                                                                v1880 = v1872 + 20;
LABEL_3856:
                                                                                                if ( v1875 != v1813 )
                                                                                                  free(v1875);
                                                                                                if ( v1866 != v1813 )
                                                                                                  free(v1866);
                                                                                                if ( v1982 != v1813 )
                                                                                                  free(v1982);
                                                                                                while ( v1880 < v1991 )
                                                                                                {
                                                                                                  *(_BYTE *)(v1984 + v1880) = *(&v2035 + v1880);
                                                                                                  ++v1880;
                                                                                                }
                                                                                                v1170 = 1;
                                                                                                v1889 = (*(int (__fastcall **)(char *))(*(_DWORD *)v1999 + 32))(&v2035);
                                                                                                *(_BYTE *)(v1984 + v1889) = 0;
LABEL_2248:
                                                                                                v1167 = v1992;
                                                                                                (*(void (__fastcall **)(unsigned int))(*(_DWORD *)v1992 + 84))(v1986);
                                                                                                if ( v1170 && (*(int (__fastcall **)(_BYTE *, _DWORD))(*(_DWORD *)v1992 + 36))(v2055, 0) )
                                                                                                {
LABEL_2271:
                                                                                                  v1180 = v1989;
                                                                                                  v1181 = (void (__fastcall *)(_DWORD, _DWORD))(*(int (**)(void))(*v1989 + 220))();
                                                                                                  if ( v1181 )
                                                                                                    v1181(*(_DWORD *)(*v1180 + 108), *(_DWORD *)(*v1180 + 112));
                                                                                                  goto LABEL_2283;
                                                                                                }
LABEL_2249:
                                                                                                qmemcpy(
                                                                                                  v2021,
                                                                                                  "X_V_X",
                                                                                                  5);
                                                                                                v1171 = 0;
                                                                                                v2021[5] = 6;
                                                                                                v2021[6] = 81;
                                                                                                v2021[7] = 68;
                                                                                                v2021[8] = 68;
                                                                                                v2021[9] = 26;
                                                                                                strcpy(&v2021[10], "AE");
                                                                                                do
                                                                                                {
                                                                                                  v1172 = (unsigned __int8)v2021[v1171] ^ 0x15;
                                                                                                  if ( v1172 + 31 > 255 )
                                                                                                    v2021[v1171] = v1172 + 32;
                                                                                                  else
                                                                                                    v1167 = v2021;
                                                                                                  if ( v1172 + 31 <= 255 )
                                                                                                    v1167[v1171] = v1172 + 31;
                                                                                                  ++v1171;
                                                                                                }
                                                                                                while ( v1171 != 12 );
                                                                                                (*(void (__fastcall **)(_BYTE *, _DWORD, int))(*(_DWORD *)v1992 + 20))(
                                                                                                  v2055,
                                                                                                  0,
                                                                                                  1024);
                                                                                                v2022 = 95;
                                                                                                v2023 = 2;
                                                                                                v2024 = 29;
                                                                                                v2026 = 76;
                                                                                                v2027[0] = 92;
                                                                                                v2027[1] = 22;
                                                                                                qmemcpy(
                                                                                                  &v2027[2],
                                                                                                  "\t\nIB",
                                                                                                  4);
                                                                                                v2029 = 17;
                                                                                                v2030 = 3;
                                                                                                v2032 = 0;
                                                                                                v2031 = 115;
                                                                                                v1173 = &v2030;
                                                                                                v2025 = 12;
                                                                                                v2028 = 12;
                                                                                                do
                                                                                                {
                                                                                                  v1174 = *v1173--;
                                                                                                  v1173[1] = v1174 ^ v1173[2];
                                                                                                }
                                                                                                while ( v1173 != &v2021[15] );
                                                                                                v2007 = 114;
                                                                                                v1175 = 0;
                                                                                                v2008 = 0;
                                                                                                qmemcpy(
                                                                                                  v2017,
                                                                                                  "OHBL",
                                                                                                  4);
                                                                                                v2017[4] = 4;
                                                                                                strcpy(v2018, "E@K");
                                                                                                do
                                                                                                  v2017[v1175++] ^= 0x29u;
                                                                                                while ( v1175 != 8 );
                                                                                                v1982 = (char *)(*(int (__fastcall **)(char *, char *))(*(_DWORD *)v1992 + 76))(&v2022, &v2007);
                                                                                                if ( v1982 )
                                                                                                {
                                                                                                  memset(
                                                                                                    v2056,
                                                                                                    0,
                                                                                                    0x400u);
                                                                                                  while ( 1 )
                                                                                                  {
                                                                                                    if ( !(*(int (__fastcall **)(_BYTE *, int, char *))(*(_DWORD *)v1992 + 80))(v2056, 1023, v1982) )
                                                                                                    {
                                                                                                      v1178 = 0;
                                                                                                      goto LABEL_2269;
                                                                                                    }
                                                                                                    v1176 = v1992;
                                                                                                    if ( (*(int (__fastcall **)(_BYTE *, void *))(*(_DWORD *)v1992 + 28))(v2056, &unk_280F484) )
                                                                                                    {
                                                                                                      v1177 = (*(int (__fastcall **)(_BYTE *, _BYTE *))(*(_DWORD *)v1176 + 28))(v2056, v2017);
                                                                                                      if ( !v1177 )
                                                                                                      {
                                                                                                        v2010 = 0;
                                                                                                        v2009 = 47;
                                                                                                        v1890 = (const char *)(*(int (__fastcall **)(_BYTE *, char *))(*(_DWORD *)v1992 + 28))(v2056, &v2009);
                                                                                                        v1995 = (char *)v1890;
                                                                                                        if ( v1890 )
                                                                                                          break;
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                  v1987 = (*(int (**)(void))(*(_DWORD *)v1992 + 32))();
                                                                                                  if ( v1995 == v1993 )
                                                                                                  {
                                                                                                    memset(v2016, 0, sizeof(v2016));
                                                                                                    do
                                                                                                    {
                                                                                                      v1891 = v1177;
                                                                                                      v1892 = 8;
                                                                                                      do
                                                                                                      {
                                                                                                        v1893 = (v1891 & 1) == 0;
                                                                                                        v1894 = v1891 >> 1;
                                                                                                        if ( (v1891 & 1) != 0 )
                                                                                                          v1891 = -128629065;
                                                                                                        else
                                                                                                          v1891 >>= 1;
                                                                                                        if ( !v1893 )
                                                                                                          v1891 ^= v1894;
                                                                                                        --v1892;
                                                                                                      }
                                                                                                      while ( v1892 );
                                                                                                      v2016[v1177++] = v1891;
                                                                                                    }
                                                                                                    while ( v1177 != 256 );
                                                                                                    v1895 = -1;
                                                                                                    do
                                                                                                    {
                                                                                                      v1896 = (unsigned __int8)v2055[v1892++];
                                                                                                      v1895 = (v2016[v1896 ^ (unsigned __int8)v1895] ^ (v1895 >> 8)) + 16;
                                                                                                    }
                                                                                                    while ( v1892 != 4 );
                                                                                                    switch ( v1987 )
                                                                                                    {
                                                                                                      case 0u:
                                                                                                      case 1u:
                                                                                                      case 2u:
                                                                                                        v1897 = 0;
                                                                                                        break;
                                                                                                      case 3u:
                                                                                                        v1897 = 3;
                                                                                                        break;
                                                                                                      case 4u:
                                                                                                        v1897 = 517762881 - v1895;
                                                                                                        break;
                                                                                                      case 5u:
                                                                                                        v1897 = 517762879 - v1895;
                                                                                                        break;
                                                                                                      case 6u:
                                                                                                        v1897 = 7;
                                                                                                        break;
                                                                                                      case 7u:
                                                                                                        v1897 = 6;
                                                                                                        break;
                                                                                                      default:
                                                                                                        v1897 = v1987 + 15;
                                                                                                        break;
                                                                                                    }
                                                                                                    v1987 = v1897 % 16;
                                                                                                  }
                                                                                                  v2016[0] = -1523182318;
                                                                                                  LOBYTE(v2016[1]) = 0;
                                                                                                  v1898 = strlen((const char *)v2016);
                                                                                                  v1899 = *(char **)v1992;
                                                                                                  v1900 = (_BYTE *)*((_DWORD *)v1988 - 49);
                                                                                                  v1901 = v1898;
                                                                                                  if ( v1898 && (v1902 = v1898 + 1, v1902 > v1901) && (v1903 = malloc(v1902), (v1991 = (unsigned int)v1903) != 0) )
                                                                                                  {
                                                                                                    (*((void (__fastcall **)(void *, _DWORD *, size_t))v1899 + 6))(v1903, v2016, v1901);
                                                                                                    *(_BYTE *)(v1991 + v1901) = 0;
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    v1901 = 0;
                                                                                                    v1991 = (unsigned int)v1900;
                                                                                                  }
                                                                                                  v2015 = (_BYTE *)&loc_A65562;
                                                                                                  v1904 = *(char **)v1992;
                                                                                                  v1905 = strlen((const char *)&v2015);
                                                                                                  v1906 = v1905;
                                                                                                  if ( v1905 && (v1907 = v1905 + 1, v1907 > v1906) && (v1908 = malloc(v1907), (v1909 = v1908) != 0) )
                                                                                                  {
                                                                                                    (*((void (__fastcall **)(_BYTE *, char **, unsigned int))v1904 + 6))(v1908, &v2015, v1906);
                                                                                                    v1909[v1906] = 0;
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    v1906 = 0;
                                                                                                    v1909 = v1900;
                                                                                                  }
                                                                                                  v1910 = v1906 + 2;
                                                                                                  v1911 = v2016[0];
                                                                                                  if ( v1906 + 2 < v1906 )
                                                                                                    goto LABEL_3911;
                                                                                                  v1912 = v1906 + 1;
                                                                                                  if ( v1906 + 1 >= v1906 )
                                                                                                  {
                                                                                                    if ( v1910 < v1912 )
                                                                                                      goto LABEL_3911;
                                                                                                    if ( v1909 == v1900 )
                                                                                                    {
                                                                                                      if ( v1910 > v1912 )
                                                                                                      {
                                                                                                        v1913 = malloc(v1906 + 2);
                                                                                                        if ( v1913 )
                                                                                                        {
                                                                                                          *v1913 = 0;
                                                                                                          goto LABEL_3909;
                                                                                                        }
                                                                                                      }
LABEL_3911:
                                                                                                      v1914 = *(char **)v1992;
                                                                                                      v1915 = strlen(v1995);
                                                                                                      v1916 = v1915;
                                                                                                      if ( v1915 && (v1917 = v1915 + 1, v1917 > v1916) && (v1918 = malloc(v1917), (v1919 = v1918) != 0) )
                                                                                                      {
                                                                                                        (*((void (__fastcall **)(_BYTE *, char *, unsigned int))v1914 + 6))(v1918, v1995, v1916);
                                                                                                        v1919[v1916] = 0;
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        v1916 = 0;
                                                                                                        v1919 = v1900;
                                                                                                      }
                                                                                                      if ( v1901 != 8 )
                                                                                                      {
                                                                                                        if ( v1901 != 9 )
                                                                                                        {
                                                                                                          if ( v1901 != 7 )
                                                                                                          {
                                                                                                            v1924 = v1906 - 4;
                                                                                                            goto LABEL_3952;
                                                                                                          }
                                                                                                          v1920 = v1916 + 2;
                                                                                                          v1921 = BYTE1(v2015);
                                                                                                          if ( v1916 + 2 < v1916 )
                                                                                                            goto LABEL_3928;
                                                                                                          v1922 = v1916 + 1;
                                                                                                          if ( v1916 + 1 >= v1916 )
                                                                                                          {
                                                                                                            if ( v1920 < v1922 )
                                                                                                              goto LABEL_3928;
                                                                                                            if ( v1919 == v1900 )
                                                                                                            {
                                                                                                              if ( v1920 > v1922 )
                                                                                                              {
                                                                                                                v1923 = malloc(v1916 + 2);
                                                                                                                if ( v1923 )
                                                                                                                {
                                                                                                                  *v1923 = 0;
                                                                                                                  goto LABEL_3926;
                                                                                                                }
                                                                                                              }
LABEL_3928:
                                                                                                              v1924 = v1916 + 20;
LABEL_3952:
                                                                                                              if ( v1919 != v1900 )
                                                                                                                free(v1919);
                                                                                                              if ( v1909 != v1900 )
                                                                                                                free(v1909);
                                                                                                              if ( (_BYTE *)v1991 != v1900 )
                                                                                                                free((void *)v1991);
                                                                                                              while ( v1924 < v1987 )
                                                                                                              {
                                                                                                                v2055[v1924] = v1995[v1924];
                                                                                                                ++v1924;
                                                                                                              }
                                                                                                              v1933 = v1999;
                                                                                                              v1934 = (const char *)(*(int (__fastcall **)(_BYTE *, void *))(*(_DWORD *)v1999 + 28))(v2055, &unk_280F484);
                                                                                                              v1935 = *(int (__fastcall **)(char *))(*(_DWORD *)v1933 + 32);
                                                                                                              v1995 = (char *)v1934;
                                                                                                              v1987 = v1935(v2021);
                                                                                                              if ( v1995 == (char *)v1985 )
                                                                                                              {
                                                                                                                memset(v2016, 0, sizeof(v2016));
                                                                                                                for ( i69 = 0;
                                                                                                                      i69 != 256;
                                                                                                                      ++i69 )
                                                                                                                {
                                                                                                                  v1937 = i69;
                                                                                                                  v1938 = 8;
                                                                                                                  do
                                                                                                                  {
                                                                                                                    v1939 = (v1937 & 1) == 0;
                                                                                                                    v1940 = v1937 >> 1;
                                                                                                                    if ( (v1937 & 1) != 0 )
                                                                                                                      v1937 = -128629065;
                                                                                                                    else
                                                                                                                      v1937 >>= 1;
                                                                                                                    if ( !v1939 )
                                                                                                                      v1937 ^= v1940;
                                                                                                                    --v1938;
                                                                                                                  }
                                                                                                                  while ( v1938 );
                                                                                                                  v2016[i69] = v1937;
                                                                                                                }
                                                                                                                v1941 = 0;
                                                                                                                v1942 = -1;
                                                                                                                do
                                                                                                                {
                                                                                                                  v1943 = (unsigned __int8)v2021[v1941++];
                                                                                                                  v1942 = (v2016[v1943 ^ (unsigned __int8)v1942] ^ (v1942 >> 8)) + 16;
                                                                                                                }
                                                                                                                while ( v1941 != 4 );
                                                                                                                switch ( v1987 )
                                                                                                                {
                                                                                                                  case 0u:
                                                                                                                  case 1u:
                                                                                                                  case 2u:
                                                                                                                    v1944 = 0;
                                                                                                                    break;
                                                                                                                  case 3u:
                                                                                                                    v1944 = 3;
                                                                                                                    break;
                                                                                                                  case 4u:
                                                                                                                    v1944 = 517762881 - v1942;
                                                                                                                    break;
                                                                                                                  case 5u:
                                                                                                                    v1944 = 517762879 - v1942;
                                                                                                                    break;
                                                                                                                  case 6u:
                                                                                                                    v1944 = 7;
                                                                                                                    break;
                                                                                                                  case 7u:
                                                                                                                    v1944 = 6;
                                                                                                                    break;
                                                                                                                  default:
                                                                                                                    v1944 = v1987 + 15;
                                                                                                                    break;
                                                                                                                }
                                                                                                                v1987 = v1944 % 16;
                                                                                                              }
                                                                                                              v2016[0] = -1523182318;
                                                                                                              LOBYTE(v2016[1]) = 0;
                                                                                                              v1945 = strlen((const char *)v2016);
                                                                                                              v1946 = *(_DWORD *)v1999;
                                                                                                              v1947 = v1945;
                                                                                                              if ( v1945 && (v1948 = v1945 + 1, v1948 > v1947) && (v1949 = malloc(v1948), (v1950 = v1949) != 0) )
                                                                                                              {
                                                                                                                (*(void (__fastcall **)(_BYTE *, _DWORD *, size_t))(v1946 + 24))(v1949, v2016, v1947);
                                                                                                                v1950[v1947] = 0;
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                v1947 = 0;
                                                                                                                v1950 = v1900;
                                                                                                              }
                                                                                                              v2015 = (_BYTE *)&loc_A65562;
                                                                                                              v1951 = *(_DWORD *)v1999;
                                                                                                              v1952 = strlen((const char *)&v2015);
                                                                                                              v1953 = v1952;
                                                                                                              if ( v1952 && (v1954 = v1952 + 1, v1954 > v1953) && (v1955 = malloc(v1954), (v1956 = v1955) != 0) )
                                                                                                              {
                                                                                                                (*(void (__fastcall **)(_BYTE *, char **, unsigned int))(v1951 + 24))(v1955, &v2015, v1953);
                                                                                                                v1956[v1953] = 0;
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                v1953 = 0;
                                                                                                                v1956 = v1900;
                                                                                                              }
                                                                                                              v1957 = v1953 + 2;
                                                                                                              v1958 = v2016[0];
                                                                                                              if ( v1953 + 2 < v1953 )
                                                                                                                goto LABEL_3999;
                                                                                                              v1959 = v1953 + 1;
                                                                                                              if ( v1953 + 1 >= v1953 )
                                                                                                              {
                                                                                                                if ( v1957 < v1959 )
                                                                                                                  goto LABEL_3999;
                                                                                                                if ( v1956 == v1900 )
                                                                                                                {
                                                                                                                  if ( v1957 > v1959 )
                                                                                                                  {
                                                                                                                    v1960 = malloc(v1953 + 2);
                                                                                                                    if ( v1960 )
                                                                                                                    {
                                                                                                                      *v1960 = 0;
                                                                                                                      goto LABEL_3997;
                                                                                                                    }
                                                                                                                  }
LABEL_3999:
                                                                                                                  v1999 = *(char **)v1999;
                                                                                                                  v1961 = strlen(v2021);
                                                                                                                  v1962 = v1961;
                                                                                                                  if ( v1961 && (v1963 = v1961 + 1, v1963 > v1962) && (v1964 = malloc(v1963), (v1965 = v1964) != 0) )
                                                                                                                  {
                                                                                                                    (*((void (__fastcall **)(_BYTE *, char *, unsigned int))v1999 + 6))(v1964, v2021, v1962);
                                                                                                                    v1965[v1962] = 0;
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    v1962 = 0;
                                                                                                                    v1965 = v1900;
                                                                                                                  }
                                                                                                                  if ( v1947 != 8 )
                                                                                                                  {
                                                                                                                    if ( v1947 != 9 )
                                                                                                                    {
                                                                                                                      if ( v1947 != 7 )
                                                                                                                      {
                                                                                                                        v1970 = v1953 - 4;
                                                                                                                        goto LABEL_4040;
                                                                                                                      }
                                                                                                                      v1966 = v1962 + 2;
                                                                                                                      v1967 = BYTE1(v2015);
                                                                                                                      if ( v1962 + 2 < v1962 )
                                                                                                                        goto LABEL_4016;
                                                                                                                      v1968 = v1962 + 1;
                                                                                                                      if ( v1962 + 1 >= v1962 )
                                                                                                                      {
                                                                                                                        if ( v1966 < v1968 )
                                                                                                                          goto LABEL_4016;
                                                                                                                        if ( v1965 == v1900 )
                                                                                                                        {
                                                                                                                          if ( v1966 > v1968 )
                                                                                                                          {
                                                                                                                            v1969 = malloc(v1962 + 2);
                                                                                                                            if ( v1969 )
                                                                                                                            {
                                                                                                                              *v1969 = 0;
                                                                                                                              goto LABEL_4014;
                                                                                                                            }
                                                                                                                          }
LABEL_4016:
                                                                                                                          v1970 = v1962 + 20;
LABEL_4040:
                                                                                                                          if ( v1965 != v1900 )
                                                                                                                            free(v1965);
                                                                                                                          if ( v1956 != v1900 )
                                                                                                                            free(v1956);
                                                                                                                          if ( v1950 != v1900 )
                                                                                                                            free(v1950);
                                                                                                                          while ( v1970 < v1987 )
                                                                                                                          {
                                                                                                                            v1995[v1970] = v2021[v1970];
                                                                                                                            ++v1970;
                                                                                                                          }
                                                                                                                          v1178 = 1;
                                                                                                                          v1979 = (*(int (__fastcall **)(char *))(**((_DWORD **)v1988 - 51) + 32))(v2021);
                                                                                                                          v1995[v1979] = 0;
LABEL_2269:
                                                                                                                          v1179 = v1992;
                                                                                                                          (*(void (__fastcall **)(char *))(*(_DWORD *)v1992 + 84))(v1982);
                                                                                                                          if ( v1178 && (*(int (__fastcall **)(_BYTE *, _DWORD))(*(_DWORD *)v1179 + 36))(v2055, 0) )
                                                                                                                            goto LABEL_2271;
                                                                                                                          goto LABEL_2283;
                                                                                                                        }
                                                                                                                        v1969 = realloc(v1965, v1966);
                                                                                                                        if ( !v1969 )
                                                                                                                          goto LABEL_4016;
LABEL_4014:
                                                                                                                        v1965 = v1969;
                                                                                                                      }
                                                                                                                      v1965[v1962++] = v1967;
                                                                                                                      v1965[v1968] = 0;
                                                                                                                      goto LABEL_4016;
                                                                                                                    }
                                                                                                                    v1975 = v1962 + 2;
                                                                                                                    v1976 = HIBYTE(v2016[0]);
                                                                                                                    if ( v1962 + 2 < v1962 )
                                                                                                                      goto LABEL_4038;
                                                                                                                    v1977 = v1962 + 1;
                                                                                                                    if ( v1962 + 1 >= v1962 )
                                                                                                                    {
                                                                                                                      if ( v1975 < v1977 )
                                                                                                                        goto LABEL_4038;
                                                                                                                      if ( v1965 == v1900 )
                                                                                                                      {
                                                                                                                        if ( v1975 > v1977 )
                                                                                                                        {
                                                                                                                          v1978 = malloc(v1962 + 2);
                                                                                                                          if ( v1978 )
                                                                                                                          {
                                                                                                                            *v1978 = 0;
                                                                                                                            goto LABEL_4036;
                                                                                                                          }
                                                                                                                        }
LABEL_4038:
                                                                                                                        v1970 = v1962 + 6;
                                                                                                                        goto LABEL_4040;
                                                                                                                      }
                                                                                                                      v1978 = realloc(v1965, v1975);
                                                                                                                      if ( !v1978 )
                                                                                                                        goto LABEL_4038;
LABEL_4036:
                                                                                                                      v1965 = v1978;
                                                                                                                    }
                                                                                                                    v1965[v1962++] = v1976;
                                                                                                                    v1965[v1977] = 0;
                                                                                                                    goto LABEL_4038;
                                                                                                                  }
                                                                                                                  v1971 = v1962 + 2;
                                                                                                                  v1972 = BYTE1(v2016[0]);
                                                                                                                  if ( v1962 + 2 < v1962 )
                                                                                                                    goto LABEL_4027;
                                                                                                                  v1973 = v1962 + 1;
                                                                                                                  if ( v1962 + 1 >= v1962 )
                                                                                                                  {
                                                                                                                    if ( v1971 < v1973 )
                                                                                                                      goto LABEL_4027;
                                                                                                                    if ( v1965 == v1900 )
                                                                                                                    {
                                                                                                                      if ( v1971 > v1973 )
                                                                                                                      {
                                                                                                                        v1974 = malloc(v1962 + 2);
                                                                                                                        if ( v1974 )
                                                                                                                        {
                                                                                                                          *v1974 = 0;
                                                                                                                          goto LABEL_4025;
                                                                                                                        }
                                                                                                                      }
LABEL_4027:
                                                                                                                      v1970 = v1962 + 8;
                                                                                                                      goto LABEL_4040;
                                                                                                                    }
                                                                                                                    v1974 = realloc(v1965, v1971);
                                                                                                                    if ( !v1974 )
                                                                                                                      goto LABEL_4027;
LABEL_4025:
                                                                                                                    v1965 = v1974;
                                                                                                                  }
                                                                                                                  v1965[v1962++] = v1972;
                                                                                                                  v1965[v1973] = 0;
                                                                                                                  goto LABEL_4027;
                                                                                                                }
                                                                                                                v1960 = realloc(v1956, v1957);
                                                                                                                if ( !v1960 )
                                                                                                                  goto LABEL_3999;
LABEL_3997:
                                                                                                                v1956 = v1960;
                                                                                                              }
                                                                                                              v1956[v1953++] = v1958;
                                                                                                              v1956[v1959] = 0;
                                                                                                              goto LABEL_3999;
                                                                                                            }
                                                                                                            v1923 = realloc(v1919, v1920);
                                                                                                            if ( !v1923 )
                                                                                                              goto LABEL_3928;
LABEL_3926:
                                                                                                            v1919 = v1923;
                                                                                                          }
                                                                                                          v1919[v1916++] = v1921;
                                                                                                          v1919[v1922] = 0;
                                                                                                          goto LABEL_3928;
                                                                                                        }
                                                                                                        v1929 = v1916 + 2;
                                                                                                        v1930 = HIBYTE(v2016[0]);
                                                                                                        if ( v1916 + 2 < v1916 )
                                                                                                          goto LABEL_3950;
                                                                                                        v1931 = v1916 + 1;
                                                                                                        if ( v1916 + 1 >= v1916 )
                                                                                                        {
                                                                                                          if ( v1929 < v1931 )
                                                                                                            goto LABEL_3950;
                                                                                                          if ( v1919 == v1900 )
                                                                                                          {
                                                                                                            if ( v1929 > v1931 )
                                                                                                            {
                                                                                                              v1932 = malloc(v1916 + 2);
                                                                                                              if ( v1932 )
                                                                                                              {
                                                                                                                *v1932 = 0;
                                                                                                                goto LABEL_3948;
                                                                                                              }
                                                                                                            }
LABEL_3950:
                                                                                                            v1924 = v1916 + 6;
                                                                                                            goto LABEL_3952;
                                                                                                          }
                                                                                                          v1932 = realloc(v1919, v1929);
                                                                                                          if ( !v1932 )
                                                                                                            goto LABEL_3950;
LABEL_3948:
                                                                                                          v1919 = v1932;
                                                                                                        }
                                                                                                        v1919[v1916++] = v1930;
                                                                                                        v1919[v1931] = 0;
                                                                                                        goto LABEL_3950;
                                                                                                      }
                                                                                                      v1925 = v1916 + 2;
                                                                                                      v1926 = BYTE1(v2016[0]);
                                                                                                      if ( v1916 + 2 < v1916 )
                                                                                                        goto LABEL_3939;
                                                                                                      v1927 = v1916 + 1;
                                                                                                      if ( v1916 + 1 >= v1916 )
                                                                                                      {
                                                                                                        if ( v1925 < v1927 )
                                                                                                          goto LABEL_3939;
                                                                                                        if ( v1919 == v1900 )
                                                                                                        {
                                                                                                          if ( v1925 > v1927 )
                                                                                                          {
                                                                                                            v1928 = malloc(v1916 + 2);
                                                                                                            if ( v1928 )
                                                                                                            {
                                                                                                              *v1928 = 0;
                                                                                                              goto LABEL_3937;
                                                                                                            }
                                                                                                          }
LABEL_3939:
                                                                                                          v1924 = v1916 + 8;
                                                                                                          goto LABEL_3952;
                                                                                                        }
                                                                                                        v1928 = realloc(v1919, v1925);
                                                                                                        if ( !v1928 )
                                                                                                          goto LABEL_3939;
LABEL_3937:
                                                                                                        v1919 = v1928;
                                                                                                      }
                                                                                                      v1919[v1916++] = v1926;
                                                                                                      v1919[v1927] = 0;
                                                                                                      goto LABEL_3939;
                                                                                                    }
                                                                                                    v1913 = realloc(v1909, v1910);
                                                                                                    if ( !v1913 )
                                                                                                      goto LABEL_3911;
LABEL_3909:
                                                                                                    v1909 = v1913;
                                                                                                  }
                                                                                                  v1909[v1906++] = v1911;
                                                                                                  v1909[v1912] = 0;
                                                                                                  goto LABEL_3911;
                                                                                                }
LABEL_2283:
                                                                                                v1185 = &v1998[dword_280F480[0]];
                                                                                                if ( v2006 && v1997 )
                                                                                                {
                                                                                                  memset(
                                                                                                    v2016,
                                                                                                    0,
                                                                                                    sizeof(v2016));
                                                                                                  for ( i70 = 0;
                                                                                                        i70 != 256;
                                                                                                        ++i70 )
                                                                                                  {
                                                                                                    v1187 = i70;
                                                                                                    v1188 = 8;
                                                                                                    do
                                                                                                    {
                                                                                                      v1189 = (v1187 & 1) == 0;
                                                                                                      v1190 = v1187 >> 1;
                                                                                                      if ( (v1187 & 1) != 0 )
                                                                                                        v1187 = -1888602208;
                                                                                                      else
                                                                                                        v1187 >>= 1;
                                                                                                      if ( !v1189 )
                                                                                                        v1187 ^= v1190;
                                                                                                      --v1188;
                                                                                                    }
                                                                                                    while ( v1188 );
                                                                                                    v2016[i70] = v1187;
                                                                                                  }
                                                                                                  v1191 = dword_280F510;
                                                                                                  dword_280F518 = *(_DWORD *)(*v1989 + 108);
                                                                                                  while ( v1188 != v1191 )
                                                                                                  {
                                                                                                    if ( (dword_280F480[4 * v1188 + 42] & 2) != 0 )
                                                                                                      v1192 = v2006;
                                                                                                    else
                                                                                                      v1192 = v1997;
                                                                                                    dword_280F480[4 * v1188 + 39] += v1192;
                                                                                                    if ( (dword_280F480[4 * v1188 + 42] & 1) != 0 )
                                                                                                    {
                                                                                                      v1193 = &dword_280F480[4 * v1188];
                                                                                                      v1194 = 0;
                                                                                                      v1195 = v1193[39];
                                                                                                      v1196 = v1193[40];
                                                                                                      v1197 = -1;
                                                                                                      while ( v1194 != v1196 )
                                                                                                      {
                                                                                                        v1198 = *(unsigned __int8 *)(v1194 + v1195);
                                                                                                        ++v1194;
                                                                                                        v1197 = (v2016[v1198 ^ (unsigned __int8)v1197] ^ (v1197 >> 8)) + 16;
                                                                                                      }
                                                                                                      dword_280F480[4 * v1188 + 41] = 517762880 - v1197;
                                                                                                    }
                                                                                                    ++v1188;
                                                                                                  }
                                                                                                  v1199 = 16 * v1188;
                                                                                                  v1200 = 0;
                                                                                                  v1201 = -1;
                                                                                                  while ( v1200 != v1199 )
                                                                                                  {
                                                                                                    v1202 = (char *)dword_280F480 + v1200++;
                                                                                                    v1201 = (v2016[(unsigned __int8)v1201 ^ (unsigned __int8)v1202[156]] ^ (v1201 >> 8)) + 16;
                                                                                                  }
                                                                                                  dword_280F514 = 517762880 - v1201;
                                                                                                }
                                                                                                v1203 = 0;
                                                                                                v2016[0] = dword_280F480[0];
                                                                                                do
                                                                                                {
                                                                                                  v2056[v1203] = v1203;
                                                                                                  ++v1203;
                                                                                                }
                                                                                                while ( v1203 != 256 );
                                                                                                LOBYTE(v1204) = 0;
                                                                                                for ( i71 = 0;
                                                                                                      i71 != 256;
                                                                                                      ++i71 )
                                                                                                {
                                                                                                  v1206 = v2056[i71];
                                                                                                  v1204 = (unsigned __int8)(v1204 + v1206 + *((_BYTE *)v2016 + (i71 & 3)));
                                                                                                  v2056[i71] = v2056[v1204];
                                                                                                  v2056[v1204] = v1206;
                                                                                                }
                                                                                                v1207 = v2004;
                                                                                                LOBYTE(v1208) = 0;
                                                                                                LOBYTE(v1209) = 0;
                                                                                                while ( v1207 != v2002 )
                                                                                                {
                                                                                                  v1209 = (unsigned __int8)(v1209 + 1);
                                                                                                  v1210 = v2056[v1209];
                                                                                                  v1208 = (unsigned __int8)(v1208 + v1210);
                                                                                                  v2056[v1209] = v2056[v1208];
                                                                                                  v2056[v1208] = v1210;
                                                                                                  v1211 = (unsigned __int8)v2056[(unsigned __int8)(v1210 + v2056[v1209])];
                                                                                                  v1207[1] ^= ((v1211 >> 4) | (16 * v1211)) - 92;
                                                                                                  ++v1207;
                                                                                                }
                                                                                                v1212 = dword_280F504;
                                                                                                dword_280F504 ^= dword_280F508;
                                                                                                v1213 = 0;
                                                                                                v2015 = (char *)dword_280F508;
                                                                                                do
                                                                                                {
                                                                                                  v2056[v1213] = v1213;
                                                                                                  ++v1213;
                                                                                                }
                                                                                                while ( v1213 != 256 );
                                                                                                LOBYTE(v1214) = 0;
                                                                                                for ( i72 = 0;
                                                                                                      i72 != 256;
                                                                                                      ++i72 )
                                                                                                {
                                                                                                  v1216 = v2056[i72];
                                                                                                  v1214 = (unsigned __int8)(v1214 + v1216 + *((_BYTE *)&v2016[-1] + (i72 & 3)));
                                                                                                  v2056[i72] = v2056[v1214];
                                                                                                  v2056[v1214] = v1216;
                                                                                                }
                                                                                                v1217 = 0;
                                                                                                v1218 = 0;
                                                                                                v1219 = (int)v2003 + v1212 + 131;
                                                                                                for ( i73 = v2005;
                                                                                                      i73 != (char *)v1219;
                                                                                                      ++i73 )
                                                                                                {
                                                                                                  v1218 = (unsigned __int8)(v1218 + 1);
                                                                                                  v1221 = v2056[v1218];
                                                                                                  v1217 = (unsigned __int8)(v1217 + v1221);
                                                                                                  v2056[v1218] = v2056[v1217];
                                                                                                  v2056[v1217] = v1221;
                                                                                                  v1222 = (unsigned __int8)v2056[(unsigned __int8)(v1221 + v2056[v1218])];
                                                                                                  i73[1] ^= ((v1222 >> 4) | (16 * v1222)) - 92;
                                                                                                }
                                                                                                ((void (__fastcall *)(int *, int, int, _BYTE *))v1185)(
                                                                                                  &dword_280F504,
                                                                                                  v1217,
                                                                                                  v1218,
                                                                                                  v2056);
LABEL_4055:
                                                                                                __asm { POP.W           {R4-R11,PC} }
                                                                                              }
                                                                                              v1879 = (char *)realloc(v1875, v1876);
                                                                                              if ( !v1879 )
                                                                                                goto LABEL_3832;
LABEL_3830:
                                                                                              v1875 = v1879;
                                                                                            }
                                                                                            v1875[v1872++] = v1877;
                                                                                            v1875[v1878] = 0;
                                                                                            goto LABEL_3832;
                                                                                          }
                                                                                          v1885 = v1872 + 2;
                                                                                          v1886 = HIBYTE(v2016[0]);
                                                                                          if ( v1872 + 2 < v1872 )
                                                                                            goto LABEL_3854;
                                                                                          v1887 = v1872 + 1;
                                                                                          if ( v1872 + 1 >= v1872 )
                                                                                          {
                                                                                            if ( v1885 < v1887 )
                                                                                              goto LABEL_3854;
                                                                                            if ( v1875 == v1813 )
                                                                                            {
                                                                                              if ( v1885 > v1887 )
                                                                                              {
                                                                                                v1888 = (char *)malloc(v1872 + 2);
                                                                                                if ( v1888 )
                                                                                                {
                                                                                                  *v1888 = 0;
                                                                                                  goto LABEL_3852;
                                                                                                }
                                                                                              }
LABEL_3854:
                                                                                              v1880 = v1872 + 6;
                                                                                              goto LABEL_3856;
                                                                                            }
                                                                                            v1888 = (char *)realloc(v1875, v1885);
                                                                                            if ( !v1888 )
                                                                                              goto LABEL_3854;
LABEL_3852:
                                                                                            v1875 = v1888;
                                                                                          }
                                                                                          v1875[v1872++] = v1886;
                                                                                          v1875[v1887] = 0;
                                                                                          goto LABEL_3854;
                                                                                        }
                                                                                        v1881 = v1872 + 2;
                                                                                        v1882 = BYTE1(v2016[0]);
                                                                                        if ( v1872 + 2 < v1872 )
                                                                                          goto LABEL_3843;
                                                                                        v1883 = v1872 + 1;
                                                                                        if ( v1872 + 1 >= v1872 )
                                                                                        {
                                                                                          if ( v1881 < v1883 )
                                                                                            goto LABEL_3843;
                                                                                          if ( v1875 == v1813 )
                                                                                          {
                                                                                            if ( v1881 > v1883 )
                                                                                            {
                                                                                              v1884 = (char *)malloc(v1872 + 2);
                                                                                              if ( v1884 )
                                                                                              {
                                                                                                *v1884 = 0;
                                                                                                goto LABEL_3841;
                                                                                              }
                                                                                            }
LABEL_3843:
                                                                                            v1880 = v1872 + 8;
                                                                                            goto LABEL_3856;
                                                                                          }
                                                                                          v1884 = (char *)realloc(v1875, v1881);
                                                                                          if ( !v1884 )
                                                                                            goto LABEL_3843;
LABEL_3841:
                                                                                          v1875 = v1884;
                                                                                        }
                                                                                        v1875[v1872++] = v1882;
                                                                                        v1875[v1883] = 0;
                                                                                        goto LABEL_3843;
                                                                                      }
                                                                                      v1870 = (char *)realloc(v1866, v1867);
                                                                                      if ( !v1870 )
                                                                                        goto LABEL_3815;
LABEL_3813:
                                                                                      v1866 = v1870;
                                                                                    }
                                                                                    v1866[v1863++] = v1868;
                                                                                    v1866[v1869] = 0;
                                                                                    goto LABEL_3815;
                                                                                  }
                                                                                  v1835 = (char *)realloc(v1831, v1832);
                                                                                  if ( !v1835 )
                                                                                    goto LABEL_3744;
LABEL_3742:
                                                                                  v1831 = v1835;
                                                                                }
                                                                                v1831[v1828++] = v1833;
                                                                                v1831[v1834] = 0;
                                                                                goto LABEL_3744;
                                                                              }
                                                                              v1841 = v1828 + 2;
                                                                              v1842 = HIBYTE(v2016[0]);
                                                                              if ( v1828 + 2 < v1828 )
                                                                                goto LABEL_3766;
                                                                              v1843 = v1828 + 1;
                                                                              if ( v1828 + 1 >= v1828 )
                                                                              {
                                                                                if ( v1841 < v1843 )
                                                                                  goto LABEL_3766;
                                                                                if ( v1831 == v1813 )
                                                                                {
                                                                                  if ( v1841 > v1843 )
                                                                                  {
                                                                                    v1844 = (char *)malloc(v1828 + 2);
                                                                                    if ( v1844 )
                                                                                    {
                                                                                      *v1844 = 0;
                                                                                      goto LABEL_3764;
                                                                                    }
                                                                                  }
LABEL_3766:
                                                                                  v1836 = v1828 + 6;
                                                                                  goto LABEL_3768;
                                                                                }
                                                                                v1844 = (char *)realloc(v1831, v1841);
                                                                                if ( !v1844 )
                                                                                  goto LABEL_3766;
LABEL_3764:
                                                                                v1831 = v1844;
                                                                              }
                                                                              v1831[v1828++] = v1842;
                                                                              v1831[v1843] = 0;
                                                                              goto LABEL_3766;
                                                                            }
                                                                            v1837 = v1828 + 2;
                                                                            v1838 = BYTE1(v2016[0]);
                                                                            if ( v1828 + 2 < v1828 )
                                                                              goto LABEL_3755;
                                                                            v1839 = v1828 + 1;
                                                                            if ( v1828 + 1 >= v1828 )
                                                                            {
                                                                              if ( v1837 < v1839 )
                                                                                goto LABEL_3755;
                                                                              if ( v1831 == v1813 )
                                                                              {
                                                                                if ( v1837 > v1839 )
                                                                                {
                                                                                  v1840 = (char *)malloc(v1828 + 2);
                                                                                  if ( v1840 )
                                                                                  {
                                                                                    *v1840 = 0;
                                                                                    goto LABEL_3753;
                                                                                  }
                                                                                }
LABEL_3755:
                                                                                v1836 = v1828 + 8;
                                                                                goto LABEL_3768;
                                                                              }
                                                                              v1840 = (char *)realloc(v1831, v1837);
                                                                              if ( !v1840 )
                                                                                goto LABEL_3755;
LABEL_3753:
                                                                              v1831 = v1840;
                                                                            }
                                                                            v1831[v1828++] = v1838;
                                                                            v1831[v1839] = 0;
                                                                            goto LABEL_3755;
                                                                          }
                                                                          v1825 = realloc((void *)v1987, v1822);
                                                                          if ( !v1825 )
                                                                            goto LABEL_3727;
LABEL_3725:
                                                                          v1987 = (unsigned int)v1825;
                                                                        }
                                                                        v1826 = v1987;
                                                                        *(_BYTE *)(v1987 + v1819++) = v1823;
                                                                        *(_BYTE *)(v1826 + v1824) = 0;
                                                                        goto LABEL_3727;
                                                                      }
                                                                      v1791 = (char *)realloc(v1787, v1788);
                                                                      if ( !v1791 )
                                                                        goto LABEL_3648;
LABEL_3646:
                                                                      v1787 = v1791;
                                                                    }
                                                                    v1787[v1784++] = v1789;
                                                                    v1787[v1790] = 0;
                                                                    goto LABEL_3648;
                                                                  }
                                                                  v1797 = v1784 + 2;
                                                                  v1798 = HIBYTE(v2016[0]);
                                                                  if ( v1784 + 2 < v1784 )
                                                                    goto LABEL_3670;
                                                                  v1799 = v1784 + 1;
                                                                  if ( v1784 + 1 >= v1784 )
                                                                  {
                                                                    if ( v1797 < v1799 )
                                                                      goto LABEL_3670;
                                                                    if ( v1787 == v1724 )
                                                                    {
                                                                      if ( v1797 > v1799 )
                                                                      {
                                                                        v1800 = (char *)malloc(v1784 + 2);
                                                                        if ( v1800 )
                                                                        {
                                                                          *v1800 = 0;
                                                                          goto LABEL_3668;
                                                                        }
                                                                      }
LABEL_3670:
                                                                      v1792 = v1784 + 6;
                                                                      goto LABEL_3672;
                                                                    }
                                                                    v1800 = (char *)realloc(v1787, v1797);
                                                                    if ( !v1800 )
                                                                      goto LABEL_3670;
LABEL_3668:
                                                                    v1787 = v1800;
                                                                  }
                                                                  v1787[v1784++] = v1798;
                                                                  v1787[v1799] = 0;
                                                                  goto LABEL_3670;
                                                                }
                                                                v1793 = v1784 + 2;
                                                                v1794 = BYTE1(v2016[0]);
                                                                if ( v1784 + 2 < v1784 )
                                                                  goto LABEL_3659;
                                                                v1795 = v1784 + 1;
                                                                if ( v1784 + 1 >= v1784 )
                                                                {
                                                                  if ( v1793 < v1795 )
                                                                    goto LABEL_3659;
                                                                  if ( v1787 == v1724 )
                                                                  {
                                                                    if ( v1793 > v1795 )
                                                                    {
                                                                      v1796 = (char *)malloc(v1784 + 2);
                                                                      if ( v1796 )
                                                                      {
                                                                        *v1796 = 0;
                                                                        goto LABEL_3657;
                                                                      }
                                                                    }
LABEL_3659:
                                                                    v1792 = v1784 + 8;
                                                                    goto LABEL_3672;
                                                                  }
                                                                  v1796 = (char *)realloc(v1787, v1793);
                                                                  if ( !v1796 )
                                                                    goto LABEL_3659;
LABEL_3657:
                                                                  v1787 = v1796;
                                                                }
                                                                v1787[v1784++] = v1794;
                                                                v1787[v1795] = 0;
                                                                goto LABEL_3659;
                                                              }
                                                              v1782 = (char *)realloc(v1778, v1779);
                                                              if ( !v1782 )
                                                                goto LABEL_3631;
LABEL_3629:
                                                              v1778 = v1782;
                                                            }
                                                            v1778[v1775++] = v1780;
                                                            v1778[v1781] = 0;
                                                            goto LABEL_3631;
                                                          }
                                                          v1746 = (char *)realloc(v1742, v1743);
                                                          if ( !v1746 )
                                                            goto LABEL_3560;
LABEL_3558:
                                                          v1742 = v1746;
                                                        }
                                                        v1742[v1739++] = v1744;
                                                        v1742[v1745] = 0;
                                                        goto LABEL_3560;
                                                      }
                                                      v1752 = v1739 + 2;
                                                      v1753 = HIBYTE(v2016[0]);
                                                      if ( v1739 + 2 < v1739 )
                                                        goto LABEL_3582;
                                                      v1754 = v1739 + 1;
                                                      if ( v1739 + 1 >= v1739 )
                                                      {
                                                        if ( v1752 < v1754 )
                                                          goto LABEL_3582;
                                                        if ( v1742 == v1724 )
                                                        {
                                                          if ( v1752 > v1754 )
                                                          {
                                                            v1755 = (char *)malloc(v1739 + 2);
                                                            if ( v1755 )
                                                            {
                                                              *v1755 = 0;
                                                              goto LABEL_3580;
                                                            }
                                                          }
LABEL_3582:
                                                          v1747 = v1739 + 6;
                                                          goto LABEL_3584;
                                                        }
                                                        v1755 = (char *)realloc(v1742, v1752);
                                                        if ( !v1755 )
                                                          goto LABEL_3582;
LABEL_3580:
                                                        v1742 = v1755;
                                                      }
                                                      v1742[v1739++] = v1753;
                                                      v1742[v1754] = 0;
                                                      goto LABEL_3582;
                                                    }
                                                    v1748 = v1739 + 2;
                                                    v1749 = BYTE1(v2016[0]);
                                                    if ( v1739 + 2 < v1739 )
                                                      goto LABEL_3571;
                                                    v1750 = v1739 + 1;
                                                    if ( v1739 + 1 >= v1739 )
                                                    {
                                                      if ( v1748 < v1750 )
                                                        goto LABEL_3571;
                                                      if ( v1742 == v1724 )
                                                      {
                                                        if ( v1748 > v1750 )
                                                        {
                                                          v1751 = (char *)malloc(v1739 + 2);
                                                          if ( v1751 )
                                                          {
                                                            *v1751 = 0;
                                                            goto LABEL_3569;
                                                          }
                                                        }
LABEL_3571:
                                                        v1747 = v1739 + 8;
                                                        goto LABEL_3584;
                                                      }
                                                      v1751 = (char *)realloc(v1742, v1748);
                                                      if ( !v1751 )
                                                        goto LABEL_3571;
LABEL_3569:
                                                      v1742 = v1751;
                                                    }
                                                    v1742[v1739++] = v1749;
                                                    v1742[v1750] = 0;
                                                    goto LABEL_3571;
                                                  }
                                                  v1737 = (char *)realloc(v1733, v1734);
                                                  if ( !v1737 )
                                                    goto LABEL_3543;
LABEL_3541:
                                                  v1733 = v1737;
                                                }
                                                v1733[v1730++] = v1735;
                                                v1733[v1736] = 0;
                                                goto LABEL_3543;
                                              }
                                              *(_DWORD *)&v1982[4 * v604[28]] = 4 * i63;
                                              *(_DWORD *)(v1984 + 4 * v604[28]++) = v1120;
                                              v1121 = *(_DWORD *)&v1118[v1116 - 8];
                                              if ( (v1121 & 0xFE000000) == 0xFA000000 )
                                              {
                                                v1122 = 17;
                                              }
                                              else if ( (v1121 & 0xF000000) == 0xB000000 )
                                              {
                                                v1122 = 18;
                                              }
                                              else if ( (v1121 & 0xF000000) == 0xA000000 )
                                              {
                                                v1122 = 19;
                                              }
                                              else if ( (v1121 & 0xFF000FF) == 0x120001F )
                                              {
                                                v1122 = 20;
                                              }
                                              else if ( (v1121 & 0xFEF0010) == 0x8F0000 )
                                              {
                                                v1122 = 21;
                                              }
                                              else if ( (v1121 & 0xFFF0000) == 0x28F0000 )
                                              {
                                                v1122 = 22;
                                              }
                                              else if ( (v1121 & 0xFFF0000) == 0x24F0000 )
                                              {
                                                v1122 = 23;
                                              }
                                              else if ( (v1121 & 0xE5F0000) == 0x41F0000 )
                                              {
                                                v1122 = 25;
                                              }
                                              else if ( (v1121 & 0xFE00FFF) == 0x1A0000F )
                                              {
                                                v1122 = 24;
                                              }
                                              else
                                              {
                                                v1122 = 26;
                                              }
                                              if ( (unsigned int)(v1122 - 17) > 3 )
                                              {
                                                if ( v1122 == 21 )
                                                {
                                                  for ( i74 = 12;
                                                        i74 == (unsigned __int16)v1121 >> 12
                                                     || i74 == (*(_DWORD *)&v1118[v1116 - 8] & 0xF);
                                                        --i74 )
                                                  {
                                                    ;
                                                  }
                                                  v1061 += 6;
                                                  *(_DWORD *)(v806 + v1120) = (i74 << 12) | 0xE52D0004;
                                                  v1128 = (_DWORD *)(v1120 + v806);
                                                  v1128[2] = v1121 & 0xFFF0FFFF | (i74 << 16);
                                                  v1128[4] = -493883392;
                                                  v1128[1] = (i74 << 12) | 0xE59F0008;
                                                  v1128[3] = (i74 << 12) | 0xE49D0004;
                                                  v1128[5] = v1116;
                                                }
                                                else
                                                {
                                                  if ( (unsigned int)(v1122 - 22) <= 3 )
                                                  {
                                                    if ( (unsigned int)(v1122 - 22) <= 1 || v1122 == 25 )
                                                    {
                                                      v1129 = *(_DWORD *)&v1118[v1116 - 8] & 0xFFF;
                                                      switch ( v1122 )
                                                      {
                                                        case 22:
                                                          v1130 = v1129 + v1116;
                                                          goto LABEL_2186;
                                                        case 23:
                                                          v1130 = v1116 - v1129;
                                                          goto LABEL_2186;
                                                        case 25:
                                                          if ( (v1121 & 0x800000) != 0 )
                                                          {
                                                            v1130 = *(_DWORD *)(v1129 + v1116);
LABEL_2186:
                                                            v1990 = v1130;
                                                          }
                                                          else
                                                          {
                                                            v1990 = *(_DWORD *)(v1116 - v1129);
                                                          }
                                                          break;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      v1990 = v1116;
                                                    }
                                                    v1131 = v1990;
                                                    v1061 += 3;
                                                    *(_DWORD *)(v806 + v1120) = ((unsigned __int16)v1121 >> 12 << 12)
                                                                              | 0xE51F0000;
                                                    v1132 = v1120 + v806;
                                                    *(_DWORD *)(v1132 + 4) = -493883392;
                                                    *(_DWORD *)(v1132 + 8) = v1131;
                                                    goto LABEL_2191;
                                                  }
                                                  ++v1061;
                                                  *(_DWORD *)(v806 + v1120) = v1121;
                                                }
                                              }
                                              else
                                              {
                                                if ( (unsigned int)(v1122 - 17) <= 1 )
                                                {
                                                  ++v1061;
                                                  *(_DWORD *)(v806 + v1120) = -493887484;
                                                }
                                                *(_DWORD *)(v806 + 4 * v1061) = -450891772;
                                                if ( v1122 == 17 )
                                                {
                                                  v1123 = v1121 & 0x1000000;
                                                  v1124 = (4 * (v1121 & 0xFFFFFF)) | ((v1121 & 0x1000000u) >> 23);
                                                }
                                                else
                                                {
                                                  v1123 = v1122 - 18;
                                                  if ( (unsigned int)(v1122 - 18) > 1 )
                                                    v1124 = 0;
                                                  else
                                                    v1124 = v1121 & 0xFFFFFF;
                                                  if ( (unsigned int)(v1122 - 18) <= 1 )
                                                    v1124 *= 4;
                                                }
                                                v1125 = 4 * v1061 + v806;
                                                if ( v1124 >> 25 )
                                                  v1124 |= 0xFC000000;
                                                v1126 = v1122 == 17;
                                                if ( v1122 == 17 )
                                                  v1123 = v1116 + 1;
                                                else
                                                  v1122 = v1124 + v1116;
                                                if ( v1126 )
                                                  v1122 = v1124 + v1123;
                                                v1061 += 2;
                                                *(_DWORD *)(v1125 + 4) = v1122;
                                              }
LABEL_2191:
                                              v1116 += 4;
                                            }
                                          }
                                          v1053 = v1040 + 2;
                                          v1054 = HIBYTE(v2016[0]);
                                          if ( v1040 + 2 >= v1040 )
                                          {
                                            v1055 = v1040 + 1;
                                            if ( v1040 + 1 < v1040 )
                                            {
LABEL_2009:
                                              v1043[v1040++] = v1054;
                                              v1043[v1055] = 0;
                                              goto LABEL_2010;
                                            }
                                            if ( v1053 >= v1055 )
                                            {
                                              if ( v1043 == v1025 )
                                              {
                                                if ( v1053 <= v1055 )
                                                  goto LABEL_2010;
                                                v1056 = (char *)malloc(v1040 + 2);
                                                if ( !v1056 )
                                                  goto LABEL_2010;
                                                *v1056 = 0;
                                                goto LABEL_2008;
                                              }
                                              v1056 = (char *)realloc(v1043, v1053);
                                              if ( v1056 )
                                              {
LABEL_2008:
                                                v1043 = v1056;
                                                goto LABEL_2009;
                                              }
                                            }
                                          }
LABEL_2010:
                                          v1048 = v1040 + 6;
                                          goto LABEL_2012;
                                        }
                                        v1049 = v1040 + 2;
                                        v1050 = BYTE1(v2016[0]);
                                        if ( v1040 + 2 >= v1040 )
                                        {
                                          v1051 = v1040 + 1;
                                          if ( v1040 + 1 < v1040 )
                                          {
LABEL_1998:
                                            v1043[v1040++] = v1050;
                                            v1043[v1051] = 0;
                                            goto LABEL_1999;
                                          }
                                          if ( v1049 >= v1051 )
                                          {
                                            if ( v1043 == v1025 )
                                            {
                                              if ( v1049 <= v1051 )
                                                goto LABEL_1999;
                                              v1052 = (char *)malloc(v1040 + 2);
                                              if ( !v1052 )
                                                goto LABEL_1999;
                                              *v1052 = 0;
                                              goto LABEL_1997;
                                            }
                                            v1052 = (char *)realloc(v1043, v1049);
                                            if ( v1052 )
                                            {
LABEL_1997:
                                              v1043 = v1052;
                                              goto LABEL_1998;
                                            }
                                          }
                                        }
LABEL_1999:
                                        v1048 = v1040 + 8;
                                        goto LABEL_2012;
                                      }
                                    }
                                  }
                                  v1040 = 0;
                                }
                                else
                                {
                                  v1040 = 0;
                                }
                                v1043 = v1025;
                                goto LABEL_1975;
                              }
                            }
                          }
LABEL_58:
                          v2039 = 17;
                          v2035 = 5;
                          v2046 = 17;
                          v2036 = 11;
                          v2047 = 6;
                          v2037 = 44;
                          v2048 = 23;
                          v2038 = 43;
                          v2049 = 90;
                          v2040 = 60;
                          v2050 = 93;
                          v2041 = 28;
                          v2051 = 28;
                          v2053 = 0;
                          v2052 = 111;
                          v58 = &v2051;
                          v2042 = 4;
                          v2043 = 34;
                          v2044 = 29;
                          v2045 = 27;
                          do
                          {
                            v59 = *v58--;
                            v58[1] = v59 ^ v58[2];
                          }
                          while ( v58 != &v2034 );
                          strcpy(v2021, " ac`l \\neo fra\\");
                          for ( i75 = 0; i75 != 15; ++i75 )
                          {
                            v61 = (unsigned __int8)v2021[i75] ^ 0x3C;
                            if ( v61 + 19 > 255 )
                              v2021[i75] = v61 + 20;
                            else
                              v2021[i75] = v61 + 19;
                          }
                          v62 = 0;
                          LOWORD(v2014) = 114;
                          strcpy(v2020, "%X\"$l# Y");
                          do
                          {
                            v63 = (unsigned __int8)v2020[v62] ^ 0x64;
                            if ( v63 + 37 > 255 )
                              v2020[v62] = v63 + 38;
                            else
                              v2020[v62] = v63 + 37;
                            ++v62;
                          }
                          while ( v62 != 8 );
                          v2015 = 0;
                          v64 = *v1989;
                          v2016[0] = 0;
                          v57 = (char *)(*(int (__fastcall **)(char *))(v64 + 76))(v2021);
                          if ( v57 )
                          {
                            memset(v2056, 0, 0x400u);
                            while ( (*(int (__fastcall **)(_BYTE *, int, char *))(*v1989 + 80))(v2056, 1023, v57) )
                            {
                              v65 = (*(int (__fastcall **)(_BYTE *, char *))(*v1989 + 28))(v2056, v2020);
                              if ( !v65 && (*(int (__fastcall **)(_BYTE *, char *))(*v1989 + 28))(v2056, &v2035) )
                              {
                                v2019[0] = -48;
                                v2019[1] = 24;
                                v2019[2] = 100;
                                v2019[3] = -40;
                                v2019[4] = -48;
                                v2019[5] = 24;
                                strcpy(&v2019[6], "d");
                                do
                                {
                                  v66 = (unsigned __int8)v2019[v65] ^ 0x20;
                                  if ( v66 + 52 > 255 )
                                    v2019[v65] = v66 + 53;
                                  else
                                    v2019[v65] = v66 + 52;
                                  ++v65;
                                }
                                while ( v65 != 7 );
                                (*(void (__fastcall **)(_BYTE *, char *, char **, _DWORD *))(*v1989 + 60))(
                                  v2056,
                                  v2019,
                                  &v2015,
                                  v2016);
                                if ( *(_DWORD *)v2015 == 1179403647 )
                                {
                                  (*(void (__fastcall **)(char *))(*v1989 + 84))(v57);
                                  v57 = v2015;
                                  goto LABEL_83;
                                }
                              }
                            }
                            v67 = v57;
                            v57 = 0;
                            (*(void (__fastcall **)(char *))(*v1989 + 84))(v67);
                          }
                          goto LABEL_83;
                        }
                        v1299 = (char *)realloc(v1295, v1296);
                        if ( !v1299 )
                          goto LABEL_2469;
LABEL_2467:
                        v1295 = v1299;
                      }
                      v1295[v1292++] = v1297;
                      v1295[v1298] = 0;
                      goto LABEL_2469;
                    }
                    v1305 = v1292 + 2;
                    v1306 = HIBYTE(v2016[0]);
                    if ( v1292 + 2 >= v1292 )
                    {
                      v1307 = v1292 + 1;
                      if ( v1292 + 1 < v1292 )
                      {
LABEL_2490:
                        v1295[v1292++] = v1306;
                        v1295[v1307] = 0;
                        goto LABEL_2491;
                      }
                      if ( v1305 >= v1307 )
                      {
                        if ( v1295 == v1233 )
                        {
                          if ( v1305 <= v1307 )
                            goto LABEL_2491;
                          v1308 = (char *)malloc(v1292 + 2);
                          if ( !v1308 )
                            goto LABEL_2491;
                          *v1308 = 0;
                          goto LABEL_2489;
                        }
                        v1308 = (char *)realloc(v1295, v1305);
                        if ( v1308 )
                        {
LABEL_2489:
                          v1295 = v1308;
                          goto LABEL_2490;
                        }
                      }
                    }
LABEL_2491:
                    v1300 = v1292 + 6;
                    goto LABEL_2493;
                  }
                  v1301 = v1292 + 2;
                  v1302 = BYTE1(v2016[0]);
                  if ( v1292 + 2 >= v1292 )
                  {
                    v1303 = v1292 + 1;
                    if ( v1292 + 1 < v1292 )
                    {
LABEL_2479:
                      v1295[v1292++] = v1302;
                      v1295[v1303] = 0;
                      goto LABEL_2480;
                    }
                    if ( v1301 >= v1303 )
                    {
                      if ( v1295 == v1233 )
                      {
                        if ( v1301 <= v1303 )
                          goto LABEL_2480;
                        v1304 = (char *)malloc(v1292 + 2);
                        if ( !v1304 )
                          goto LABEL_2480;
                        *v1304 = 0;
                        goto LABEL_2478;
                      }
                      v1304 = (char *)realloc(v1295, v1301);
                      if ( v1304 )
                      {
LABEL_2478:
                        v1295 = v1304;
                        goto LABEL_2479;
                      }
                    }
                  }
LABEL_2480:
                  v1300 = v1292 + 8;
                  goto LABEL_2493;
                }
                v1290 = (char *)realloc(v1286, v1287);
                if ( !v1290 )
                  goto LABEL_2452;
LABEL_2450:
                v1286 = v1290;
              }
              v1286[v1283++] = v1288;
              v1286[v1289] = 0;
              goto LABEL_2452;
            }
            v1255 = (char *)realloc(v1251, v1252);
            if ( !v1255 )
              goto LABEL_2381;
LABEL_2379:
            v1251 = v1255;
          }
          v1251[v1248++] = v1253;
          v1251[v1254] = 0;
          goto LABEL_2381;
        }
        v1261 = v1248 + 2;
        v1262 = HIBYTE(v2016[0]);
        if ( v1248 + 2 >= v1248 )
        {
          v1263 = v1248 + 1;
          if ( v1248 + 1 < v1248 )
          {
LABEL_2402:
            v1251[v1248++] = v1262;
            v1251[v1263] = 0;
            goto LABEL_2403;
          }
          if ( v1261 >= v1263 )
          {
            if ( v1251 == v1233 )
            {
              if ( v1261 <= v1263 )
                goto LABEL_2403;
              v1264 = (char *)malloc(v1248 + 2);
              if ( !v1264 )
                goto LABEL_2403;
              *v1264 = 0;
              goto LABEL_2401;
            }
            v1264 = (char *)realloc(v1251, v1261);
            if ( v1264 )
            {
LABEL_2401:
              v1251 = v1264;
              goto LABEL_2402;
            }
          }
        }
LABEL_2403:
        v1256 = v1248 + 6;
        goto LABEL_2405;
      }
      v1257 = v1248 + 2;
      v1258 = BYTE1(v2016[0]);
      if ( v1248 + 2 >= v1248 )
      {
        v1259 = v1248 + 1;
        if ( v1248 + 1 < v1248 )
        {
LABEL_2391:
          v1251[v1248++] = v1258;
          v1251[v1259] = 0;
          goto LABEL_2392;
        }
        if ( v1257 >= v1259 )
        {
          if ( v1251 == v1233 )
          {
            if ( v1257 <= v1259 )
              goto LABEL_2392;
            v1260 = (char *)malloc(v1248 + 2);
            if ( !v1260 )
              goto LABEL_2392;
            *v1260 = 0;
            goto LABEL_2390;
          }
          v1260 = (char *)realloc(v1251, v1257);
          if ( v1260 )
          {
LABEL_2390:
            v1251 = v1260;
            goto LABEL_2391;
          }
        }
      }
LABEL_2392:
      v1256 = v1248 + 8;
      goto LABEL_2405;
    }
    v1246 = (char *)realloc(v1242, v1243);
    if ( !v1246 )
      goto LABEL_2364;
LABEL_2362:
    v1242 = v1246;
  }
  v1242[v1239++] = v1244;
  v1242[v1245] = 0;
  goto LABEL_2364;
}